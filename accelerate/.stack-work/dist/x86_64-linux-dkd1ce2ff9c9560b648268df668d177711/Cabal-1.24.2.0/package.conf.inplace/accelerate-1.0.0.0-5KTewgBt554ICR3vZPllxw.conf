name: accelerate
version: 1.0.0.0
id: accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw
key: accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw
license: BSD3
maintainer: Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
stability: Experimental
homepage: https://github.com/AccelerateHS/accelerate/
synopsis: An embedded language for accelerated array processing
description:
    @Data.Array.Accelerate@ defines an embedded array language for computations
    for high-performance computing in Haskell. Computations on multi-dimensional,
    regular arrays are expressed in the form of parameterised collective
    operations, such as maps, reductions, and permutations. These computations may
    then be online compiled and executed on a range of architectures.
    .
    [/A simple example/]
    .
    As a simple example, consider the computation of a dot product of two vectors
    of floating point numbers:
    .
    > dotp :: Acc (Vector Float) -> Acc (Vector Float) -> Acc (Scalar Float)
    > dotp xs ys = fold (+) 0 (zipWith (*) xs ys)
    .
    Except for the type, this code is almost the same as the corresponding Haskell
    code on lists of floats. The types indicate that the computation may be
    online-compiled for performance - for example, using
    @Data.Array.Accelerate.LLVM.PTX@ it may be on-the-fly off-loaded to the GPU.
    .
    [/Additional components/]
    .
    The following supported add-ons are available as separate packages. Install
    them from Hackage with @cabal install \<package\>@
    .
    * @accelerate-llvm-native@: Backend supporting parallel execution on
    multicore CPUs.
    .
    * @accelerate-llvm-ptx@: Backend supporting parallel execution on
    CUDA-capable NVIDIA GPUs. Requires a GPU with compute capability 2.0 or
    greater. See the following table for supported GPUs:
    <http://en.wikipedia.org/wiki/CUDA#Supported_GPUs>
    .
    * @accelerate-cuda@: Backend targeting CUDA-enabled NVIDIA GPUs. Requires
    a GPU with compute compatibility 1.2 or greater. /NOTE: This backend is
    being deprecated in favour of @accelerate-llvm-ptx@./
    .
    * @accelerate-examples@: Computational kernels and applications showcasing
    the use of Accelerate as well as a regression test suite, supporting
    function and performance testing.
    .
    * @accelerate-io@: Fast conversions between Accelerate arrays and other
    array formats (including vector and repa).
    .
    * @accelerate-fft@: Discrete Fourier transforms, with FFI bindings to
    optimised implementations.
    .
    * @accelerate-bignum@: Fixed-width large integer arithmetic.
    .
    * @colour-accelerate@: Colour representations in Accelerate (RGB, sRGB, HSV,
    and HSL).
    .
    * @gloss-accelerate@: Generate gloss pictures from Accelerate.
    .
    * @gloss-raster-accelerate@: Parallel rendering of raster images and
    animations.
    .
    * @lens-accelerate@: Lens operators for Accelerate types.
    .
    * @linear-accelerate@: Linear vector spaces in Accelerate.
    .
    * @mwc-random-accelerate@: Generate Accelerate arrays filled with high
    quality pseudorandom numbers.
    .
    [/Examples and documentation/]
    .
    Haddock documentation is included in the package
    .
    The @accelerate-examples@ package demonstrates a range of computational
    kernels and several complete applications, including:
    .
    * An implementation of the Canny edge detection algorithm
    .
    * An interactive Mandelbrot set generator
    .
    * A particle-based simulation of stable fluid flows
    .
    * An /n/-body simulation of gravitational attraction between solid particles
    .
    * An implementation of the PageRank algorithm
    .
    * A simple interactive ray tracer
    .
    * A particle based simulation of stable fluid flows
    .
    * A cellular automata simulation
    .
    * A \"password recovery\" tool, for dictionary lookup of MD5 hashes
    .
    @lulesh-accelerate@ is an implementation of the Livermore Unstructured
    Lagrangian Explicit Shock Hydrodynamics (LULESH) mini-app. LULESH represents a
    typical hydrodynamics code such as ALE3D, but is highly simplified and
    hard-coded to solve the Sedov blast problem on an unstructured hexahedron
    mesh.
    .
    [/Mailing list and contacts/]
    .
    * Mailing list: <accelerate-haskell@googlegroups.com> (discussion of both
    use and development welcome).
    .
    * Sign up for the mailing list here:
    <http://groups.google.com/group/accelerate-haskell>
    .
    * Bug reports and issue tracking:
    <https://github.com/AccelerateHS/accelerate/issues>
    .
category: Compilers/Interpreters, Concurrency, Data, Parallelism
author: Manuel M T Chakravarty,
        Robert Clifton-Everest,
        Gabriele Keller,
        Ben Lever,
        Trevor L. McDonell,
        Ryan Newtown,
        Sean Seefried
exposed: True
exposed-modules:
    Data.Array.Accelerate Data.Array.Accelerate.Interpreter
    Data.Array.Accelerate.Data.Bits Data.Array.Accelerate.Data.Complex
    Data.Array.Accelerate.Data.Fold Data.Array.Accelerate.Data.Monoid
    Data.Array.Accelerate.AST Data.Array.Accelerate.Analysis.Hash
    Data.Array.Accelerate.Analysis.Match
    Data.Array.Accelerate.Analysis.Shape
    Data.Array.Accelerate.Analysis.Stencil
    Data.Array.Accelerate.Analysis.Type
    Data.Array.Accelerate.Array.Data Data.Array.Accelerate.Array.Remote
    Data.Array.Accelerate.Array.Remote.Class
    Data.Array.Accelerate.Array.Remote.LRU
    Data.Array.Accelerate.Array.Remote.Table
    Data.Array.Accelerate.Array.Representation
    Data.Array.Accelerate.Array.Sugar
    Data.Array.Accelerate.Array.Unique Data.Array.Accelerate.Async
    Data.Array.Accelerate.Debug Data.Array.Accelerate.Error
    Data.Array.Accelerate.FullList Data.Array.Accelerate.Lifetime
    Data.Array.Accelerate.Pretty Data.Array.Accelerate.Product
    Data.Array.Accelerate.Smart Data.Array.Accelerate.Trafo
    Data.Array.Accelerate.Trafo.Sharing Data.Array.Accelerate.Type
hidden-modules: Data.Atomic Data.Array.Accelerate.Analysis.Hash.TH
                Data.Array.Accelerate.Array.Lifted
                Data.Array.Accelerate.Array.Remote.Nursery
                Data.Array.Accelerate.Classes Data.Array.Accelerate.Classes.Bounded
                Data.Array.Accelerate.Classes.Enum Data.Array.Accelerate.Classes.Eq
                Data.Array.Accelerate.Classes.Floating
                Data.Array.Accelerate.Classes.Fractional
                Data.Array.Accelerate.Classes.FromIntegral
                Data.Array.Accelerate.Classes.Integral
                Data.Array.Accelerate.Classes.Num Data.Array.Accelerate.Classes.Ord
                Data.Array.Accelerate.Classes.Real
                Data.Array.Accelerate.Classes.RealFloat
                Data.Array.Accelerate.Classes.RealFrac
                Data.Array.Accelerate.Classes.ToFloating
                Data.Array.Accelerate.Debug.Flags
                Data.Array.Accelerate.Debug.Monitoring
                Data.Array.Accelerate.Debug.Stats Data.Array.Accelerate.Debug.Timed
                Data.Array.Accelerate.Debug.Trace Data.Array.Accelerate.Language
                Data.Array.Accelerate.Lift Data.Array.Accelerate.Prelude
                Data.Array.Accelerate.Pretty.Graphviz
                Data.Array.Accelerate.Pretty.Graphviz.Monad
                Data.Array.Accelerate.Pretty.Graphviz.Type
                Data.Array.Accelerate.Pretty.Print
                Data.Array.Accelerate.Trafo.Algebra
                Data.Array.Accelerate.Trafo.Base Data.Array.Accelerate.Trafo.Fusion
                Data.Array.Accelerate.Trafo.Rewrite
                Data.Array.Accelerate.Trafo.Shrink
                Data.Array.Accelerate.Trafo.Simplify
                Data.Array.Accelerate.Trafo.Substitution
abi: 
trusted: False
import-dirs: /home/pwoh/Thesis/accelerate-tf/accelerate/.stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/build
library-dirs: /home/pwoh/Thesis/accelerate-tf/accelerate/.stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/build
dynamic-library-dirs: /home/pwoh/Thesis/accelerate-tf/accelerate/.stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/build
data-dir: /home/pwoh/Thesis/accelerate-tf/accelerate
hs-libraries: HSaccelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw
depends:
    base-4.9.1.0 base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
    containers-0.5.7.1 deepseq-1.4.2.0 directory-1.3.0.0
    exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
    fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt filepath-1.4.1.1
    ghc-prim-0.5.0.0 hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
    hashtables-1.2.1.1-CvCXxmZFzjODUwEtnf4YU7
    mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6 pretty-1.1.3.3
    template-haskell-2.11.1.0 time-1.6.0.1 transformers-0.5.2.0
    unique-0-9CJQKYGbqiDaFUmoekKeA unix-2.7.2.1
    unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
haddock-interfaces: /home/pwoh/Thesis/accelerate-tf/accelerate/.stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/doc/html/accelerate/accelerate.haddock
haddock-html: /home/pwoh/Thesis/accelerate-tf/accelerate/.stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/doc/html/accelerate
