
==================== FINAL INTERFACE ====================
2017-08-29 05:26:52.289126 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Atomic 8002
  interface hash: 28721c21a7b14f7b79243b7e0b51d949
  ABI hash: 2ad5ea1d324231ccf44094f666e45848
  export-list hash: 2b564e7593a8ba04354e2cb7036ae38b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f8f1040608401e744947bc20467725cd
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Atomic.add
  Data.Atomic.and
  Data.Atomic.new
  Data.Atomic.Atomic
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Int 07f5a36c488acfe0ac32e81c7536b8ff
import  -/  base-4.9.1.0:Foreign.ForeignPtr a57f95ad34cceecd3d53cb6caf640c90
import  -/  base-4.9.1.0:Foreign.ForeignPtr.Imp 983e41bceaf3a479584f5f15468ec17c
import  -/  base-4.9.1.0:Foreign.Ptr 436587875917047a95f3be0fc1891fc4
import  -/  base-4.9.1.0:Foreign.Storable 085c8d7f42ceec1dbb4e818f06339b9d
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.ForeignPtr 20e761047d2a09f17f566a747b24664a
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.Ptr 427a6ad9312f04edb98e0f5b7c4e2596
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
282f36b83b5c2411c7abeb3e3b3b8610
  $tc'Atomic :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8324431439727755107##
                   3700975575777623054##
                   Data.Atomic.$trModule
                   Data.Atomic.$tc'Atomic1) -}
39383b93f3a15c1fc1079905d51b3639
  $tc'Atomic1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Atomic"#) -}
98868e08e503076fb989611f8164cba0
  $tcAtomic :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14921783091603349869##
                   10679647718201786722##
                   Data.Atomic.$trModule
                   Data.Atomic.$tcAtomic1) -}
b7f14ada6972b6c7660532941607b489
  $tcAtomic1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Atomic"#) -}
8879795b6b17889655806b3630281c78
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Atomic.$trModule2
                   Data.Atomic.$trModule1) -}
fc49cdae29c7d838565b27dfb43ce9f1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Data.Atomic"#) -}
faf3f385b6d6434ec2cb8a28e867f3c4
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
e2715a9ae494e76995546f4acdac22b9
  newtype Atomic = Atomic (GHC.ForeignPtr.ForeignPtr GHC.Int.Int64)
7938cb83133f88a44668bd39b7334544
  add ::
    Data.Atomic.Atomic -> GHC.Int.Int64 -> GHC.Types.IO GHC.Int.Int64
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Atomic.add1
                  `cast`
                (<Data.Atomic.Atomic>_R
                 ->_R <GHC.Int.Int64>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)) -}
6c8f2ce2a911d6ccb11a38ee64f04f3c
  add1 ::
    Data.Atomic.Atomic
    -> GHC.Int.Int64
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int64 #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Data.Atomic.Atomic)
                   (v :: GHC.Int.Int64)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds
                        `cast`
                      (Data.Atomic.N:Atomic[0]) of wild { GHC.ForeignPtr.ForeignPtr fo ds1 ->
                 case v of ds2 { GHC.Int.I64# ds3 ->
                 case {__pkg_ccall accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw hs_atomic_fetch_and_add_64 GHC.Prim.Addr#
                                                                                                                           -> GHC.Prim.Int#
                                                                                                                           -> GHC.Prim.State#
                                                                                                                                GHC.Prim.RealWorld
                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                 GHC.Prim.Int# #)}
                        fo
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.ForeignPtr.ForeignPtrContents
                        ds1
                        ds4 of s' { DEFAULT ->
                 (# s', GHC.Int.I64# ds5 #) } } } }) -}
072192e49a2992a433651df5a7f1e3ea
  and ::
    Data.Atomic.Atomic -> GHC.Int.Int64 -> GHC.Types.IO GHC.Int.Int64
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Atomic.and1
                  `cast`
                (<Data.Atomic.Atomic>_R
                 ->_R <GHC.Int.Int64>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int64>_R)) -}
dfd6e1b33f9ee2f089b147a2807b0894
  and1 ::
    Data.Atomic.Atomic
    -> GHC.Int.Int64
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int64 #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SL),1*U(U,U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Data.Atomic.Atomic)
                   (v :: GHC.Int.Int64)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds
                        `cast`
                      (Data.Atomic.N:Atomic[0]) of wild { GHC.ForeignPtr.ForeignPtr fo ds1 ->
                 case v of ds2 { GHC.Int.I64# ds3 ->
                 case {__pkg_ccall accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw hs_atomic_fetch_and_and_64 GHC.Prim.Addr#
                                                                                                                           -> GHC.Prim.Int#
                                                                                                                           -> GHC.Prim.State#
                                                                                                                                GHC.Prim.RealWorld
                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                 GHC.Prim.Int# #)}
                        fo
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.ForeignPtr.ForeignPtrContents
                        ds1
                        ds4 of s' { DEFAULT ->
                 (# s', GHC.Int.I64# ds5 #) } } } }) -}
ff461c780c7f58ba48cb99affa0a6554
  new :: GHC.Int.Int64 -> GHC.Types.IO Data.Atomic.Atomic
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Atomic.new1
                  `cast`
                (<GHC.Int.Int64>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Data.Atomic.Atomic>_R)) -}
29ee8b2ef438a26da79dff07e08467ab
  new1 ::
    GHC.Int.Int64
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Atomic.Atomic #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (v :: GHC.Int.Int64)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        eta of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        8#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case v of wild2 { GHC.Int.I64# x ->
                 let {
                   ipv4 :: GHC.Prim.Addr#
                   = GHC.Prim.byteArrayContents#
                       ipv3
                         `cast`
                       (UnsafeCo representational (GHC.Prim.MutableByteArray#
                                                     GHC.Prim.RealWorld) GHC.Prim.ByteArray#)
                 } in
                 case GHC.Prim.writeInt64OffAddr#
                        @ GHC.Prim.RealWorld
                        ipv4
                        0#
                        x
                        ipv2 of s2 { DEFAULT ->
                 let {
                   ipv5 :: GHC.ForeignPtr.ForeignPtrContents
                   = GHC.ForeignPtr.MallocPtr ipv3 ipv1
                 } in
                 case GHC.Prim.touch#
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.ForeignPtr.ForeignPtrContents
                        ipv5
                        s2 of s' { DEFAULT ->
                 (# s',
                    (GHC.ForeignPtr.ForeignPtr @ GHC.Int.Int64 ipv4 ipv5)
                      `cast`
                    (Sym (Data.Atomic.N:Atomic[0])) #) } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

