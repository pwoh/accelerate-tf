
==================== FINAL INTERFACE ====================
2017-08-29 05:28:23.499577 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Pretty [orphan module] 8002
  interface hash: b076fb711a4b73eafab71835f11ee7d0
  ABI hash: d8e3d338acdcd94862123ccf9db03cb1
  export-list hash: 7775e00bd3f86725a4267416a0479d80
  orphan hash: 7d2514708ef465600c7a7bbee8318815
  flag hash: 95e9ba78ed8a4291914459198d1492f3
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Array.Accelerate.Pretty.Graphviz.graphDelayedAcc
  Data.Array.Accelerate.Pretty.Graphviz.graphDelayedAfun
  Data.Array.Accelerate.Pretty.Print.noParens
  Data.Array.Accelerate.Pretty.Print.prettyArrays
  Data.Array.Accelerate.Pretty.Print.prettyOpenAcc
  Data.Array.Accelerate.Pretty.Print.prettyOpenAfun
  Data.Array.Accelerate.Pretty.Print.prettyOpenExp
  Data.Array.Accelerate.Pretty.Print.prettyOpenFun
  Data.Array.Accelerate.Pretty.Print.prettyPreExp
  Data.Array.Accelerate.Pretty.Print.prettyPreFun
  Data.Array.Accelerate.Pretty.Print.prettyPreOpenAcc
  Data.Array.Accelerate.Pretty.Print.prettyPreOpenAfun
  Data.Array.Accelerate.Pretty.Print.prettyPreOpenExp
  Data.Array.Accelerate.Pretty.Print.prettyPreOpenFun
  Data.Array.Accelerate.Pretty.Print.prettyPrim
  Data.Array.Accelerate.Pretty.Print.prettyTupleIdx
  Data.Array.Accelerate.Pretty.Print.prj
  Data.Array.Accelerate.Pretty.Print.sizeEnv
  Data.Array.Accelerate.Pretty.Print.tuple
  Data.Array.Accelerate.Pretty.Graphviz.Detail{Data.Array.Accelerate.Pretty.Graphviz.Full Data.Array.Accelerate.Pretty.Graphviz.Simple}
  Data.Array.Accelerate.Pretty.Graphviz.PrettyGraph{Data.Array.Accelerate.Pretty.Graphviz.ppGraph}
  Data.Array.Accelerate.Pretty.Graphviz.Type.Graph
  Data.Array.Accelerate.Pretty.Print.PrettyAcc
  Data.Array.Accelerate.Pretty.Print.PrettyEnv{Data.Array.Accelerate.Pretty.Print.prettyEnv}
  Data.Array.Accelerate.Pretty.Print.Val{Data.Array.Accelerate.Pretty.Print.Empty Data.Array.Accelerate.Pretty.Print.Push}
module dependencies: Data.Array.Accelerate.AST
                     Data.Array.Accelerate.Analysis.Hash
                     Data.Array.Accelerate.Analysis.Hash.TH
                     Data.Array.Accelerate.Analysis.Match
                     Data.Array.Accelerate.Array.Data
                     Data.Array.Accelerate.Array.Representation
                     Data.Array.Accelerate.Array.Sugar
                     Data.Array.Accelerate.Array.Unique
                     Data.Array.Accelerate.Debug.Flags
                     Data.Array.Accelerate.Debug.Monitoring
                     Data.Array.Accelerate.Debug.Stats Data.Array.Accelerate.Debug.Trace
                     Data.Array.Accelerate.Error Data.Array.Accelerate.Lifetime
                     Data.Array.Accelerate.Pretty.Graphviz
                     Data.Array.Accelerate.Pretty.Graphviz.Monad
                     Data.Array.Accelerate.Pretty.Graphviz.Type
                     Data.Array.Accelerate.Pretty.Print Data.Array.Accelerate.Product
                     Data.Array.Accelerate.Trafo.Base
                     Data.Array.Accelerate.Trafo.Substitution Data.Array.Accelerate.Type
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3 template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unique-0@unique-0-9CJQKYGbqiDaFUmoekKeA
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt:Data.Label.Point
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Data
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Representation
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Sugar
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Product
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Trafo.Base
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Trafo.Substitution
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Type
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
import  -/  Data.Array.Accelerate.AST 4907563d36aadcb5fe024fe0eaf42ffa
  exports: 14f3cf8c02b472222e546556891c5be1
  OpenAcc d85164a68dcedbc8a54813dd240745cc
  PreOpenAfun 2e727f8d346dd6a6266c06baf474000a
  PreOpenExp d3bf8e354493ff12972ab24a46d8ebad
  PreOpenFun d3bf8e354493ff12972ab24a46d8ebad
import  -/  Data.Array.Accelerate.Pretty.Graphviz 7db494ef054aca3a4241218473ce08ce
  exports: 1919acb129583410ac799bd5ea566150
  Detail 197706e4b98a1f93737dd8d3e34bfa2b
  Full df6b71f34855ca33869c04cf4de5a277
  PrettyGraph 4fc94e2b3af85231063d55ab6e64bf87
  Simple d47e369b41b10bd8f30ec1cae3019c8a
  graphDelayedAcc b1fd4ab252a665fcf800b66ff1cd9dff
  graphDelayedAfun c01c02439a4f66182b7a41d7d9c6c2e3
  ppGraph f70ba26edb2c0020c594ea2b96c8246f
import  -/  Data.Array.Accelerate.Pretty.Graphviz.Type a76ff553665b62c8638b260f9275d644
  Graph 34a982a49eb2afcbac7df3b42d42f45f
import  -/  Data.Array.Accelerate.Pretty.Print 01874303e3a2d96e9ffae6d49fcc5768
  exports: fe94c50c46f180a54412cd142cef23e5
  Empty 3be9bd81f28e0947cf95b5d305c104a9
  PrettyAcc 2e5246b3a85ce9e4fee76766e3f89410
  PrettyEnv 991780a6d391208e1cbe4f4d5d17986e
  Push c224e7f7c28d40f43310ce028ba00ce1
  Val fbab0fd5c9a8c66daa465f1d082525af
  noParens afda22142fcfac51e2fd4bcdc8a4c6d7
  prettyArrays 4958500aa0388039d1caa57a289241f1
  prettyEnv 86dcedfa5a0b28dea25a561e0a3d11c3
  prettyOpenAcc 3b5505d9e0fcb3ebf6af725563392863
  prettyOpenAfun a2dd5e4b1086518937d477c460fce8f7
  prettyOpenExp 34d3243d5456d4812343e92b7bd2874c
  prettyOpenFun 1e5fef3e66e011f138c2fdcfce6760b8
  prettyPreExp e3fc07fb10448d3ea1da91d52fda72c1
  prettyPreFun b05ec17585728dd99f65fb1337528125
  prettyPreOpenAcc 23cc13a2b61c36408940a7ec5ea943db
  prettyPreOpenAfun e8233db2a5a3b35782b44ab80205a8fd
  prettyPreOpenExp 230fe902f76ebcc7a45551491c5d6445
  prettyPreOpenFun 979c4f9a803ca3f4dacf35a169762613
  prettyPrim a56c417a876a0583ea217bd57a6ea6a1
  prettyTupleIdx a699afc1d6430aafaf1402302cf43d07
  prj f3f52a3f0db0adee34b0276e9a224960
  sizeEnv 8bf7704e9266de2e79a2f9427c3a4e93
  tuple 52661b6633f0975b42486436658c1881
import  -/  Data.Array.Accelerate.Trafo.Base f39e4dfe1afe26017d51fdc8678d590f
  exports: 945cc7ccce908b35cd85c2d690c34974
  DelayedOpenAcc a9e20bdbb4f848e6fa3f8efaacdaa62d
  Kit 7736eeb535c49ebb0bc1fc50dc5eadf9
  prettyAcc 1cff3281a4dff298f7f5dd1110f2b1f7
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint abe8aeb00d775221281f89090d9fbe2a
import  -/  pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ 47c87fc2a972d58594fb2a8a503ead58
import  -/  pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ 5fd6ee2fcb3f4a1e810ed36714963e44
d0c730a7f9ccd5b7ecf01f3e291a0cca
  $fShowDelayedOpenAcc ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    GHC.Show.Show
      (Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a)
  DFunId
  {- Arity: 1, Strictness: <L,U>m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ aenv
                      @ a
                      ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv).
                  @ (Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a)
                  (Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc_$cshowsPrec
                     @ aenv
                     @ a
                     $dPrettyEnv)
                  (Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc_$cshow
                     @ aenv
                     @ a
                     $dPrettyEnv)
                  (Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc_$cshowList
                     @ aenv
                     @ a
                     $dPrettyEnv) -}
703178488d6e5d73a68e60dc5022fe9f
  $fShowDelayedOpenAcc1 ::
    Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails ()
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (ds :: Text.PrettyPrint.Annotated.HughesPJ.AnnotDetails
                            ())
                   (eta :: GHC.Base.String)[OneShot] ->
                 case ds of wild {
                   DEFAULT -> eta
                   Text.PrettyPrint.Annotated.HughesPJ.NoAnnot s dt1
                   -> case s of wild1 {
                        Text.PrettyPrint.Annotated.HughesPJ.Chr dt
                        -> GHC.Types.: @ GHC.Types.Char (GHC.Types.C# dt) eta
                        Text.PrettyPrint.Annotated.HughesPJ.Str s1
                        -> GHC.Base.++ @ GHC.Types.Char s1 eta
                        Text.PrettyPrint.Annotated.HughesPJ.PStr s1
                        -> GHC.Base.++ @ GHC.Types.Char s1 eta } }) -}
c8d91e51f080ac7bed7ecaee8913d5fc
  $fShowDelayedOpenAcc2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 150#) -}
9b024edc23ff7686969c2f28462d546b
  $fShowDelayedOpenAcc3 ::
    Text.PrettyPrint.HughesPJ.Doc -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (eta :: Text.PrettyPrint.HughesPJ.Doc) ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc2
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc1
                   (GHC.Types.[] @ GHC.Types.Char)
                   eta `cast` (Text.PrettyPrint.HughesPJ.N:Doc[0])) -}
7137b00876096a7cf5599a44e95e41ef
  $fShowDelayedOpenAcc_$cshow ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a
    -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ aenv
                   @ a
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (c :: Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a) ->
                 Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc3
                   (Data.Array.Accelerate.Trafo.Base.prettyDelayedOpenAcc
                      @ aenv
                      @ a
                      (GHC.Base.id @ Text.PrettyPrint.HughesPJ.Doc)
                      $dPrettyEnv
                        `cast`
                      (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                      c)) -}
932eb9c04b7d13c45d141fabc844f734
  $fShowDelayedOpenAcc_$cshowList ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    [Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>,
     Unfolding: (\ @ aenv
                   @ a
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (ls :: [Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a)
                   (\ (x :: Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a)
                      (s1 :: GHC.Base.String)[OneShot] ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                         @ ()
                         @ GHC.Base.String
                         Text.PrettyPrint.Annotated.HughesPJ.PageMode
                         Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc2
                         Text.PrettyPrint.Annotated.HughesPJ.render2
                         Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc1
                         (GHC.Types.[] @ GHC.Types.Char)
                         (Data.Array.Accelerate.Trafo.Base.prettyDelayedOpenAcc
                            @ aenv
                            @ a
                            (GHC.Base.id @ Text.PrettyPrint.HughesPJ.Doc)
                            $dPrettyEnv
                              `cast`
                            (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                            x)
                           `cast`
                         (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                      s1)
                   ls
                   s) -}
85232e0a38fa7845d2c047f7b0735d3e
  $fShowDelayedOpenAcc_$cshowsPrec ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    GHC.Types.Int
    -> Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,A><L,1*U><L,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ aenv
                   @ a
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (ds :: GHC.Types.Int)
                   (x :: Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc3
                         (Data.Array.Accelerate.Trafo.Base.prettyDelayedOpenAcc
                            @ aenv
                            @ a
                            (GHC.Base.id @ Text.PrettyPrint.HughesPJ.Doc)
                            $dPrettyEnv
                              `cast`
                            (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                            x)))
                   s) -}
0146c82d108d2eb93ec6bdbc811912b7
  $fShowOpenAcc ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    GHC.Show.Show (Data.Array.Accelerate.AST.OpenAcc aenv a)
  DFunId
  {- Arity: 1, Strictness: <L,U>m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ aenv
                      @ a
                      ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv).
                  @ (Data.Array.Accelerate.AST.OpenAcc aenv a)
                  (Data.Array.Accelerate.Pretty.$fShowOpenAcc_$cshowsPrec
                     @ aenv
                     @ a
                     $dPrettyEnv)
                  (Data.Array.Accelerate.Pretty.$fShowOpenAcc_$cshow
                     @ aenv
                     @ a
                     $dPrettyEnv)
                  (Data.Array.Accelerate.Pretty.$fShowOpenAcc_$cshowList
                     @ aenv
                     @ a
                     $dPrettyEnv) -}
49c5a91bea59621dc503c2f5e508baca
  $fShowOpenAcc_$cshow ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    Data.Array.Accelerate.AST.OpenAcc aenv a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ aenv
                   @ a
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (c :: Data.Array.Accelerate.AST.OpenAcc aenv a) ->
                 Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc3
                   (Data.Array.Accelerate.Pretty.Print.prettyOpenAcc
                      @ aenv
                      @ a
                      (GHC.Base.id @ Text.PrettyPrint.HughesPJ.Doc)
                      $dPrettyEnv
                        `cast`
                      (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                      c)) -}
b9aca16647d7e3ee09f75850aeb912f2
  $fShowOpenAcc_$cshowList ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    [Data.Array.Accelerate.AST.OpenAcc aenv a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>,
     Unfolding: (\ @ aenv
                   @ a
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (ls :: [Data.Array.Accelerate.AST.OpenAcc aenv a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.AST.OpenAcc aenv a)
                   (\ (x :: Data.Array.Accelerate.AST.OpenAcc aenv a)
                      (s1 :: GHC.Base.String)[OneShot] ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                         @ ()
                         @ GHC.Base.String
                         Text.PrettyPrint.Annotated.HughesPJ.PageMode
                         Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc2
                         Text.PrettyPrint.Annotated.HughesPJ.render2
                         Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc1
                         (GHC.Types.[] @ GHC.Types.Char)
                         (Data.Array.Accelerate.Pretty.Print.prettyOpenAcc
                            @ aenv
                            @ a
                            (GHC.Base.id @ Text.PrettyPrint.HughesPJ.Doc)
                            $dPrettyEnv
                              `cast`
                            (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                            x)
                           `cast`
                         (Text.PrettyPrint.HughesPJ.N:Doc[0]))
                      s1)
                   ls
                   s) -}
cb3b1e6ae56bca216f0c6392817d03ee
  $fShowOpenAcc_$cshowsPrec ::
    Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv =>
    GHC.Types.Int
    -> Data.Array.Accelerate.AST.OpenAcc aenv a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,A><L,U><L,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ aenv
                   @ a
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (ds :: GHC.Types.Int)
                   (x :: Data.Array.Accelerate.AST.OpenAcc aenv a)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc3
                         (Data.Array.Accelerate.Pretty.Print.prettyOpenAcc
                            @ aenv
                            @ a
                            (GHC.Base.id @ Text.PrettyPrint.HughesPJ.Doc)
                            $dPrettyEnv
                              `cast`
                            (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                            x)))
                   s) -}
9e05bb4b2a71b2cb8d70cd70c5aaff8d
  $fShowPreOpenAfun ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    GHC.Show.Show (Data.Array.Accelerate.AST.PreOpenAfun acc aenv f)
  DFunId
  {- Arity: 2,
     Strictness: <L,U(U(A,U(U)),A,A,A,A,A,A,C(C1(C1(U))))><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (acc :: * -> * -> *)
                      @ aenv
                      @ f
                      ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                      ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv).
                  @ (Data.Array.Accelerate.AST.PreOpenAfun acc aenv f)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenAfun_$cshowsPrec
                     @ acc
                     @ aenv
                     @ f
                     $dKit
                     $dPrettyEnv)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenAfun_$cshow
                     @ acc
                     @ aenv
                     @ f
                     $dKit
                     $dPrettyEnv)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenAfun_$cshowList
                     @ acc
                     @ aenv
                     @ f
                     $dKit
                     $dPrettyEnv) -}
50ef4478915782cc0bfead14101da67d
  $fShowPreOpenAfun_$cshow ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    Data.Array.Accelerate.AST.PreOpenAfun acc aenv f -> GHC.Base.String
  {- Arity: 3,
     Strictness: <S(S(LS(S))LLLLLLL),U(1*U(A,1*U(1*U)),A,A,A,A,A,A,1*C(C1(C1(U))))><L,U><L,1*U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ aenv
                   @ f
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (eta :: Data.Array.Accelerate.AST.PreOpenAfun acc aenv f) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc2
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (Data.Array.Accelerate.Pretty.Print.prettyPreOpenAfun
                      @ acc
                      @ aenv
                      @ f
                      (\ @ aenv1 @ t ->
                       Data.Array.Accelerate.Trafo.Base.prettyAcc @ acc $dKit @ aenv1 @ t)
                      $dPrettyEnv
                        `cast`
                      (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                      eta)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0]) }) -}
7e1091b6e64c0a37787846399f5f04f2
  $fShowPreOpenAfun_$cshowList ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    [Data.Array.Accelerate.AST.PreOpenAfun acc aenv f]
    -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(C1(U))))><L,U><S,1*U><L,U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ aenv
                   @ f
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (eta :: [Data.Array.Accelerate.AST.PreOpenAfun acc aenv f])
                   (eta1 :: GHC.Base.String) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.AST.PreOpenAfun acc aenv f)
                   (\ (w :: Data.Array.Accelerate.AST.PreOpenAfun acc aenv f)
                      (w1 :: GHC.Base.String)[OneShot] ->
                    Data.Array.Accelerate.Pretty.$w$cshowsPrec
                      @ acc
                      @ aenv
                      @ f
                      $dKit
                      $dPrettyEnv
                      w
                      w1)
                   eta
                   eta1 }) -}
2d0ebf49f8add6d735a3a1f983a07ffb
  $fShowPreOpenAfun_$cshowsPrec ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    GHC.Types.Int
    -> Data.Array.Accelerate.AST.PreOpenAfun acc aenv f
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(C1(U))))><L,U><L,A><L,1*U><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ (acc :: * -> * -> *)
                   @ aenv
                   @ f
                   (w :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   (w1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Data.Array.Accelerate.AST.PreOpenAfun acc aenv f)
                   (w4 :: GHC.Base.String) ->
                 Data.Array.Accelerate.Pretty.$w$cshowsPrec
                   @ acc
                   @ aenv
                   @ f
                   w
                   w1
                   w3
                   w4) -}
ad2cb79ea69c6f27d382f4ce56342470
  $fShowPreOpenExp ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    GHC.Show.Show (Data.Array.Accelerate.AST.PreOpenExp acc env aenv t)
  DFunId
  {- Arity: 3,
     Strictness: <L,U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (acc :: * -> * -> *)
                      @ env
                      @ aenv
                      @ t
                      ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                      ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                      ($dPrettyEnv1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv
                                         aenv).
                  @ (Data.Array.Accelerate.AST.PreOpenExp acc env aenv t)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenExp_$cshowsPrec
                     @ acc
                     @ env
                     @ aenv
                     @ t
                     $dKit
                     $dPrettyEnv
                     $dPrettyEnv1)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenExp_$cshow
                     @ acc
                     @ env
                     @ aenv
                     @ t
                     $dKit
                     $dPrettyEnv
                     $dPrettyEnv1)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenExp_$cshowList
                     @ acc
                     @ env
                     @ aenv
                     @ t
                     $dKit
                     $dPrettyEnv
                     $dPrettyEnv1) -}
8a776a12c589866f66a9858c18fb97c3
  $fShowPreOpenExp_$cshow ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    Data.Array.Accelerate.AST.PreOpenExp acc env aenv t
    -> GHC.Base.String
  {- Arity: 4,
     Strictness: <S(S(LS(S))LLLLLLL),U(1*U(A,1*U(1*U)),A,A,A,A,A,A,1*C(C1(U)))><L,U><L,U><L,U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ t
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   ($dPrettyEnv1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (eta :: Data.Array.Accelerate.AST.PreOpenExp acc env aenv t) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc2
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (Data.Array.Accelerate.Pretty.Print.prettyPreOpenExp
                      @ acc
                      @ t
                      @ env
                      @ aenv
                      (\ @ aenv1 @ t1 ->
                       Data.Array.Accelerate.Trafo.Base.prettyAcc
                         @ acc
                         $dKit
                         @ aenv1
                         @ t1)
                      (GHC.Base.id @ Text.PrettyPrint.HughesPJ.Doc)
                      $dPrettyEnv
                        `cast`
                      (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <env>_N)
                      $dPrettyEnv1
                        `cast`
                      (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                      eta)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0]) }) -}
b1a8dd43aa43a3452c32275a274c9439
  $fShowPreOpenExp_$cshowList ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    [Data.Array.Accelerate.AST.PreOpenExp acc env aenv t]
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U><S,1*U><L,U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ t
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   ($dPrettyEnv1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (eta :: [Data.Array.Accelerate.AST.PreOpenExp acc env aenv t])
                   (eta1 :: GHC.Base.String) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.AST.PreOpenExp acc env aenv t)
                   (\ (w :: Data.Array.Accelerate.AST.PreOpenExp acc env aenv t)
                      (w1 :: GHC.Base.String)[OneShot] ->
                    Data.Array.Accelerate.Pretty.$w$cshowsPrec1
                      @ acc
                      @ env
                      @ aenv
                      @ t
                      $dKit
                      $dPrettyEnv
                      $dPrettyEnv1
                      w
                      w1)
                   eta
                   eta1 }) -}
ea05cc34967f3bbcf9d7dcfa4fdaa4cb
  $fShowPreOpenExp_$cshowsPrec ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    GHC.Types.Int
    -> Data.Array.Accelerate.AST.PreOpenExp acc env aenv t
    -> GHC.Show.ShowS
  {- Arity: 6,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U><L,A><L,U><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ t
                   (w :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   (w1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   (w2 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (w3 :: GHC.Types.Int)
                   (w4 :: Data.Array.Accelerate.AST.PreOpenExp acc env aenv t)
                   (w5 :: GHC.Base.String) ->
                 Data.Array.Accelerate.Pretty.$w$cshowsPrec1
                   @ acc
                   @ env
                   @ aenv
                   @ t
                   w
                   w1
                   w2
                   w4
                   w5) -}
0774155b50aa1064eb6c616e368de432
  $fShowPreOpenFun ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    GHC.Show.Show (Data.Array.Accelerate.AST.PreOpenFun acc env aenv f)
  DFunId
  {- Arity: 3,
     Strictness: <L,U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (acc :: * -> * -> *)
                      @ env
                      @ aenv
                      @ f
                      ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                      ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                      ($dPrettyEnv1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv
                                         aenv).
                  @ (Data.Array.Accelerate.AST.PreOpenFun acc env aenv f)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenFun_$cshowsPrec
                     @ acc
                     @ env
                     @ aenv
                     @ f
                     $dKit
                     $dPrettyEnv
                     $dPrettyEnv1)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenFun_$cshow
                     @ acc
                     @ env
                     @ aenv
                     @ f
                     $dKit
                     $dPrettyEnv
                     $dPrettyEnv1)
                  (Data.Array.Accelerate.Pretty.$fShowPreOpenFun_$cshowList
                     @ acc
                     @ env
                     @ aenv
                     @ f
                     $dKit
                     $dPrettyEnv
                     $dPrettyEnv1) -}
9cdd90845b85204a707f5afbe438c411
  $fShowPreOpenFun_$cshow ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    Data.Array.Accelerate.AST.PreOpenFun acc env aenv f
    -> GHC.Base.String
  {- Arity: 4,
     Strictness: <S(S(LS(S))LLLLLLL),U(1*U(A,1*U(1*U)),A,A,A,A,A,A,1*C(C1(U)))><L,U><L,U><L,1*U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ f
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   ($dPrettyEnv1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (eta :: Data.Array.Accelerate.AST.PreOpenFun acc env aenv f) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 Text.PrettyPrint.Annotated.HughesPJ.fullRenderAnn
                   @ ()
                   @ GHC.Base.String
                   Text.PrettyPrint.Annotated.HughesPJ.PageMode
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc2
                   Text.PrettyPrint.Annotated.HughesPJ.render2
                   Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (Data.Array.Accelerate.Pretty.Print.prettyPreOpenFun
                      @ acc
                      @ env
                      @ aenv
                      @ f
                      (\ @ aenv1 @ t ->
                       Data.Array.Accelerate.Trafo.Base.prettyAcc @ acc $dKit @ aenv1 @ t)
                      $dPrettyEnv
                        `cast`
                      (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <env>_N)
                      $dPrettyEnv1
                        `cast`
                      (Data.Array.Accelerate.Pretty.Print.N:PrettyEnv[0] <aenv>_N)
                      eta)
                     `cast`
                   (Text.PrettyPrint.HughesPJ.N:Doc[0]) }) -}
41b424d4dbefb4eb3ff3b4ed1e2a8d2c
  $fShowPreOpenFun_$cshowList ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    [Data.Array.Accelerate.AST.PreOpenFun acc env aenv f]
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U><S,1*U><L,U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ f
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   ($dPrettyEnv :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   ($dPrettyEnv1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (eta :: [Data.Array.Accelerate.AST.PreOpenFun acc env aenv f])
                   (eta1 :: GHC.Base.String) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.AST.PreOpenFun acc env aenv f)
                   (\ (w :: Data.Array.Accelerate.AST.PreOpenFun acc env aenv f)
                      (w1 :: GHC.Base.String)[OneShot] ->
                    Data.Array.Accelerate.Pretty.$w$cshowsPrec2
                      @ acc
                      @ env
                      @ aenv
                      @ f
                      $dKit
                      $dPrettyEnv
                      $dPrettyEnv1
                      w
                      w1)
                   eta
                   eta1 }) -}
5b6663dd630473013ae47e8bf4292f62
  $fShowPreOpenFun_$cshowsPrec ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    GHC.Types.Int
    -> Data.Array.Accelerate.AST.PreOpenFun acc env aenv f
    -> GHC.Show.ShowS
  {- Arity: 6,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U><L,A><L,1*U><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ f
                   (w :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   (w1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   (w2 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (w3 :: GHC.Types.Int)
                   (w4 :: Data.Array.Accelerate.AST.PreOpenFun acc env aenv f)
                   (w5 :: GHC.Base.String) ->
                 Data.Array.Accelerate.Pretty.$w$cshowsPrec2
                   @ acc
                   @ env
                   @ aenv
                   @ f
                   w
                   w1
                   w2
                   w4
                   w5) -}
134e1a9d02c0734a8d0f2a97cd58630b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Pretty.$trModule2
                   Data.Array.Accelerate.Pretty.$trModule1) -}
e4b2a7db3a70e73dd2156d4a9dcb7382
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Data.Array.Accelerate.Pretty"#) -}
64e6d583b87a1166898367e4c9ead8c3
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
d6f224ca623a0c628400299ba586b5b5
  $w$cshowsPrec ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    Data.Array.Accelerate.AST.PreOpenAfun acc aenv f
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 4,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(C1(U))))><L,U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ aenv
                   @ f
                   (w :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   (w1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (w2 :: Data.Array.Accelerate.AST.PreOpenAfun acc aenv f)
                   (w3 :: GHC.Base.String) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc w))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Data.Array.Accelerate.Pretty.$fShowPreOpenAfun_$cshow
                      @ acc
                      @ aenv
                      @ f
                      w
                      w1
                      w2)
                   w3 }) -}
ff2726d3c774d2b0db35f0a39d6ccb3d
  $w$cshowsPrec1 ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    Data.Array.Accelerate.AST.PreOpenExp acc env aenv t
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U><L,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ t
                   (w :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   (w1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   (w2 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (w3 :: Data.Array.Accelerate.AST.PreOpenExp acc env aenv t)
                   (w4 :: GHC.Base.String) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc w))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Data.Array.Accelerate.Pretty.$fShowPreOpenExp_$cshow
                      @ acc
                      @ env
                      @ aenv
                      @ t
                      w
                      w1
                      w2
                      w3)
                   w4 }) -}
107745dd9ac20b2c6e7b85bb3662cef6
  $w$cshowsPrec2 ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv env,
     Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv) =>
    Data.Array.Accelerate.AST.PreOpenFun acc env aenv f
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(A,U(U)),A,A,A,A,A,A,C(C1(U)))><L,U><L,U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ env
                   @ aenv
                   @ f
                   (w :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   (w1 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv env)
                   (w2 :: Data.Array.Accelerate.Pretty.Print.PrettyEnv aenv)
                   (w3 :: Data.Array.Accelerate.AST.PreOpenFun acc env aenv f)
                   (w4 :: GHC.Base.String) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc w))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (Data.Array.Accelerate.Pretty.$fShowPreOpenFun_$cshow
                      @ acc
                      @ env
                      @ aenv
                      @ f
                      w
                      w1
                      w2
                      w3)
                   w4 }) -}
instance GHC.Show.Show [Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc]
  = Data.Array.Accelerate.Pretty.$fShowDelayedOpenAcc
instance GHC.Show.Show [Data.Array.Accelerate.AST.OpenAcc]
  = Data.Array.Accelerate.Pretty.$fShowOpenAcc
instance GHC.Show.Show [Data.Array.Accelerate.AST.PreOpenAfun]
  = Data.Array.Accelerate.Pretty.$fShowPreOpenAfun
instance GHC.Show.Show [Data.Array.Accelerate.AST.PreOpenExp]
  = Data.Array.Accelerate.Pretty.$fShowPreOpenExp
instance GHC.Show.Show [Data.Array.Accelerate.AST.PreOpenFun]
  = Data.Array.Accelerate.Pretty.$fShowPreOpenFun
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

