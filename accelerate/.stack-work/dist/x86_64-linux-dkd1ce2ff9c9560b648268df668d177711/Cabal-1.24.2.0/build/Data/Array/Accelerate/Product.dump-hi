
==================== FINAL INTERFACE ====================
2017-08-29 05:26:53.476304 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Product [family instance module] 8002
  interface hash: 766b6bc3b72faf2ca86287905982007e
  ABI hash: 8b6346e847887a013338cfe4431f2f5a
  export-list hash: aebe828f4ca2c96d5390ff50126a2bd3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c4ebf6a60bf16d8df88f5ff3098cefa7
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Array.Accelerate.Product.IsProduct{Data.Array.Accelerate.Product.ProdRepr Data.Array.Accelerate.Product.fromProd Data.Array.Accelerate.Product.prod Data.Array.Accelerate.Product.toProd}
  Data.Array.Accelerate.Product.ProdR{Data.Array.Accelerate.Product.ProdRsnoc Data.Array.Accelerate.Product.ProdRunit}
  Data.Array.Accelerate.Product.TupleIdx{Data.Array.Accelerate.Product.SuccTupIdx Data.Array.Accelerate.Product.ZeroTupIdx}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst() :: Data.Array.Accelerate.Product.IsProduct cst ()
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint).
                  @ cst
                  @ ()
                  (Data.Array.Accelerate.Product.$fIsProductcst()_$cfromProd @ cst)
                  (Data.Array.Accelerate.Product.$fIsProductcst()_$ctoProd @ cst)
                  (Data.Array.Accelerate.Product.$fIsProductcst()_$cprod @ cst) -}
f04e90609cd608fd8b5a9a5960b2a2a9
  $fIsProductcst()1 ::
    proxy cst -> () -> Data.Array.Accelerate.Product.ProdR cst ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>m1,
     Unfolding: InlineRule (2, True, True)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: ()) ->
                 Data.Array.Accelerate.Product.$WProdRunit @ cst) -}
79cafe3808bec2ca3e45c5662e71b42d
  $fIsProductcst()2 :: proxy cst -> () -> ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (eta :: ()) ->
                 GHC.Base.id @ () eta) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst()_$cfromProd ::
    proxy cst -> () -> Data.Array.Accelerate.Product.ProdRepr ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst()2
                  `cast`
                (forall (cst :: <* -> GHC.Types.Constraint>_N) (proxy :: <(*
                                                                           -> GHC.Types.Constraint)
                                                                          -> *>_N).
                 <proxy cst>_R
                 ->_R <()>_R
                 ->_R Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr()[0]))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst()_$cprod ::
    proxy cst
    -> ()
    -> Data.Array.Accelerate.Product.ProdR
         cst (Data.Array.Accelerate.Product.ProdRepr ())
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>m1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst()1
                  `cast`
                (forall (cst :: <* -> GHC.Types.Constraint>_N) (proxy :: <(*
                                                                           -> GHC.Types.Constraint)
                                                                          -> *>_N).
                 <proxy cst>_R
                 ->_R <()>_R
                 ->_R (Data.Array.Accelerate.Product.ProdR
                         <cst>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr()[0])))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst()_$ctoProd ::
    proxy cst -> Data.Array.Accelerate.Product.ProdRepr () -> ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst()2
                  `cast`
                (forall (cst :: <* -> GHC.Types.Constraint>_N) (proxy :: <(*
                                                                           -> GHC.Types.Constraint)
                                                                          -> *>_N).
                 <proxy cst>_R
                 ->_R Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr()[0]))
                 ->_R <()>_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,) ::
    (cst a, cst b) =>
    Data.Array.Accelerate.Product.IsProduct cst (a, b)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      (irred :: cst a)
                      (irred1 :: cst b).
                  @ cst
                  @ (a, b)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     irred
                     irred1)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     irred
                     irred1)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,)_$cprod
                     @ cst
                     @ a
                     @ b
                     irred
                     irred1) -}
37ed14979299f9b902c05d7ef1823e3a
  $fIsProductcst(,)1 ::
    (cst a, cst b) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b) -> Data.Array.Accelerate.Product.ProdR cst (((), a), b)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (4, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   (irred :: cst a)
                   (irred1 :: cst b)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ (((), a), b)
                   @ b
                   @ ((), a)
                   @~ <(((), a), b)>_N
                   irred1
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ ((), a)
                      @ a
                      @ ()
                      @~ <((), a)>_N
                      irred
                      (Data.Array.Accelerate.Product.$WProdRunit @ cst))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,)_$cfromProd ::
    (cst a, cst b) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b) -> Data.Array.Accelerate.Product.ProdRepr (a, b)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><S,1*U(U,U)>m,
     Unfolding: InlineRule (4, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   (irred :: cst a)
                   (irred1 :: cst b)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b)) ->
                 case ds1 of wild { (,) a1 b1 ->
                 ((GHC.Tuple.(), a1), b1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <b>_N <a>_N))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,)_$cprod ::
    (cst a, cst b) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b)
    -> Data.Array.Accelerate.Product.ProdR
         cst (Data.Array.Accelerate.Product.ProdRepr (a, b))
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                        <b>_N <a>_N)))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,)_$ctoProd ::
    (cst a, cst b) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr (a, b) -> (a, b)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><S(S(SL)L),1*U(1*U(1*H,U),U)>m,
     Unfolding: InlineRule (4, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   (irred :: cst a)
                   (irred1 :: cst b)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr (a, b)) ->
                 case ds1
                        `cast`
                      (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <b>_N <a>_N)) of wild { (,) ds2 b1 ->
                 case ds2 of wild1 { (,) ds3 a1 ->
                 case ds3 of wild2 { () -> (a1, b1) } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,) ::
    (cst a, cst b, cst c) =>
    Data.Array.Accelerate.Product.IsProduct cst (a, b, c)
  DFunId
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c).
                  @ cst
                  @ (a, b, c)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     irred
                     irred1
                     irred2)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     irred
                     irred1
                     irred2)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     irred
                     irred1
                     irred2) -}
332ec0135dd2c3d318b3124f95c59304
  $fIsProductcst(,,)1 ::
    (cst a, cst b, cst c) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c)
    -> Data.Array.Accelerate.Product.ProdR cst ((((), a), b), c)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ ((((), a), b), c)
                   @ c
                   @ (((), a), b)
                   @~ <((((), a), b), c)>_N
                   irred2
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ (((), a), b)
                      @ b
                      @ ((), a)
                      @~ <(((), a), b)>_N
                      irred1
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ ((), a)
                         @ a
                         @ ()
                         @~ <((), a)>_N
                         irred
                         (Data.Array.Accelerate.Product.$WProdRunit @ cst)))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,)_$cfromProd ::
    (cst a, cst b, cst c) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c) -> Data.Array.Accelerate.Product.ProdRepr (a, b, c)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><S,1*U(U,U,U)>m,
     Unfolding: InlineRule (5, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c)) ->
                 case ds1 of wild { (,,) a1 b1 c1 ->
                 (((GHC.Tuple.(), a1), b1), c1)
                   `cast`
                 (Trans
                      ((,)
                         (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                        <b>_N <a>_N)))
                         <c>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                     <c>_N <b>_N <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,)_$cprod ::
    (cst a, cst b, cst c) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c)
    -> Data.Array.Accelerate.Product.ProdR
         cst (Data.Array.Accelerate.Product.ProdRepr (a, b, c))
  {- Arity: 5, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <b>_N <a>_N))
                                      <c>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                             <c>_N <b>_N <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,)_$ctoProd ::
    (cst a, cst b, cst c) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c) -> (a, b, c)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><S(S(S(SL)L)L),1*U(1*U(1*U(1*H,U),U),U)>m,
     Unfolding: InlineRule (5, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr (a, b, c)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                     <c>_N <b>_N <a>_N))
                           ((,)
                              (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                        <b>_N <a>_N))
                              <c>_R)_R) of wild { (,) ds2 c1 ->
                 case ds2 of wild1 { (,) ds3 b1 ->
                 case ds3 of wild2 { (,) ds4 a1 ->
                 case ds4 of wild3 { () -> (a1, b1, c1) } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,) ::
    (cst a, cst b, cst c, cst d) =>
    Data.Array.Accelerate.Product.IsProduct cst (a, b, c, d)
  DFunId
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d).
                  @ cst
                  @ (a, b, c, d)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     irred
                     irred1
                     irred2
                     irred3)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     irred
                     irred1
                     irred2
                     irred3)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     irred
                     irred1
                     irred2
                     irred3) -}
1c60fd78d273d1ec40352c3ec088838e
  $fIsProductcst(,,,)1 ::
    (cst a, cst b, cst c, cst d) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d)
    -> Data.Array.Accelerate.Product.ProdR cst (((((), a), b), c), d)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (6, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ (((((), a), b), c), d)
                   @ d
                   @ ((((), a), b), c)
                   @~ <(((((), a), b), c), d)>_N
                   irred3
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ ((((), a), b), c)
                      @ c
                      @ (((), a), b)
                      @~ <((((), a), b), c)>_N
                      irred2
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ (((), a), b)
                         @ b
                         @ ((), a)
                         @~ <(((), a), b)>_N
                         irred1
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ ((), a)
                            @ a
                            @ ()
                            @~ <((), a)>_N
                            irred
                            (Data.Array.Accelerate.Product.$WProdRunit @ cst))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d)
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (6, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d)) ->
                 case ds1 of wild { (,,,) a1 b1 c1 d1 ->
                 ((((GHC.Tuple.(), a1), b1), c1), d1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <b>_N <a>_N)))
                                 <c>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                             <c>_N <b>_N <a>_N))))
                         <d>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                     <d>_N <c>_N <b>_N <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,)_$cprod ::
    (cst a, cst b, cst c, cst d) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d)
    -> Data.Array.Accelerate.Product.ProdR
         cst (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d))
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                        <b>_N <a>_N))
                                              <c>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                     <c>_N <b>_N <a>_N)))
                                      <d>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                             <d>_N <c>_N <b>_N <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d)
    -> (a, b, c, d)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><S(S(S(S(SL)L)L)L),1*U(1*U(1*U(1*U(1*H,U),U),U),U)>m,
     Unfolding: InlineRule (6, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr (a, b, c, d)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                     <d>_N <c>_N <b>_N <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                             <c>_N <b>_N <a>_N))
                                   ((,)
                                      (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <b>_N <a>_N))
                                      <c>_R)_R)
                              <d>_R)_R) of wild { (,) ds2 d1 ->
                 case ds2 of wild1 { (,) ds3 c1 ->
                 case ds3 of wild2 { (,) ds4 b1 ->
                 case ds4 of wild3 { (,) ds5 a1 ->
                 case ds5 of wild4 { () -> (a1, b1, c1, d1) } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,) ::
    (cst a, cst b, cst c, cst d, cst e) =>
    Data.Array.Accelerate.Product.IsProduct cst (a, b, c, d, e)
  DFunId
  {- Arity: 5, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e).
                  @ cst
                  @ (a, b, c, d, e)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     irred
                     irred1
                     irred2
                     irred3
                     irred4)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     irred
                     irred1
                     irred2
                     irred3
                     irred4)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     irred
                     irred1
                     irred2
                     irred3
                     irred4) -}
136b0f125ff5621b86362e8613527914
  $fIsProductcst(,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e)
    -> Data.Array.Accelerate.Product.ProdR
         cst ((((((), a), b), c), d), e)
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (7, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ ((((((), a), b), c), d), e)
                   @ e
                   @ (((((), a), b), c), d)
                   @~ <((((((), a), b), c), d), e)>_N
                   irred4
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ (((((), a), b), c), d)
                      @ d
                      @ ((((), a), b), c)
                      @~ <(((((), a), b), c), d)>_N
                      irred3
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ ((((), a), b), c)
                         @ c
                         @ (((), a), b)
                         @~ <((((), a), b), c)>_N
                         irred2
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ (((), a), b)
                            @ b
                            @ ((), a)
                            @~ <(((), a), b)>_N
                            irred1
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ ((), a)
                               @ a
                               @ ()
                               @~ <((), a)>_N
                               irred
                               (Data.Array.Accelerate.Product.$WProdRunit @ cst)))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e)
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e)
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (7, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e)) ->
                 case ds1 of wild { (,,,,) a1 b1 c1 d1 e1 ->
                 (((((GHC.Tuple.(), a1), b1), c1), d1), e1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                        <b>_N <a>_N)))
                                         <c>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                     <c>_N <b>_N <a>_N))))
                                 <d>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                             <d>_N <c>_N <b>_N <a>_N))))
                         <e>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                     <e>_N <d>_N <c>_N <b>_N <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e)
    -> Data.Array.Accelerate.Product.ProdR
         cst (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e))
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                <b>_N <a>_N))
                                                      <c>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                             <c>_N <b>_N <a>_N)))
                                              <d>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                     <d>_N <c>_N <b>_N <a>_N)))
                                      <e>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                             <e>_N <d>_N <c>_N <b>_N <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e)
    -> (a, b, c, d, e)
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(SL)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U)>m,
     Unfolding: InlineRule (7, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                     <e>_N <d>_N <c>_N <b>_N <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                             <d>_N <c>_N <b>_N <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                     <c>_N <b>_N <a>_N))
                                           ((,)
                                              (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                        <b>_N <a>_N))
                                              <c>_R)_R)
                                      <d>_R)_R)
                              <e>_R)_R) of wild { (,) ds2 e1 ->
                 case ds2 of wild1 { (,) ds3 d1 ->
                 case ds3 of wild2 { (,) ds4 c1 ->
                 case ds4 of wild3 { (,) ds5 b1 ->
                 case ds5 of wild4 { (,) ds6 a1 ->
                 case ds6 of wild5 { () -> (a1, b1, c1, d1, e1) } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f) =>
    Data.Array.Accelerate.Product.IsProduct cst (a, b, c, d, e, f)
  DFunId
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f).
                  @ cst
                  @ (a, b, c, d, e, f)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5) -}
653c18a0d61ced98468bb317a2b06942
  $fIsProductcst(,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Product.ProdR
         cst (((((((), a), b), c), d), e), f)
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (8, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ (((((((), a), b), c), d), e), f)
                   @ f
                   @ ((((((), a), b), c), d), e)
                   @~ <(((((((), a), b), c), d), e), f)>_N
                   irred5
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ ((((((), a), b), c), d), e)
                      @ e
                      @ (((((), a), b), c), d)
                      @~ <((((((), a), b), c), d), e)>_N
                      irred4
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ (((((), a), b), c), d)
                         @ d
                         @ ((((), a), b), c)
                         @~ <(((((), a), b), c), d)>_N
                         irred3
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ ((((), a), b), c)
                            @ c
                            @ (((), a), b)
                            @~ <((((), a), b), c)>_N
                            irred2
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ (((), a), b)
                               @ b
                               @ ((), a)
                               @~ <(((), a), b)>_N
                               irred1
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ ((), a)
                                  @ a
                                  @ ()
                                  @~ <((), a)>_N
                                  irred
                                  (Data.Array.Accelerate.Product.$WProdRunit @ cst))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f)
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (8, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f)) ->
                 case ds1 of wild { (,,,,,) a1 b1 c1 d1 e1 f1 ->
                 ((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                <b>_N <a>_N)))
                                                 <c>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                             <c>_N <b>_N <a>_N))))
                                         <d>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                     <d>_N <c>_N <b>_N <a>_N))))
                                 <e>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                             <e>_N <d>_N <c>_N <b>_N <a>_N))))
                         <f>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                     <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Product.ProdR
         cst (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f))
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                        <b>_N <a>_N))
                                                              <c>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                     <c>_N <b>_N <a>_N)))
                                                      <d>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                             <d>_N <c>_N <b>_N <a>_N)))
                                              <e>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                     <e>_N <d>_N <c>_N <b>_N <a>_N)))
                                      <f>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                             <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f)
    -> (a, b, c, d, e, f)
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(SL)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U)>m,
     Unfolding: InlineRule (8, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                     <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                             <e>_N <d>_N <c>_N <b>_N <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                     <d>_N <c>_N <b>_N <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                             <c>_N <b>_N <a>_N))
                                                   ((,)
                                                      (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                <b>_N <a>_N))
                                                      <c>_R)_R)
                                              <d>_R)_R)
                                      <e>_R)_R)
                              <f>_R)_R) of wild { (,) ds2 f1 ->
                 case ds2 of wild1 { (,) ds3 e1 ->
                 case ds3 of wild2 { (,) ds4 d1 ->
                 case ds4 of wild3 { (,) ds5 c1 ->
                 case ds5 of wild4 { (,) ds6 b1 ->
                 case ds6 of wild5 { (,) ds7 a1 ->
                 case ds7 of wild6 { () ->
                 (a1, b1, c1, d1, e1, f1) } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g) =>
    Data.Array.Accelerate.Product.IsProduct cst (a, b, c, d, e, f, g)
  DFunId
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g).
                  @ cst
                  @ (a, b, c, d, e, f, g)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6) -}
a38454a4a722618b076372366e3a7445
  $fIsProductcst(,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Product.ProdR
         cst ((((((((), a), b), c), d), e), f), g)
  {- Arity: 9, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (9, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ ((((((((), a), b), c), d), e), f), g)
                   @ g
                   @ (((((((), a), b), c), d), e), f)
                   @~ <((((((((), a), b), c), d), e), f), g)>_N
                   irred6
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ (((((((), a), b), c), d), e), f)
                      @ f
                      @ ((((((), a), b), c), d), e)
                      @~ <(((((((), a), b), c), d), e), f)>_N
                      irred5
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ ((((((), a), b), c), d), e)
                         @ e
                         @ (((((), a), b), c), d)
                         @~ <((((((), a), b), c), d), e)>_N
                         irred4
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ (((((), a), b), c), d)
                            @ d
                            @ ((((), a), b), c)
                            @~ <(((((), a), b), c), d)>_N
                            irred3
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ ((((), a), b), c)
                               @ c
                               @ (((), a), b)
                               @~ <((((), a), b), c)>_N
                               irred2
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ (((), a), b)
                                  @ b
                                  @ ((), a)
                                  @~ <(((), a), b)>_N
                                  irred1
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ ((), a)
                                     @ a
                                     @ ()
                                     @~ <((), a)>_N
                                     irred
                                     (Data.Array.Accelerate.Product.$WProdRunit @ cst)))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g)
  {- Arity: 9, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (9, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g)) ->
                 case ds1 of wild { (,,,,,,) a1 b1 c1 d1 e1 f1 g1 ->
                 (((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                        <b>_N <a>_N)))
                                                         <c>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                     <c>_N <b>_N <a>_N))))
                                                 <d>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                             <d>_N <c>_N <b>_N <a>_N))))
                                         <e>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                     <e>_N <d>_N <c>_N <b>_N <a>_N))))
                                 <f>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                             <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))
                         <g>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                     <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Product.ProdR
         cst (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g))
  {- Arity: 9, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                <b>_N <a>_N))
                                                                      <c>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                             <c>_N <b>_N <a>_N)))
                                                              <d>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                     <d>_N <c>_N <b>_N <a>_N)))
                                                      <e>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                             <e>_N <d>_N <c>_N <b>_N <a>_N)))
                                              <f>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                     <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N)))
                                      <g>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                             <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g)
    -> (a, b, c, d, e, f, g)
  {- Arity: 9, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(SL)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U)>m,
     Unfolding: InlineRule (9, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                     <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                             <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                     <e>_N <d>_N <c>_N <b>_N <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                             <d>_N <c>_N <b>_N <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                     <c>_N <b>_N <a>_N))
                                                           ((,)
                                                              (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                        <b>_N <a>_N))
                                                              <c>_R)_R)
                                                      <d>_R)_R)
                                              <e>_R)_R)
                                      <f>_R)_R)
                              <g>_R)_R) of wild { (,) ds2 g1 ->
                 case ds2 of wild1 { (,) ds3 f1 ->
                 case ds3 of wild2 { (,) ds4 e1 ->
                 case ds4 of wild3 { (,) ds5 d1 ->
                 case ds5 of wild4 { (,) ds6 c1 ->
                 case ds6 of wild5 { (,) ds7 b1 ->
                 case ds7 of wild6 { (,) ds8 a1 ->
                 case ds8 of wild7 { () ->
                 (a1, b1, c1, d1, e1, f1, g1) } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h)
  DFunId
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h).
                  @ cst
                  @ (a, b, c, d, e, f, g, h)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7) -}
2736b0211fc0bc0cc21669fb431309c4
  $fIsProductcst(,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Product.ProdR
         cst (((((((((), a), b), c), d), e), f), g), h)
  {- Arity: 10, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (10, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ (((((((((), a), b), c), d), e), f), g), h)
                   @ h
                   @ ((((((((), a), b), c), d), e), f), g)
                   @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                   irred7
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ ((((((((), a), b), c), d), e), f), g)
                      @ g
                      @ (((((((), a), b), c), d), e), f)
                      @~ <((((((((), a), b), c), d), e), f), g)>_N
                      irred6
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ (((((((), a), b), c), d), e), f)
                         @ f
                         @ ((((((), a), b), c), d), e)
                         @~ <(((((((), a), b), c), d), e), f)>_N
                         irred5
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ ((((((), a), b), c), d), e)
                            @ e
                            @ (((((), a), b), c), d)
                            @~ <((((((), a), b), c), d), e)>_N
                            irred4
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ (((((), a), b), c), d)
                               @ d
                               @ ((((), a), b), c)
                               @~ <(((((), a), b), c), d)>_N
                               irred3
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ ((((), a), b), c)
                                  @ c
                                  @ (((), a), b)
                                  @~ <((((), a), b), c)>_N
                                  irred2
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ (((), a), b)
                                     @ b
                                     @ ((), a)
                                     @~ <(((), a), b)>_N
                                     irred1
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ ((), a)
                                        @ a
                                        @ ()
                                        @~ <((), a)>_N
                                        irred
                                        (Data.Array.Accelerate.Product.$WProdRunit @ cst))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g, h)
  {- Arity: 10, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (10, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h)) ->
                 case ds1 of wild { (,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 ->
                 ((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1), h1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                <b>_N <a>_N)))
                                                                 <c>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                             <c>_N <b>_N <a>_N))))
                                                         <d>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                     <d>_N <c>_N <b>_N <a>_N))))
                                                 <e>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                             <e>_N <d>_N <c>_N <b>_N <a>_N))))
                                         <f>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                     <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))
                                 <g>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                             <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))
                         <h>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                     <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g, h))
  {- Arity: 10, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                        <b>_N
                                                                                        <a>_N))
                                                                              <c>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <d>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <e>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <f>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                             <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N)))
                                              <g>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                     <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N)))
                                      <h>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g, h)
    -> (a, b, c, d, e, f, g, h)
  {- Arity: 10, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U)>m,
     Unfolding: InlineRule (10, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                     <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                             <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                     <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                             <e>_N <d>_N <c>_N <b>_N <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                     <d>_N <c>_N <b>_N <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                             <c>_N <b>_N <a>_N))
                                                                   ((,)
                                                                      (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                <b>_N <a>_N))
                                                                      <c>_R)_R)
                                                              <d>_R)_R)
                                                      <e>_R)_R)
                                              <f>_R)_R)
                                      <g>_R)_R)
                              <h>_R)_R) of wild { (,) ds2 h1 ->
                 case ds2 of wild1 { (,) ds3 g1 ->
                 case ds3 of wild2 { (,) ds4 f1 ->
                 case ds4 of wild3 { (,) ds5 e1 ->
                 case ds5 of wild4 { (,) ds6 d1 ->
                 case ds6 of wild5 { (,) ds7 c1 ->
                 case ds7 of wild6 { (,) ds8 b1 ->
                 case ds8 of wild7 { (,) ds9 a1 ->
                 case ds9 of wild8 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1) } } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h, i)
  DFunId
  {- Arity: 9, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h)
                      (irred8 :: cst i).
                  @ cst
                  @ (a, b, c, d, e, f, g, h, i)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8) -}
cfc4319a50ffe9a2c8d08faaa9fd7299
  $fIsProductcst(,,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Product.ProdR
         cst ((((((((((), a), b), c), d), e), f), g), h), i)
  {- Arity: 11, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (11, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h, i)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ ((((((((((), a), b), c), d), e), f), g), h), i)
                   @ i
                   @ (((((((((), a), b), c), d), e), f), g), h)
                   @~ <((((((((((), a), b), c), d), e), f), g), h), i)>_N
                   irred8
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ (((((((((), a), b), c), d), e), f), g), h)
                      @ h
                      @ ((((((((), a), b), c), d), e), f), g)
                      @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                      irred7
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ ((((((((), a), b), c), d), e), f), g)
                         @ g
                         @ (((((((), a), b), c), d), e), f)
                         @~ <((((((((), a), b), c), d), e), f), g)>_N
                         irred6
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ (((((((), a), b), c), d), e), f)
                            @ f
                            @ ((((((), a), b), c), d), e)
                            @~ <(((((((), a), b), c), d), e), f)>_N
                            irred5
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ ((((((), a), b), c), d), e)
                               @ e
                               @ (((((), a), b), c), d)
                               @~ <((((((), a), b), c), d), e)>_N
                               irred4
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ (((((), a), b), c), d)
                                  @ d
                                  @ ((((), a), b), c)
                                  @~ <(((((), a), b), c), d)>_N
                                  irred3
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ ((((), a), b), c)
                                     @ c
                                     @ (((), a), b)
                                     @~ <((((), a), b), c)>_N
                                     irred2
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ (((), a), b)
                                        @ b
                                        @ ((), a)
                                        @~ <(((), a), b)>_N
                                        irred1
                                        (Data.Array.Accelerate.Product.ProdRsnoc
                                           @ cst
                                           @ ((), a)
                                           @ a
                                           @ ()
                                           @~ <((), a)>_N
                                           irred
                                           (Data.Array.Accelerate.Product.$WProdRunit
                                              @ cst)))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i)
  {- Arity: 11, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (11, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h, i)) ->
                 case ds1 of wild { (,,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 i1 ->
                 (((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1), h1), i1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Trans
                                                                      ((,)
                                                                         (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                        <b>_N
                                                                                        <a>_N)))
                                                                         <c>_R)_R
                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))))
                                                                 <d>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))))
                                                         <e>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))))
                                                 <f>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                             <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))
                                         <g>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                     <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))
                                 <h>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                             <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))))
                         <i>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                     <i>_N <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr
            (a, b, c, d, e, f, g, h, i))
  {- Arity: 11, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R <cst i>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h, i)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Trans
                                                                                   ((,)
                                                                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                <b>_N
                                                                                                <a>_N))
                                                                                      <c>_N)_N
                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N)))
                                                                              <d>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <e>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <f>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <g>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N)))
                                              <h>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N)))
                                      <i>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i)
    -> (a, b, c, d, e, f, g, h, i)
  {- Arity: 11, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U),U)>m,
     Unfolding: InlineRule (11, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h, i)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                     <i>_N <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                             <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                     <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                             <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                     <e>_N <d>_N <c>_N <b>_N <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))
                                                                   ((,)
                                                                      (Trans
                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))
                                                                           ((,)
                                                                              (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                        <b>_N
                                                                                        <a>_N))
                                                                              <c>_R)_R)
                                                                      <d>_R)_R)
                                                              <e>_R)_R)
                                                      <f>_R)_R)
                                              <g>_R)_R)
                                      <h>_R)_R)
                              <i>_R)_R) of wild { (,) ds2 i1 ->
                 case ds2 of wild1 { (,) ds3 h1 ->
                 case ds3 of wild2 { (,) ds4 g1 ->
                 case ds4 of wild3 { (,) ds5 f1 ->
                 case ds5 of wild4 { (,) ds6 e1 ->
                 case ds6 of wild5 { (,) ds7 d1 ->
                 case ds7 of wild6 { (,) ds8 c1 ->
                 case ds8 of wild7 { (,) ds9 b1 ->
                 case ds9 of wild8 { (,) ds10 a1 ->
                 case ds10 of wild9 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1, i1) } } } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h, i, j)
  DFunId
  {- Arity: 10, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h)
                      (irred8 :: cst i)
                      (irred9 :: cst j).
                  @ cst
                  @ (a, b, c, d, e, f, g, h, i, j)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9) -}
eebd6d20a0257dbc531e949a576894be
  $fIsProductcst(,,,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Product.ProdR
         cst (((((((((((), a), b), c), d), e), f), g), h), i), j)
  {- Arity: 12, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (12, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h, i, j)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                   @ j
                   @ ((((((((((), a), b), c), d), e), f), g), h), i)
                   @~ <(((((((((((), a), b), c), d), e), f), g), h), i), j)>_N
                   irred9
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ ((((((((((), a), b), c), d), e), f), g), h), i)
                      @ i
                      @ (((((((((), a), b), c), d), e), f), g), h)
                      @~ <((((((((((), a), b), c), d), e), f), g), h), i)>_N
                      irred8
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ (((((((((), a), b), c), d), e), f), g), h)
                         @ h
                         @ ((((((((), a), b), c), d), e), f), g)
                         @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                         irred7
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ ((((((((), a), b), c), d), e), f), g)
                            @ g
                            @ (((((((), a), b), c), d), e), f)
                            @~ <((((((((), a), b), c), d), e), f), g)>_N
                            irred6
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ (((((((), a), b), c), d), e), f)
                               @ f
                               @ ((((((), a), b), c), d), e)
                               @~ <(((((((), a), b), c), d), e), f)>_N
                               irred5
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ ((((((), a), b), c), d), e)
                                  @ e
                                  @ (((((), a), b), c), d)
                                  @~ <((((((), a), b), c), d), e)>_N
                                  irred4
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ (((((), a), b), c), d)
                                     @ d
                                     @ ((((), a), b), c)
                                     @~ <(((((), a), b), c), d)>_N
                                     irred3
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ ((((), a), b), c)
                                        @ c
                                        @ (((), a), b)
                                        @~ <((((), a), b), c)>_N
                                        irred2
                                        (Data.Array.Accelerate.Product.ProdRsnoc
                                           @ cst
                                           @ (((), a), b)
                                           @ b
                                           @ ((), a)
                                           @~ <(((), a), b)>_N
                                           irred1
                                           (Data.Array.Accelerate.Product.ProdRsnoc
                                              @ cst
                                              @ ((), a)
                                              @ a
                                              @ ()
                                              @~ <((), a)>_N
                                              irred
                                              (Data.Array.Accelerate.Product.$WProdRunit
                                                 @ cst))))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j)
  {- Arity: 12, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (12, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h, i, j)) ->
                 case ds1 of wild { (,,,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 ->
                 ((((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1), h1),
                   i1),
                  j1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Trans
                                                                      ((,)
                                                                         (Trans
                                                                              ((,)
                                                                                 (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                <b>_N
                                                                                                <a>_N)))
                                                                                 <c>_R)_R
                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))))
                                                                         <d>_R)_R
                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))))
                                                                 <e>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))))
                                                         <f>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))))
                                                 <g>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))))
                                         <h>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))))
                                 <i>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))
                         <j>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr
            (a, b, c, d, e, f, g, h, i, j))
  {- Arity: 12, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R <cst i>_R
                 ->_R <cst j>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h, i, j)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Trans
                                                                                   ((,)
                                                                                      (Trans
                                                                                           ((,)
                                                                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                        <b>_N
                                                                                                        <a>_N))
                                                                                              <c>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N)))
                                                                                      <d>_N)_N
                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N)))
                                                                              <e>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <f>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <g>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <h>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N)))
                                              <i>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N)))
                                      <j>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j)
    -> (a, b, c, d, e, f, g, h, i, j)
  {- Arity: 12, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U),U),U)>m,
     Unfolding: InlineRule (12, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h, i, j)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                     <j>_N <i>_N <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                             <i>_N <h>_N <g>_N <f>_N <e>_N <d>_N <c>_N <b>_N <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))
                                                                   ((,)
                                                                      (Trans
                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))
                                                                           ((,)
                                                                              (Trans
                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))
                                                                                   ((,)
                                                                                      (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                <b>_N
                                                                                                <a>_N))
                                                                                      <c>_R)_R)
                                                                              <d>_R)_R)
                                                                      <e>_R)_R)
                                                              <f>_R)_R)
                                                      <g>_R)_R)
                                              <h>_R)_R)
                                      <i>_R)_R)
                              <j>_R)_R) of wild { (,) ds2 j1 ->
                 case ds2 of wild1 { (,) ds3 i1 ->
                 case ds3 of wild2 { (,) ds4 h1 ->
                 case ds4 of wild3 { (,) ds5 g1 ->
                 case ds5 of wild4 { (,) ds6 f1 ->
                 case ds6 of wild5 { (,) ds7 e1 ->
                 case ds7 of wild6 { (,) ds8 d1 ->
                 case ds8 of wild7 { (,) ds9 c1 ->
                 case ds9 of wild8 { (,) ds10 b1 ->
                 case ds10 of wild9 { (,) ds11 a1 ->
                 case ds11 of wild10 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1, i1, j1) } } } } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h, i, j, k)
  DFunId
  {- Arity: 11, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h)
                      (irred8 :: cst i)
                      (irred9 :: cst j)
                      (irred10 :: cst k).
                  @ cst
                  @ (a, b, c, d, e, f, g, h, i, j, k)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10) -}
024d9b6d942ffbbb2078ff57232ecd9d
  $fIsProductcst(,,,,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Product.ProdR
         cst ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
  {- Arity: 13, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (13, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h, i, j, k)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                   @ k
                   @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                   @~ <((((((((((((), a), b), c), d), e), f), g), h), i), j), k)>_N
                   irred10
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                      @ j
                      @ ((((((((((), a), b), c), d), e), f), g), h), i)
                      @~ <(((((((((((), a), b), c), d), e), f), g), h), i), j)>_N
                      irred9
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ ((((((((((), a), b), c), d), e), f), g), h), i)
                         @ i
                         @ (((((((((), a), b), c), d), e), f), g), h)
                         @~ <((((((((((), a), b), c), d), e), f), g), h), i)>_N
                         irred8
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ (((((((((), a), b), c), d), e), f), g), h)
                            @ h
                            @ ((((((((), a), b), c), d), e), f), g)
                            @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                            irred7
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ ((((((((), a), b), c), d), e), f), g)
                               @ g
                               @ (((((((), a), b), c), d), e), f)
                               @~ <((((((((), a), b), c), d), e), f), g)>_N
                               irred6
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ (((((((), a), b), c), d), e), f)
                                  @ f
                                  @ ((((((), a), b), c), d), e)
                                  @~ <(((((((), a), b), c), d), e), f)>_N
                                  irred5
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ ((((((), a), b), c), d), e)
                                     @ e
                                     @ (((((), a), b), c), d)
                                     @~ <((((((), a), b), c), d), e)>_N
                                     irred4
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ (((((), a), b), c), d)
                                        @ d
                                        @ ((((), a), b), c)
                                        @~ <(((((), a), b), c), d)>_N
                                        irred3
                                        (Data.Array.Accelerate.Product.ProdRsnoc
                                           @ cst
                                           @ ((((), a), b), c)
                                           @ c
                                           @ (((), a), b)
                                           @~ <((((), a), b), c)>_N
                                           irred2
                                           (Data.Array.Accelerate.Product.ProdRsnoc
                                              @ cst
                                              @ (((), a), b)
                                              @ b
                                              @ ((), a)
                                              @~ <(((), a), b)>_N
                                              irred1
                                              (Data.Array.Accelerate.Product.ProdRsnoc
                                                 @ cst
                                                 @ ((), a)
                                                 @ a
                                                 @ ()
                                                 @~ <((), a)>_N
                                                 irred
                                                 (Data.Array.Accelerate.Product.$WProdRunit
                                                    @ cst)))))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k)
  {- Arity: 13, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (13, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h, i, j, k)) ->
                 case ds1 of wild { (,,,,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 k1 ->
                 (((((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1), h1),
                    i1),
                   j1),
                  k1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Trans
                                                                      ((,)
                                                                         (Trans
                                                                              ((,)
                                                                                 (Trans
                                                                                      ((,)
                                                                                         (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                        <b>_N
                                                                                                        <a>_N)))
                                                                                         <c>_R)_R
                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))))
                                                                                 <d>_R)_R
                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))))
                                                                         <e>_R)_R
                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))))
                                                                 <f>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))))
                                                         <g>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))))
                                                 <h>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))))
                                         <i>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))))
                                 <j>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))
                         <k>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr
            (a, b, c, d, e, f, g, h, i, j, k))
  {- Arity: 13, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R <cst i>_R
                 ->_R <cst j>_R
                 ->_R <cst k>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h, i, j, k)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Trans
                                                                                   ((,)
                                                                                      (Trans
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   ((,)
                                                                                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                <b>_N
                                                                                                                <a>_N))
                                                                                                      <c>_N)_N
                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N)))
                                                                                              <d>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N)))
                                                                                      <e>_N)_N
                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N)))
                                                                              <f>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <g>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <h>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <i>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N)))
                                              <j>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N)))
                                      <k>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k)
    -> (a, b, c, d, e, f, g, h, i, j, k)
  {- Arity: 13, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U),U),U),U)>,
     Unfolding: InlineRule (13, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h, i, j, k)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))
                                                                   ((,)
                                                                      (Trans
                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))
                                                                           ((,)
                                                                              (Trans
                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))
                                                                                   ((,)
                                                                                      (Trans
                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))
                                                                                           ((,)
                                                                                              (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                        <b>_N
                                                                                                        <a>_N))
                                                                                              <c>_R)_R)
                                                                                      <d>_R)_R)
                                                                              <e>_R)_R)
                                                                      <f>_R)_R)
                                                              <g>_R)_R)
                                                      <h>_R)_R)
                                              <i>_R)_R)
                                      <j>_R)_R)
                              <k>_R)_R) of wild { (,) ds2 k1 ->
                 case ds2 of wild1 { (,) ds3 j1 ->
                 case ds3 of wild2 { (,) ds4 i1 ->
                 case ds4 of wild3 { (,) ds5 h1 ->
                 case ds5 of wild4 { (,) ds6 g1 ->
                 case ds6 of wild5 { (,) ds7 f1 ->
                 case ds7 of wild6 { (,) ds8 e1 ->
                 case ds8 of wild7 { (,) ds9 d1 ->
                 case ds9 of wild8 { (,) ds10 c1 ->
                 case ds10 of wild9 { (,) ds11 b1 ->
                 case ds11 of wild10 { (,) ds12 a1 ->
                 case ds12 of wild11 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1, i1, j1,
                  k1) } } } } } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h, i, j, k, l)
  DFunId
  {- Arity: 12, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h)
                      (irred8 :: cst i)
                      (irred9 :: cst j)
                      (irred10 :: cst k)
                      (irred11 :: cst l).
                  @ cst
                  @ (a, b, c, d, e, f, g, h, i, j, k, l)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11) -}
8e55efae082176b8a06fa8d8c5fcb475
  $fIsProductcst(,,,,,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Product.ProdR
         cst (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
  {- Arity: 14, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (14, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h, i, j, k, l)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
                   @ l
                   @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                   @~ <(((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                        l)>_N
                   irred11
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                      @ k
                      @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                      @~ <((((((((((((), a), b), c), d), e), f), g), h), i), j), k)>_N
                      irred10
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                         @ j
                         @ ((((((((((), a), b), c), d), e), f), g), h), i)
                         @~ <(((((((((((), a), b), c), d), e), f), g), h), i), j)>_N
                         irred9
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ ((((((((((), a), b), c), d), e), f), g), h), i)
                            @ i
                            @ (((((((((), a), b), c), d), e), f), g), h)
                            @~ <((((((((((), a), b), c), d), e), f), g), h), i)>_N
                            irred8
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ (((((((((), a), b), c), d), e), f), g), h)
                               @ h
                               @ ((((((((), a), b), c), d), e), f), g)
                               @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                               irred7
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ ((((((((), a), b), c), d), e), f), g)
                                  @ g
                                  @ (((((((), a), b), c), d), e), f)
                                  @~ <((((((((), a), b), c), d), e), f), g)>_N
                                  irred6
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ (((((((), a), b), c), d), e), f)
                                     @ f
                                     @ ((((((), a), b), c), d), e)
                                     @~ <(((((((), a), b), c), d), e), f)>_N
                                     irred5
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ ((((((), a), b), c), d), e)
                                        @ e
                                        @ (((((), a), b), c), d)
                                        @~ <((((((), a), b), c), d), e)>_N
                                        irred4
                                        (Data.Array.Accelerate.Product.ProdRsnoc
                                           @ cst
                                           @ (((((), a), b), c), d)
                                           @ d
                                           @ ((((), a), b), c)
                                           @~ <(((((), a), b), c), d)>_N
                                           irred3
                                           (Data.Array.Accelerate.Product.ProdRsnoc
                                              @ cst
                                              @ ((((), a), b), c)
                                              @ c
                                              @ (((), a), b)
                                              @~ <((((), a), b), c)>_N
                                              irred2
                                              (Data.Array.Accelerate.Product.ProdRsnoc
                                                 @ cst
                                                 @ (((), a), b)
                                                 @ b
                                                 @ ((), a)
                                                 @~ <(((), a), b)>_N
                                                 irred1
                                                 (Data.Array.Accelerate.Product.ProdRsnoc
                                                    @ cst
                                                    @ ((), a)
                                                    @ a
                                                    @ ()
                                                    @~ <((), a)>_N
                                                    irred
                                                    (Data.Array.Accelerate.Product.$WProdRunit
                                                       @ cst))))))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l)
  {- Arity: 14, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (14, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h, i, j, k, l)) ->
                 case ds1 of wild { (,,,,,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 k1 l1 ->
                 ((((((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1), h1),
                     i1),
                    j1),
                   k1),
                  l1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Trans
                                                                      ((,)
                                                                         (Trans
                                                                              ((,)
                                                                                 (Trans
                                                                                      ((,)
                                                                                         (Trans
                                                                                              ((,)
                                                                                                 (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                <b>_N
                                                                                                                <a>_N)))
                                                                                                 <c>_R)_R
                                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))))
                                                                                         <d>_R)_R
                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))))
                                                                                 <e>_R)_R
                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))))
                                                                         <f>_R)_R
                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))))
                                                                 <g>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))))
                                                         <h>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))))
                                                 <i>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))))
                                         <j>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))))
                                 <k>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))
                         <l>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr
            (a, b, c, d, e, f, g, h, i, j, k, l))
  {- Arity: 14, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R <cst i>_R
                 ->_R <cst j>_R
                 ->_R <cst k>_R
                 ->_R <cst l>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h, i, j, k, l)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Trans
                                                                                   ((,)
                                                                                      (Trans
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   ((,)
                                                                                                      (Trans
                                                                                                           ((,)
                                                                                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                        <b>_N
                                                                                                                        <a>_N))
                                                                                                              <c>_N)_N
                                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N)))
                                                                                                      <d>_N)_N
                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N)))
                                                                                              <e>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N)))
                                                                                      <f>_N)_N
                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N)))
                                                                              <g>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <h>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <i>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <j>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N)))
                                              <k>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N)))
                                      <l>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> (a, b, c, d, e, f, g, h, i, j, k, l)
  {- Arity: 14, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U),U),U),U),U)>,
     Unfolding: InlineRule (14, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h, i, j, k, l)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))
                                                                   ((,)
                                                                      (Trans
                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))
                                                                           ((,)
                                                                              (Trans
                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))
                                                                                   ((,)
                                                                                      (Trans
                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))
                                                                                                   ((,)
                                                                                                      (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                <b>_N
                                                                                                                <a>_N))
                                                                                                      <c>_R)_R)
                                                                                              <d>_R)_R)
                                                                                      <e>_R)_R)
                                                                              <f>_R)_R)
                                                                      <g>_R)_R)
                                                              <h>_R)_R)
                                                      <i>_R)_R)
                                              <j>_R)_R)
                                      <k>_R)_R)
                              <l>_R)_R) of wild { (,) ds2 l1 ->
                 case ds2 of wild1 { (,) ds3 k1 ->
                 case ds3 of wild2 { (,) ds4 j1 ->
                 case ds4 of wild3 { (,) ds5 i1 ->
                 case ds5 of wild4 { (,) ds6 h1 ->
                 case ds6 of wild5 { (,) ds7 g1 ->
                 case ds7 of wild6 { (,) ds8 f1 ->
                 case ds8 of wild7 { (,) ds9 e1 ->
                 case ds9 of wild8 { (,) ds10 d1 ->
                 case ds10 of wild9 { (,) ds11 c1 ->
                 case ds11 of wild10 { (,) ds12 b1 ->
                 case ds12 of wild11 { (,) ds13 a1 ->
                 case ds13 of wild12 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1, i1, j1, k1,
                  l1) } } } } } } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h, i, j, k, l, m)
  DFunId
  {- Arity: 13, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h)
                      (irred8 :: cst i)
                      (irred9 :: cst j)
                      (irred10 :: cst k)
                      (irred11 :: cst l)
                      (irred12 :: cst m).
                  @ cst
                  @ (a, b, c, d, e, f, g, h, i, j, k, l, m)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12) -}
a4ed7c7430d4d181d8a772516520aa22
  $fIsProductcst(,,,,,,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         ((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l), m)
  {- Arity: 15, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (15, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h, i, j, k, l, m)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ ((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                      m)
                   @ m
                   @ (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
                   @~ <((((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                         l),
                        m)>_N
                   irred12
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
                      @ l
                      @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                      @~ <(((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                           l)>_N
                      irred11
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                         @ k
                         @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                         @~ <((((((((((((), a), b), c), d), e), f), g), h), i), j), k)>_N
                         irred10
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                            @ j
                            @ ((((((((((), a), b), c), d), e), f), g), h), i)
                            @~ <(((((((((((), a), b), c), d), e), f), g), h), i), j)>_N
                            irred9
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ ((((((((((), a), b), c), d), e), f), g), h), i)
                               @ i
                               @ (((((((((), a), b), c), d), e), f), g), h)
                               @~ <((((((((((), a), b), c), d), e), f), g), h), i)>_N
                               irred8
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ (((((((((), a), b), c), d), e), f), g), h)
                                  @ h
                                  @ ((((((((), a), b), c), d), e), f), g)
                                  @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                                  irred7
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ ((((((((), a), b), c), d), e), f), g)
                                     @ g
                                     @ (((((((), a), b), c), d), e), f)
                                     @~ <((((((((), a), b), c), d), e), f), g)>_N
                                     irred6
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ (((((((), a), b), c), d), e), f)
                                        @ f
                                        @ ((((((), a), b), c), d), e)
                                        @~ <(((((((), a), b), c), d), e), f)>_N
                                        irred5
                                        (Data.Array.Accelerate.Product.ProdRsnoc
                                           @ cst
                                           @ ((((((), a), b), c), d), e)
                                           @ e
                                           @ (((((), a), b), c), d)
                                           @~ <((((((), a), b), c), d), e)>_N
                                           irred4
                                           (Data.Array.Accelerate.Product.ProdRsnoc
                                              @ cst
                                              @ (((((), a), b), c), d)
                                              @ d
                                              @ ((((), a), b), c)
                                              @~ <(((((), a), b), c), d)>_N
                                              irred3
                                              (Data.Array.Accelerate.Product.ProdRsnoc
                                                 @ cst
                                                 @ ((((), a), b), c)
                                                 @ c
                                                 @ (((), a), b)
                                                 @~ <((((), a), b), c)>_N
                                                 irred2
                                                 (Data.Array.Accelerate.Product.ProdRsnoc
                                                    @ cst
                                                    @ (((), a), b)
                                                    @ b
                                                    @ ((), a)
                                                    @~ <(((), a), b)>_N
                                                    irred1
                                                    (Data.Array.Accelerate.Product.ProdRsnoc
                                                       @ cst
                                                       @ ((), a)
                                                       @ a
                                                       @ ()
                                                       @~ <((), a)>_N
                                                       irred
                                                       (Data.Array.Accelerate.Product.$WProdRunit
                                                          @ cst)))))))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
  {- Arity: 15, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (15, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h, i, j, k, l, m)) ->
                 case ds1 of wild { (,,,,,,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 k1 l1 m1 ->
                 (((((((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1), h1),
                      i1),
                     j1),
                    k1),
                   l1),
                  m1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Trans
                                                                      ((,)
                                                                         (Trans
                                                                              ((,)
                                                                                 (Trans
                                                                                      ((,)
                                                                                         (Trans
                                                                                              ((,)
                                                                                                 (Trans
                                                                                                      ((,)
                                                                                                         (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                        <b>_N
                                                                                                                        <a>_N)))
                                                                                                         <c>_R)_R
                                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N))))
                                                                                                 <d>_R)_R
                                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))))
                                                                                         <e>_R)_R
                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))))
                                                                                 <f>_R)_R
                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))))
                                                                         <g>_R)_R
                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))))
                                                                 <h>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))))
                                                         <i>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))))
                                                 <j>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))))
                                         <k>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))))
                                 <l>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))
                         <m>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                     <m>_N
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr
            (a, b, c, d, e, f, g, h, i, j, k, l, m))
  {- Arity: 15, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R <cst i>_R
                 ->_R <cst j>_R
                 ->_R <cst k>_R
                 ->_R <cst l>_R
                 ->_R <cst m>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Trans
                                                                                   ((,)
                                                                                      (Trans
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   ((,)
                                                                                                      (Trans
                                                                                                           ((,)
                                                                                                              (Trans
                                                                                                                   ((,)
                                                                                                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                                <b>_N
                                                                                                                                <a>_N))
                                                                                                                      <c>_N)_N
                                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                             <c>_N
                                                                                                                             <b>_N
                                                                                                                             <a>_N)))
                                                                                                              <d>_N)_N
                                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                                     <d>_N
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N)))
                                                                                                      <e>_N)_N
                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                             <e>_N
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N)))
                                                                                              <f>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                                     <f>_N
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N)))
                                                                                      <g>_N)_N
                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                             <g>_N
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N)))
                                                                              <h>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                                     <h>_N
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <i>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                             <i>_N
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <j>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                                     <j>_N
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <k>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                             <k>_N
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N)))
                                              <l>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                                     <l>_N
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N)))
                                      <m>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                             <m>_N
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m)
  {- Arity: 15, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U),U),U),U),U),U)>,
     Unfolding: InlineRule (15, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h, i, j, k, l, m)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                     <m>_N
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))
                                                                   ((,)
                                                                      (Trans
                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))
                                                                           ((,)
                                                                              (Trans
                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))
                                                                                   ((,)
                                                                                      (Trans
                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))
                                                                                                   ((,)
                                                                                                      (Trans
                                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N))
                                                                                                           ((,)
                                                                                                              (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                        <b>_N
                                                                                                                        <a>_N))
                                                                                                              <c>_R)_R)
                                                                                                      <d>_R)_R)
                                                                                              <e>_R)_R)
                                                                                      <f>_R)_R)
                                                                              <g>_R)_R)
                                                                      <h>_R)_R)
                                                              <i>_R)_R)
                                                      <j>_R)_R)
                                              <k>_R)_R)
                                      <l>_R)_R)
                              <m>_R)_R) of wild { (,) ds2 m1 ->
                 case ds2 of wild1 { (,) ds3 l1 ->
                 case ds3 of wild2 { (,) ds4 k1 ->
                 case ds4 of wild3 { (,) ds5 j1 ->
                 case ds5 of wild4 { (,) ds6 i1 ->
                 case ds6 of wild5 { (,) ds7 h1 ->
                 case ds7 of wild6 { (,) ds8 g1 ->
                 case ds8 of wild7 { (,) ds9 f1 ->
                 case ds9 of wild8 { (,) ds10 e1 ->
                 case ds10 of wild9 { (,) ds11 d1 ->
                 case ds11 of wild10 { (,) ds12 c1 ->
                 case ds12 of wild11 { (,) ds13 b1 ->
                 case ds13 of wild12 { (,) ds14 a1 ->
                 case ds14 of wild13 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1, i1, j1, k1, l1,
                  m1) } } } } } } } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  DFunId
  {- Arity: 14, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      @ n
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h)
                      (irred8 :: cst i)
                      (irred9 :: cst j)
                      (irred10 :: cst k)
                      (irred11 :: cst l)
                      (irred12 :: cst m)
                      (irred13 :: cst n).
                  @ cst
                  @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12
                     irred13)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12
                     irred13)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12
                     irred13) -}
04e88db16320e04ea717bfbcf64c897c
  $fIsProductcst(,,,,,,,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
           m),
          n)
  {- Arity: 16, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (16, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   (irred13 :: cst n)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h, i, j, k, l, m, n)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ (((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                       m),
                      n)
                   @ n
                   @ ((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                      m)
                   @~ <(((((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                          l),
                         m),
                        n)>_N
                   irred13
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ ((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                         m)
                      @ m
                      @ (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
                      @~ <((((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                            l),
                           m)>_N
                      irred12
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
                         @ l
                         @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                         @~ <(((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                              l)>_N
                         irred11
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                            @ k
                            @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                            @~ <((((((((((((), a), b), c), d), e), f), g), h), i), j), k)>_N
                            irred10
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                               @ j
                               @ ((((((((((), a), b), c), d), e), f), g), h), i)
                               @~ <(((((((((((), a), b), c), d), e), f), g), h), i), j)>_N
                               irred9
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ ((((((((((), a), b), c), d), e), f), g), h), i)
                                  @ i
                                  @ (((((((((), a), b), c), d), e), f), g), h)
                                  @~ <((((((((((), a), b), c), d), e), f), g), h), i)>_N
                                  irred8
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ (((((((((), a), b), c), d), e), f), g), h)
                                     @ h
                                     @ ((((((((), a), b), c), d), e), f), g)
                                     @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                                     irred7
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ ((((((((), a), b), c), d), e), f), g)
                                        @ g
                                        @ (((((((), a), b), c), d), e), f)
                                        @~ <((((((((), a), b), c), d), e), f), g)>_N
                                        irred6
                                        (Data.Array.Accelerate.Product.ProdRsnoc
                                           @ cst
                                           @ (((((((), a), b), c), d), e), f)
                                           @ f
                                           @ ((((((), a), b), c), d), e)
                                           @~ <(((((((), a), b), c), d), e), f)>_N
                                           irred5
                                           (Data.Array.Accelerate.Product.ProdRsnoc
                                              @ cst
                                              @ ((((((), a), b), c), d), e)
                                              @ e
                                              @ (((((), a), b), c), d)
                                              @~ <((((((), a), b), c), d), e)>_N
                                              irred4
                                              (Data.Array.Accelerate.Product.ProdRsnoc
                                                 @ cst
                                                 @ (((((), a), b), c), d)
                                                 @ d
                                                 @ ((((), a), b), c)
                                                 @~ <(((((), a), b), c), d)>_N
                                                 irred3
                                                 (Data.Array.Accelerate.Product.ProdRsnoc
                                                    @ cst
                                                    @ ((((), a), b), c)
                                                    @ c
                                                    @ (((), a), b)
                                                    @~ <((((), a), b), c)>_N
                                                    irred2
                                                    (Data.Array.Accelerate.Product.ProdRsnoc
                                                       @ cst
                                                       @ (((), a), b)
                                                       @ b
                                                       @ ((), a)
                                                       @~ <(((), a), b)>_N
                                                       irred1
                                                       (Data.Array.Accelerate.Product.ProdRsnoc
                                                          @ cst
                                                          @ ((), a)
                                                          @ a
                                                          @ ()
                                                          @~ <((), a)>_N
                                                          irred
                                                          (Data.Array.Accelerate.Product.$WProdRunit
                                                             @ cst))))))))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  {- Arity: 16, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (16, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   (irred13 :: cst n)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h, i, j, k, l, m, n)) ->
                 case ds1 of wild { (,,,,,,,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 k1 l1 m1 n1 ->
                 ((((((((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1), h1),
                       i1),
                      j1),
                     k1),
                    l1),
                   m1),
                  n1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Trans
                                                                      ((,)
                                                                         (Trans
                                                                              ((,)
                                                                                 (Trans
                                                                                      ((,)
                                                                                         (Trans
                                                                                              ((,)
                                                                                                 (Trans
                                                                                                      ((,)
                                                                                                         (Trans
                                                                                                              ((,)
                                                                                                                 (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                                <b>_N
                                                                                                                                <a>_N)))
                                                                                                                 <c>_R)_R
                                                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                             <c>_N
                                                                                                                             <b>_N
                                                                                                                             <a>_N))))
                                                                                                         <d>_R)_R
                                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                                     <d>_N
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N))))
                                                                                                 <e>_R)_R
                                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                             <e>_N
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))))
                                                                                         <f>_R)_R
                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                                     <f>_N
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))))
                                                                                 <g>_R)_R
                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                             <g>_N
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))))
                                                                         <h>_R)_R
                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                                     <h>_N
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))))
                                                                 <i>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                             <i>_N
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))))
                                                         <j>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                                     <j>_N
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))))
                                                 <k>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                             <k>_N
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))))
                                         <l>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                                     <l>_N
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))))
                                 <m>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                             <m>_N
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))
                         <n>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,)[0]
                                     <n>_N
                                     <m>_N
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n))
  {- Arity: 16, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R <cst i>_R
                 ->_R <cst j>_R
                 ->_R <cst k>_R
                 ->_R <cst l>_R
                 ->_R <cst m>_R
                 ->_R <cst n>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Trans
                                                                                   ((,)
                                                                                      (Trans
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   ((,)
                                                                                                      (Trans
                                                                                                           ((,)
                                                                                                              (Trans
                                                                                                                   ((,)
                                                                                                                      (Trans
                                                                                                                           ((,)
                                                                                                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                                        <b>_N
                                                                                                                                        <a>_N))
                                                                                                                              <c>_N)_N
                                                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                                     <c>_N
                                                                                                                                     <b>_N
                                                                                                                                     <a>_N)))
                                                                                                                      <d>_N)_N
                                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                                             <d>_N
                                                                                                                             <c>_N
                                                                                                                             <b>_N
                                                                                                                             <a>_N)))
                                                                                                              <e>_N)_N
                                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                                     <e>_N
                                                                                                                     <d>_N
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N)))
                                                                                                      <f>_N)_N
                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                                             <f>_N
                                                                                                             <e>_N
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N)))
                                                                                              <g>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                                     <g>_N
                                                                                                     <f>_N
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N)))
                                                                                      <h>_N)_N
                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                                             <h>_N
                                                                                             <g>_N
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N)))
                                                                              <i>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                                     <i>_N
                                                                                     <h>_N
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <j>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                                             <j>_N
                                                                             <i>_N
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <k>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                                     <k>_N
                                                                     <j>_N
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <l>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                                             <l>_N
                                                             <k>_N
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N)))
                                              <m>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                                     <m>_N
                                                     <l>_N
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N)))
                                      <n>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,)[0]
                                             <n>_N
                                             <m>_N
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  {- Arity: 16, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U),U),U),U),U),U),U)>,
     Unfolding: InlineRule (16, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   (irred13 :: cst n)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,)[0]
                                     <n>_N
                                     <m>_N
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                             <m>_N
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                                     <l>_N
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                             <k>_N
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                                     <j>_N
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                             <i>_N
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))
                                                                   ((,)
                                                                      (Trans
                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                                     <h>_N
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))
                                                                           ((,)
                                                                              (Trans
                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                             <g>_N
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))
                                                                                   ((,)
                                                                                      (Trans
                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                                     <f>_N
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                             <e>_N
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))
                                                                                                   ((,)
                                                                                                      (Trans
                                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                                     <d>_N
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N))
                                                                                                           ((,)
                                                                                                              (Trans
                                                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                             <c>_N
                                                                                                                             <b>_N
                                                                                                                             <a>_N))
                                                                                                                   ((,)
                                                                                                                      (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                                <b>_N
                                                                                                                                <a>_N))
                                                                                                                      <c>_R)_R)
                                                                                                              <d>_R)_R)
                                                                                                      <e>_R)_R)
                                                                                              <f>_R)_R)
                                                                                      <g>_R)_R)
                                                                              <h>_R)_R)
                                                                      <i>_R)_R)
                                                              <j>_R)_R)
                                                      <k>_R)_R)
                                              <l>_R)_R)
                                      <m>_R)_R)
                              <n>_R)_R) of wild { (,) ds2 n1 ->
                 case ds2 of wild1 { (,) ds3 m1 ->
                 case ds3 of wild2 { (,) ds4 l1 ->
                 case ds4 of wild3 { (,) ds5 k1 ->
                 case ds5 of wild4 { (,) ds6 j1 ->
                 case ds6 of wild5 { (,) ds7 i1 ->
                 case ds7 of wild6 { (,) ds8 h1 ->
                 case ds8 of wild7 { (,) ds9 g1 ->
                 case ds9 of wild8 { (,) ds10 f1 ->
                 case ds10 of wild9 { (,) ds11 e1 ->
                 case ds11 of wild10 { (,) ds12 d1 ->
                 case ds12 of wild11 { (,) ds13 c1 ->
                 case ds13 of wild12 { (,) ds14 b1 ->
                 case ds14 of wild13 { (,) ds15 a1 ->
                 case ds15 of wild14 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1, i1, j1, k1, l1, m1,
                  n1) } } } } } } } } } } } } } } }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,,) ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n, cst o) =>
    Data.Array.Accelerate.Product.IsProduct
      cst (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  DFunId
  {- Arity: 15, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (cst :: * -> GHC.Types.Constraint)
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      @ n
                      @ o
                      (irred :: cst a)
                      (irred1 :: cst b)
                      (irred2 :: cst c)
                      (irred3 :: cst d)
                      (irred4 :: cst e)
                      (irred5 :: cst f)
                      (irred6 :: cst g)
                      (irred7 :: cst h)
                      (irred8 :: cst i)
                      (irred9 :: cst j)
                      (irred10 :: cst k)
                      (irred11 :: cst l)
                      (irred12 :: cst m)
                      (irred13 :: cst n)
                      (irred14 :: cst o).
                  @ cst
                  @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,,)_$cfromProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12
                     irred13
                     irred14)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,,)_$ctoProd
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12
                     irred13
                     irred14)
                  (Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,,)_$cprod
                     @ cst
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     irred
                     irred1
                     irred2
                     irred3
                     irred4
                     irred5
                     irred6
                     irred7
                     irred8
                     irred9
                     irred10
                     irred11
                     irred12
                     irred13
                     irred14) -}
07cf1c014509d0e9e312fb0f9acd8124
  $fIsProductcst(,,,,,,,,,,,,,,)1 ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n, cst o) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         ((((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
            m),
           n),
          o)
  {- Arity: 17, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (17, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   (irred13 :: cst n)
                   (irred14 :: cst o)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (p :: proxy cst)
                   (ds :: (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) ->
                 Data.Array.Accelerate.Product.ProdRsnoc
                   @ cst
                   @ ((((((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                         l),
                        m),
                       n),
                      o)
                   @ o
                   @ (((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                       m),
                      n)
                   @~ <((((((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                           l),
                          m),
                         n),
                        o)>_N
                   irred14
                   (Data.Array.Accelerate.Product.ProdRsnoc
                      @ cst
                      @ (((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                          m),
                         n)
                      @ n
                      @ ((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                         m)
                      @~ <(((((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                             l),
                            m),
                           n)>_N
                      irred13
                      (Data.Array.Accelerate.Product.ProdRsnoc
                         @ cst
                         @ ((((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l),
                            m)
                         @ m
                         @ (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
                         @~ <((((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                               l),
                              m)>_N
                         irred12
                         (Data.Array.Accelerate.Product.ProdRsnoc
                            @ cst
                            @ (((((((((((((), a), b), c), d), e), f), g), h), i), j), k), l)
                            @ l
                            @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                            @~ <(((((((((((((), a), b), c), d), e), f), g), h), i), j), k),
                                 l)>_N
                            irred11
                            (Data.Array.Accelerate.Product.ProdRsnoc
                               @ cst
                               @ ((((((((((((), a), b), c), d), e), f), g), h), i), j), k)
                               @ k
                               @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                               @~ <((((((((((((), a), b), c), d), e), f), g), h), i), j), k)>_N
                               irred10
                               (Data.Array.Accelerate.Product.ProdRsnoc
                                  @ cst
                                  @ (((((((((((), a), b), c), d), e), f), g), h), i), j)
                                  @ j
                                  @ ((((((((((), a), b), c), d), e), f), g), h), i)
                                  @~ <(((((((((((), a), b), c), d), e), f), g), h), i), j)>_N
                                  irred9
                                  (Data.Array.Accelerate.Product.ProdRsnoc
                                     @ cst
                                     @ ((((((((((), a), b), c), d), e), f), g), h), i)
                                     @ i
                                     @ (((((((((), a), b), c), d), e), f), g), h)
                                     @~ <((((((((((), a), b), c), d), e), f), g), h), i)>_N
                                     irred8
                                     (Data.Array.Accelerate.Product.ProdRsnoc
                                        @ cst
                                        @ (((((((((), a), b), c), d), e), f), g), h)
                                        @ h
                                        @ ((((((((), a), b), c), d), e), f), g)
                                        @~ <(((((((((), a), b), c), d), e), f), g), h)>_N
                                        irred7
                                        (Data.Array.Accelerate.Product.ProdRsnoc
                                           @ cst
                                           @ ((((((((), a), b), c), d), e), f), g)
                                           @ g
                                           @ (((((((), a), b), c), d), e), f)
                                           @~ <((((((((), a), b), c), d), e), f), g)>_N
                                           irred6
                                           (Data.Array.Accelerate.Product.ProdRsnoc
                                              @ cst
                                              @ (((((((), a), b), c), d), e), f)
                                              @ f
                                              @ ((((((), a), b), c), d), e)
                                              @~ <(((((((), a), b), c), d), e), f)>_N
                                              irred5
                                              (Data.Array.Accelerate.Product.ProdRsnoc
                                                 @ cst
                                                 @ ((((((), a), b), c), d), e)
                                                 @ e
                                                 @ (((((), a), b), c), d)
                                                 @~ <((((((), a), b), c), d), e)>_N
                                                 irred4
                                                 (Data.Array.Accelerate.Product.ProdRsnoc
                                                    @ cst
                                                    @ (((((), a), b), c), d)
                                                    @ d
                                                    @ ((((), a), b), c)
                                                    @~ <(((((), a), b), c), d)>_N
                                                    irred3
                                                    (Data.Array.Accelerate.Product.ProdRsnoc
                                                       @ cst
                                                       @ ((((), a), b), c)
                                                       @ c
                                                       @ (((), a), b)
                                                       @~ <((((), a), b), c)>_N
                                                       irred2
                                                       (Data.Array.Accelerate.Product.ProdRsnoc
                                                          @ cst
                                                          @ (((), a), b)
                                                          @ b
                                                          @ ((), a)
                                                          @~ <(((), a), b)>_N
                                                          irred1
                                                          (Data.Array.Accelerate.Product.ProdRsnoc
                                                             @ cst
                                                             @ ((), a)
                                                             @ a
                                                             @ ()
                                                             @~ <((), a)>_N
                                                             irred
                                                             (Data.Array.Accelerate.Product.$WProdRunit
                                                                @ cst)))))))))))))))) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,,)_$cfromProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n, cst o) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  {- Arity: 17, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (17, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   (irred13 :: cst n)
                   (irred14 :: cst o)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) ->
                 case ds1 of wild { (,,,,,,,,,,,,,,) a1 b1 c1 d1 e1 f1 g1 h1 i1 j1 k1 l1 m1 n1 o1 ->
                 (((((((((((((((GHC.Tuple.(), a1), b1), c1), d1), e1), f1), g1),
                         h1),
                        i1),
                       j1),
                      k1),
                     l1),
                    m1),
                   n1),
                  o1)
                   `cast`
                 (Trans
                      ((,)
                         (Trans
                              ((,)
                                 (Trans
                                      ((,)
                                         (Trans
                                              ((,)
                                                 (Trans
                                                      ((,)
                                                         (Trans
                                                              ((,)
                                                                 (Trans
                                                                      ((,)
                                                                         (Trans
                                                                              ((,)
                                                                                 (Trans
                                                                                      ((,)
                                                                                         (Trans
                                                                                              ((,)
                                                                                                 (Trans
                                                                                                      ((,)
                                                                                                         (Trans
                                                                                                              ((,)
                                                                                                                 (Trans
                                                                                                                      ((,)
                                                                                                                         (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                                        <b>_N
                                                                                                                                        <a>_N)))
                                                                                                                         <c>_R)_R
                                                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                                     <c>_N
                                                                                                                                     <b>_N
                                                                                                                                     <a>_N))))
                                                                                                                 <d>_R)_R
                                                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                                             <d>_N
                                                                                                                             <c>_N
                                                                                                                             <b>_N
                                                                                                                             <a>_N))))
                                                                                                         <e>_R)_R
                                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                                     <e>_N
                                                                                                                     <d>_N
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N))))
                                                                                                 <f>_R)_R
                                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                                             <f>_N
                                                                                                             <e>_N
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))))
                                                                                         <g>_R)_R
                                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                                     <g>_N
                                                                                                     <f>_N
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))))
                                                                                 <h>_R)_R
                                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                                             <h>_N
                                                                                             <g>_N
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))))
                                                                         <i>_R)_R
                                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                                     <i>_N
                                                                                     <h>_N
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))))
                                                                 <j>_R)_R
                                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                                             <j>_N
                                                                             <i>_N
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))))
                                                         <k>_R)_R
                                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                                     <k>_N
                                                                     <j>_N
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))))
                                                 <l>_R)_R
                                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                                             <l>_N
                                                             <k>_N
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))))
                                         <m>_R)_R
                                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                                     <m>_N
                                                     <l>_N
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))))
                                 <n>_R)_R
                              (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,)[0]
                                             <n>_N
                                             <m>_N
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))
                         <o>_R)_R
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,,)[0]
                                     <o>_N
                                     <n>_N
                                     <m>_N
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N)))) }) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,,)_$cprod ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n, cst o) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Product.ProdR
         cst
         (Data.Array.Accelerate.Product.ProdRepr
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o))
  {- Arity: 17, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,,)1
                  `cast`
                (forall (cst :: <*
                                 -> GHC.Types.Constraint>_N) (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N) (o :: <*>_N).
                 <cst a>_R
                 ->_R <cst b>_R
                 ->_R <cst c>_R
                 ->_R <cst d>_R
                 ->_R <cst e>_R
                 ->_R <cst f>_R
                 ->_R <cst g>_R
                 ->_R <cst h>_R
                 ->_R <cst i>_R
                 ->_R <cst j>_R
                 ->_R <cst k>_R
                 ->_R <cst l>_R
                 ->_R <cst m>_R
                 ->_R <cst n>_R
                 ->_R <cst o>_R
                 ->_R forall (proxy :: <(* -> GHC.Types.Constraint) -> *>_N).
                      <proxy cst>_R
                      ->_R <(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                      ->_R (Data.Array.Accelerate.Product.ProdR
                              <cst>_R
                              (Trans
                                   ((,)
                                      (Trans
                                           ((,)
                                              (Trans
                                                   ((,)
                                                      (Trans
                                                           ((,)
                                                              (Trans
                                                                   ((,)
                                                                      (Trans
                                                                           ((,)
                                                                              (Trans
                                                                                   ((,)
                                                                                      (Trans
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   ((,)
                                                                                                      (Trans
                                                                                                           ((,)
                                                                                                              (Trans
                                                                                                                   ((,)
                                                                                                                      (Trans
                                                                                                                           ((,)
                                                                                                                              (Trans
                                                                                                                                   ((,)
                                                                                                                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                                                <b>_N
                                                                                                                                                <a>_N))
                                                                                                                                      <c>_N)_N
                                                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                                             <c>_N
                                                                                                                                             <b>_N
                                                                                                                                             <a>_N)))
                                                                                                                              <d>_N)_N
                                                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                                                     <d>_N
                                                                                                                                     <c>_N
                                                                                                                                     <b>_N
                                                                                                                                     <a>_N)))
                                                                                                                      <e>_N)_N
                                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                                             <e>_N
                                                                                                                             <d>_N
                                                                                                                             <c>_N
                                                                                                                             <b>_N
                                                                                                                             <a>_N)))
                                                                                                              <f>_N)_N
                                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                                                     <f>_N
                                                                                                                     <e>_N
                                                                                                                     <d>_N
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N)))
                                                                                                      <g>_N)_N
                                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                                             <g>_N
                                                                                                             <f>_N
                                                                                                             <e>_N
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N)))
                                                                                              <h>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                                                     <h>_N
                                                                                                     <g>_N
                                                                                                     <f>_N
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N)))
                                                                                      <i>_N)_N
                                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                                             <i>_N
                                                                                             <h>_N
                                                                                             <g>_N
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N)))
                                                                              <j>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                                                     <j>_N
                                                                                     <i>_N
                                                                                     <h>_N
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N)))
                                                                      <k>_N)_N
                                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                                             <k>_N
                                                                             <j>_N
                                                                             <i>_N
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N)))
                                                              <l>_N)_N
                                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                                                     <l>_N
                                                                     <k>_N
                                                                     <j>_N
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N)))
                                                      <m>_N)_N
                                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                                             <m>_N
                                                             <l>_N
                                                             <k>_N
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N)))
                                              <n>_N)_N
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,)[0]
                                                     <n>_N
                                                     <m>_N
                                                     <l>_N
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N)))
                                      <o>_N)_N
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,,)[0]
                                             <o>_N
                                             <n>_N
                                             <m>_N
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))))_R) -}
f6af3d33d87461c8507cabb9d14916a8
  $fIsProductcst(,,,,,,,,,,,,,,)_$ctoProd ::
    (cst a, cst b, cst c, cst d, cst e, cst f, cst g, cst h, cst i,
     cst j, cst k, cst l, cst m, cst n, cst o) =>
    forall (proxy :: (* -> GHC.Types.Constraint) -> *).
    proxy cst
    -> Data.Array.Accelerate.Product.ProdRepr
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  {- Arity: 17, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><S(S(S(S(S(S(S(S(S(S(S(S(S(S(S(SL)L)L)L)L)L)L)L)L)L)L)L)L)L)L),1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*U(1*H,U),U),U),U),U),U),U),U),U),U),U),U),U),U),U)>,
     Unfolding: InlineRule (17, True, False)
                (\ @ (cst :: * -> GHC.Types.Constraint)
                   @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (irred :: cst a)
                   (irred1 :: cst b)
                   (irred2 :: cst c)
                   (irred3 :: cst d)
                   (irred4 :: cst e)
                   (irred5 :: cst f)
                   (irred6 :: cst g)
                   (irred7 :: cst h)
                   (irred8 :: cst i)
                   (irred9 :: cst j)
                   (irred10 :: cst k)
                   (irred11 :: cst l)
                   (irred12 :: cst m)
                   (irred13 :: cst n)
                   (irred14 :: cst o)
                   @ (proxy :: (* -> GHC.Types.Constraint) -> *)
                   (ds :: proxy cst)
                   (ds1 :: Data.Array.Accelerate.Product.ProdRepr
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) ->
                 case ds1
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,,)[0]
                                     <o>_N
                                     <n>_N
                                     <m>_N
                                     <l>_N
                                     <k>_N
                                     <j>_N
                                     <i>_N
                                     <h>_N
                                     <g>_N
                                     <f>_N
                                     <e>_N
                                     <d>_N
                                     <c>_N
                                     <b>_N
                                     <a>_N))
                           ((,)
                              (Trans
                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,)[0]
                                             <n>_N
                                             <m>_N
                                             <l>_N
                                             <k>_N
                                             <j>_N
                                             <i>_N
                                             <h>_N
                                             <g>_N
                                             <f>_N
                                             <e>_N
                                             <d>_N
                                             <c>_N
                                             <b>_N
                                             <a>_N))
                                   ((,)
                                      (Trans
                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)[0]
                                                     <m>_N
                                                     <l>_N
                                                     <k>_N
                                                     <j>_N
                                                     <i>_N
                                                     <h>_N
                                                     <g>_N
                                                     <f>_N
                                                     <e>_N
                                                     <d>_N
                                                     <c>_N
                                                     <b>_N
                                                     <a>_N))
                                           ((,)
                                              (Trans
                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)[0]
                                                             <l>_N
                                                             <k>_N
                                                             <j>_N
                                                             <i>_N
                                                             <h>_N
                                                             <g>_N
                                                             <f>_N
                                                             <e>_N
                                                             <d>_N
                                                             <c>_N
                                                             <b>_N
                                                             <a>_N))
                                                   ((,)
                                                      (Trans
                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)[0]
                                                                     <k>_N
                                                                     <j>_N
                                                                     <i>_N
                                                                     <h>_N
                                                                     <g>_N
                                                                     <f>_N
                                                                     <e>_N
                                                                     <d>_N
                                                                     <c>_N
                                                                     <b>_N
                                                                     <a>_N))
                                                           ((,)
                                                              (Trans
                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)[0]
                                                                             <j>_N
                                                                             <i>_N
                                                                             <h>_N
                                                                             <g>_N
                                                                             <f>_N
                                                                             <e>_N
                                                                             <d>_N
                                                                             <c>_N
                                                                             <b>_N
                                                                             <a>_N))
                                                                   ((,)
                                                                      (Trans
                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)[0]
                                                                                     <i>_N
                                                                                     <h>_N
                                                                                     <g>_N
                                                                                     <f>_N
                                                                                     <e>_N
                                                                                     <d>_N
                                                                                     <c>_N
                                                                                     <b>_N
                                                                                     <a>_N))
                                                                           ((,)
                                                                              (Trans
                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)[0]
                                                                                             <h>_N
                                                                                             <g>_N
                                                                                             <f>_N
                                                                                             <e>_N
                                                                                             <d>_N
                                                                                             <c>_N
                                                                                             <b>_N
                                                                                             <a>_N))
                                                                                   ((,)
                                                                                      (Trans
                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)[0]
                                                                                                     <g>_N
                                                                                                     <f>_N
                                                                                                     <e>_N
                                                                                                     <d>_N
                                                                                                     <c>_N
                                                                                                     <b>_N
                                                                                                     <a>_N))
                                                                                           ((,)
                                                                                              (Trans
                                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)[0]
                                                                                                             <f>_N
                                                                                                             <e>_N
                                                                                                             <d>_N
                                                                                                             <c>_N
                                                                                                             <b>_N
                                                                                                             <a>_N))
                                                                                                   ((,)
                                                                                                      (Trans
                                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)[0]
                                                                                                                     <e>_N
                                                                                                                     <d>_N
                                                                                                                     <c>_N
                                                                                                                     <b>_N
                                                                                                                     <a>_N))
                                                                                                           ((,)
                                                                                                              (Trans
                                                                                                                   (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)[0]
                                                                                                                             <d>_N
                                                                                                                             <c>_N
                                                                                                                             <b>_N
                                                                                                                             <a>_N))
                                                                                                                   ((,)
                                                                                                                      (Trans
                                                                                                                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                                                                                     <c>_N
                                                                                                                                     <b>_N
                                                                                                                                     <a>_N))
                                                                                                                           ((,)
                                                                                                                              (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                                                                                        <b>_N
                                                                                                                                        <a>_N))
                                                                                                                              <c>_R)_R)
                                                                                                                      <d>_R)_R)
                                                                                                              <e>_R)_R)
                                                                                                      <f>_R)_R)
                                                                                              <g>_R)_R)
                                                                                      <h>_R)_R)
                                                                              <i>_R)_R)
                                                                      <j>_R)_R)
                                                              <k>_R)_R)
                                                      <l>_R)_R)
                                              <m>_R)_R)
                                      <n>_R)_R)
                              <o>_R)_R) of wild { (,) ds2 o1 ->
                 case ds2 of wild1 { (,) ds3 n1 ->
                 case ds3 of wild2 { (,) ds4 m1 ->
                 case ds4 of wild3 { (,) ds5 l1 ->
                 case ds5 of wild4 { (,) ds6 k1 ->
                 case ds6 of wild5 { (,) ds7 j1 ->
                 case ds7 of wild6 { (,) ds8 i1 ->
                 case ds8 of wild7 { (,) ds9 h1 ->
                 case ds9 of wild8 { (,) ds10 g1 ->
                 case ds10 of wild9 { (,) ds11 f1 ->
                 case ds11 of wild10 { (,) ds12 e1 ->
                 case ds12 of wild11 { (,) ds13 d1 ->
                 case ds13 of wild12 { (,) ds14 c1 ->
                 case ds14 of wild13 { (,) ds15 b1 ->
                 case ds15 of wild14 { (,) ds16 a1 ->
                 case ds16 of wild15 { () ->
                 (a1, b1, c1, d1, e1, f1, g1, h1, i1, j1, k1, l1, m1, n1,
                  o1) } } } } } } } } } } } } } } } }) -}
c3fda671a011330215dfabefad0114fb
  $tc'C:IsProduct :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3047918704567963292##
                   2755310276121768318##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tc'C:IsProduct1) -}
658a408ff788b0556fedd1a5b8846483
  $tc'C:IsProduct1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:IsProduct"#) -}
146f4e960c1f8d55a96a7a163f3f18b5
  $tc'ProdRsnoc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11799101761021538395##
                   13119654853938729635##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tc'ProdRsnoc1) -}
e21d13d8256f270f770f9e6fdfca3afa
  $tc'ProdRsnoc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ProdRsnoc"#) -}
5b13b4f7ea055c4aeee1c34014b15756
  $tc'ProdRunit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3447916741647310453##
                   17525949773042445837##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tc'ProdRunit1) -}
b44593540d7b6aa1ffa25c9932658f2c
  $tc'ProdRunit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ProdRunit"#) -}
499a7d74672231a03a625df3f7bd7be3
  $tc'SuccTupIdx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9983975759942226197##
                   14019030420737831511##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tc'SuccTupIdx1) -}
89ead87b682feba502c5278ec2808a3b
  $tc'SuccTupIdx1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SuccTupIdx"#) -}
facb5b3c10d48d5c1a99b1ef1c3fb158
  $tc'ZeroTupIdx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8975576323570333907##
                   13191612683281016683##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tc'ZeroTupIdx1) -}
9d72b5b2b94895509ab2d29bc77f7bdb
  $tc'ZeroTupIdx1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ZeroTupIdx"#) -}
f41f386b3adbb943c5789d7aa9e70b5b
  $tcIsProduct :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9800518283921629816##
                   14736112243247814695##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tcIsProduct1) -}
83c114cd1442b5c0c89a4c80567f1e05
  $tcIsProduct1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "IsProduct"#) -}
a28df966d3c9850944cee013f28a83b9
  $tcProdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3516848020161148002##
                   12396730591486816970##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tcProdR1) -}
4ade0e149fbb1c88941cd2a8fb316e34
  $tcProdR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ProdR"#) -}
d8e55b5d2e93c6cbff4f9fb473fee4ba
  $tcTupleIdx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6593308046492648629##
                   12194907937013454417##
                   Data.Array.Accelerate.Product.$trModule
                   Data.Array.Accelerate.Product.$tcTupleIdx1) -}
7eada4ebf7db4226dae7ce925b5e33b3
  $tcTupleIdx1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TupleIdx"#) -}
aa6e526d443a20ed76a5bd949fa55e03
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Product.$trModule2
                   Data.Array.Accelerate.Product.$trModule1) -}
aedd2de5c7858ea043aa85bbf810c77d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Data.Array.Accelerate.Product"#) -}
485fe9e240178966bdefb3d21260bca2
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr()::
      Data.Array.Accelerate.Product.ProdRepr () = ()
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,)::
    [b, a] Data.Array.Accelerate.Product.ProdRepr (a, b) = (((), a), b)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,)::
    [c, b, a]
      Data.Array.Accelerate.Product.ProdRepr (a, b, c)
        = (Data.Array.Accelerate.Product.ProdRepr (a, b), c)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,)::
    [d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr (a, b, c, d)
        = (Data.Array.Accelerate.Product.ProdRepr (a, b, c), d)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,)::
    [e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e)
        = (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d), e)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,)::
    [f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f)
        = (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e), f)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,)::
    [g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g)
        = (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f), g)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,)::
    [h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g, h)
        = (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g), h)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,,)::
    [i, h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g, h, i)
        = (Data.Array.Accelerate.Product.ProdRepr (a, b, c, d, e, f, g, h),
           i)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,,,)::
    [j, i, h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr
        (a, b, c, d, e, f, g, h, i, j)
        = (Data.Array.Accelerate.Product.ProdRepr
             (a, b, c, d, e, f, g, h, i),
           j)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,,,,)::
    [k, j, i, h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr
        (a, b, c, d, e, f, g, h, i, j, k)
        = (Data.Array.Accelerate.Product.ProdRepr
             (a, b, c, d, e, f, g, h, i, j),
           k)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,,,,,)::
    [l, k, j, i, h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr
        (a, b, c, d, e, f, g, h, i, j, k, l)
        = (Data.Array.Accelerate.Product.ProdRepr
             (a, b, c, d, e, f, g, h, i, j, k),
           l)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,,,,,,)::
    [m, l, k, j, i, h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr
        (a, b, c, d, e, f, g, h, i, j, k, l, m)
        = (Data.Array.Accelerate.Product.ProdRepr
             (a, b, c, d, e, f, g, h, i, j, k, l),
           m)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,,,,,,,)::
    [n, m, l, k, j, i, h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr
        (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
        = (Data.Array.Accelerate.Product.ProdRepr
             (a, b, c, d, e, f, g, h, i, j, k, l, m),
           n)
f6af3d33d87461c8507cabb9d14916a8
  axiom D:R:ProdRepr(,,,,,,,,,,,,,,)::
    [o, n, m, l, k, j, i, h, g, f, e, d, c, b, a]
      Data.Array.Accelerate.Product.ProdRepr
        (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
        = (Data.Array.Accelerate.Product.ProdRepr
             (a, b, c, d, e, f, g, h, i, j, k, l, m, n),
           o)
f6af3d33d87461c8507cabb9d14916a8
  class IsProduct (cst :: * -> GHC.Types.Constraint) tup where
    type family ProdRepr tup :: * open
    fromProd :: proxy cst
                -> tup -> Data.Array.Accelerate.Product.ProdRepr tup
    toProd :: proxy cst
              -> Data.Array.Accelerate.Product.ProdRepr tup -> tup
    prod :: proxy cst
            -> tup
            -> Data.Array.Accelerate.Product.ProdR
                 cst (Data.Array.Accelerate.Product.ProdRepr tup)
    {-# MINIMAL fromProd, toProd, prod #-}
bc179ba7dcbfec12a55132ac94afddf4
  type role ProdR representational nominal
  data ProdR (cst :: * -> GHC.Types.Constraint) t where
    ProdRunit :: ProdR cst ()
    ProdRsnoc :: cst e =>
                 (Data.Array.Accelerate.Product.ProdR cst t1) -> ProdR cst (t1, e)
3dd7384d0a4490c82730ecfcb4d16f06
  type role TupleIdx nominal nominal
  data TupleIdx t e where
    ZeroTupIdx :: TupleIdx (t1, e) e
    SuccTupIdx :: (Data.Array.Accelerate.Product.TupleIdx t1 e)
                  -> TupleIdx (t1, s) e
instance [safe] Data.Array.Accelerate.Product.IsProduct [., ()]
  = Data.Array.Accelerate.Product.$fIsProductcst()
instance [safe] Data.Array.Accelerate.Product.IsProduct [., (,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [., (,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [., (,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [., (,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,)
instance [safe] Data.Array.Accelerate.Product.IsProduct [.,
                                                         (,,,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.$fIsProductcst(,,,,,,,,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [()]
  = Data.Array.Accelerate.Product.D:R:ProdRepr()
family instance Data.Array.Accelerate.Product.ProdRepr [(,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,)
family instance Data.Array.Accelerate.Product.ProdRepr [(,,,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Product.D:R:ProdRepr(,,,,,,,,,,,,,,)
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

