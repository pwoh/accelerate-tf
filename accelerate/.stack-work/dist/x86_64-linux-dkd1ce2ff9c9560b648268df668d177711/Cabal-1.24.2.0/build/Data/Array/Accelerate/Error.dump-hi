
==================== FINAL INTERFACE ====================
2017-08-29 05:26:54.636234 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Error 8002
  interface hash: 887a9f1860137617b2b6f98db90cc94c
  ABI hash: 9ed2d4a71009d558f562e118e9d36a23
  export-list hash: f46a01ad5e78f9618f7a91c4ba90bc31
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 34a7648c6f5a49484f2a0937857116c9
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Array.Accelerate.Error.boundsCheck
  Data.Array.Accelerate.Error.boundsError
  Data.Array.Accelerate.Error.boundsWarning
  Data.Array.Accelerate.Error.indexCheck
  Data.Array.Accelerate.Error.internalCheck
  Data.Array.Accelerate.Error.internalError
  Data.Array.Accelerate.Error.internalWarning
  Data.Array.Accelerate.Error.unsafeCheck
  Data.Array.Accelerate.Error.unsafeError
  Data.Array.Accelerate.Error.unsafeWarning
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.2@ghc-boot-th-8.0.2
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      template-haskell-2.11.1.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Debug.Trace a9edf3aec504f4423d8ba829ab373a25
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  template-haskell-2.11.1.0:Language.Haskell.TH d856a1f9d606be57026da48a46c8b0a9
import  -/  template-haskell-2.11.1.0:Language.Haskell.TH.Lib 715cf040319ba19bc69da4853519bde7
import  -/  template-haskell-2.11.1.0:Language.Haskell.TH.Syntax f73a6f51a55e744c097972689232ddf4
addDependentFile "/home/pwoh/.stack/programs/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
055868b233ea61404f4ee46d4107b34f
  $tc'Bounds :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18336316301232581963##
                   5942777567021996176##
                   Data.Array.Accelerate.Error.$trModule
                   Data.Array.Accelerate.Error.$tc'Bounds1) -}
b36b075c3f071b50a7f60e3584374e14
  $tc'Bounds1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Bounds"#) -}
b6300f4c4fd55ce8ab28abbfed72e95b
  $tc'Internal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3948912596634840862##
                   13473949591003305220##
                   Data.Array.Accelerate.Error.$trModule
                   Data.Array.Accelerate.Error.$tc'Internal1) -}
cd306f86e09c80a75470269d737d436f
  $tc'Internal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Internal"#) -}
0ad50def979c5d55a1a2ca8a2fa05af9
  $tc'Unsafe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12824104346387746273##
                   18285106899938131192##
                   Data.Array.Accelerate.Error.$trModule
                   Data.Array.Accelerate.Error.$tc'Unsafe1) -}
e139e242acd09560a15b0e4e9d25e4bd
  $tc'Unsafe1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Unsafe"#) -}
a4a81f2cdb701c0fda39ed155c24e4e7
  $tcCheck :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9507588864921392257##
                   812800241770909255##
                   Data.Array.Accelerate.Error.$trModule
                   Data.Array.Accelerate.Error.$tcCheck1) -}
67573987c6974a49770feee835c44389
  $tcCheck1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Check"#) -}
dfe0500db61042a817dd468ccd1b18a3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Error.$trModule2
                   Data.Array.Accelerate.Error.$trModule1) -}
ed51745e5e34893ceb11232c54c5943b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Data.Array.Accelerate.Error"#) -}
8b9203822d521b697fa0b8dc9637d51f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
44b42b40fbd588602a03c14c03ee6f82
  data Check = Bounds | Unsafe | Internal
5afb1405eec221b95d5609c09f30023b
  boundsCheck ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.boundsCheck1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
10b9cf8721307b39964fef3e70975420
  boundsCheck1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsCheck8
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.boundsCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
745f8db132bef4f220eacf7498c0d49b
  boundsCheck10 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Strictness: <S(S(S(LC(C(S))LLL)L)LLLLLLLLLLLLLLLLLLLL),U(U(U(U(U(U,U),U,U,U,U),U,U,U,U),U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
9b11c44b1aec6d356911ba33c437ba47
  boundsCheck2 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.conE1
                   Data.Array.Accelerate.Error.boundsCheck3) -}
07c7ec49d63576c51e4a693977315860
  boundsCheck3 :: Language.Haskell.TH.Syntax.Name
  {- Strictness: m,
     Unfolding: (Language.Haskell.TH.Syntax.Name
                   Data.Array.Accelerate.Error.boundsCheck7
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:OccName[0]))
                   Data.Array.Accelerate.Error.boundsCheck4) -}
fd8eedf632fb92eb74dd2609d110fc25
  boundsCheck4 :: Language.Haskell.TH.Syntax.NameFlavour
  {- Strictness: m5,
     Unfolding: (Language.Haskell.TH.Syntax.NameG
                   Language.Haskell.TH.Syntax.DataName
                   Data.Array.Accelerate.Error.boundsCheck6
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:PkgName[0]))
                   Data.Array.Accelerate.Error.boundsCheck5
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:ModName[0]))) -}
3de87befd3b5ddafc33ff3cff2c67bb9
  boundsCheck5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.Array.Accelerate.Error"#) -}
0a199852c91c9cc3724570ae02841b80
  boundsCheck6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
ffe9af1a22508eb4df23056351ce3c07
  boundsCheck7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Bounds"#) -}
80fa88e0954a2f7e96374fa3aabe780e
  boundsCheck8 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsCheck10
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.boundsCheck9
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
55d77cc372390cdf9727166929c693ba
  boundsCheck9 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Strictness: <S(S(S(LC(C(S))LLL)L)LLLLLLLLLLLLLLLLLLLL),U(U(U(U(U(U,U),U,U,U,U),U,U,U,U),U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
ee7cd39f0708f034be4ec704652502ef
  boundsError ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.boundsError1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
655236e2c811b7648409778e3ea2b512
  boundsError1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsError2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.boundsCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
204b2e4162e63a3fa0b32defaea239f1
  boundsError2 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsError3
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.boundsCheck9
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
ef868a7f084e7332f2219f6dd7e2ad37
  boundsError3 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Strictness: <S(S(S(LC(C(S))LLL)L)LLLLLLLLLLLLLLLLLLLL),U(U(U(U(U(U,U),U,U,U,U),U,U,U,U),U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
bf42f6d2731e32238861d30df1d060eb
  boundsWarning ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.boundsWarning1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
63c0a58ac75df3a4968eb7f1bf3ce93e
  boundsWarning1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsWarning2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.boundsCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
8f22d8f86cbee76c9a58165299d47911
  boundsWarning2 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsWarning3
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.boundsCheck9
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
27ebdb7180305b5a2a407bb119346cf5
  boundsWarning3 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Strictness: <S(S(S(LC(C(S))LLL)L)LLLLLLLLLLLLLLLLLLLL),U(U(U(U(U(U,U),U,U,U,U),U,U,U,U),U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
95bf4b02947c8c3e282c15050c022fa9
  call :: GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f :: GHC.Base.String) (m :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      Data.Array.Accelerate.Error.call2)
                   (GHC.Base.augment
                      @ GHC.Types.Char
                      (\ @ b
                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr @ GHC.Types.Char @ b c n f)
                      (GHC.Base.augment
                         @ GHC.Types.Char
                         (\ @ b
                            (c :: GHC.Types.Char -> b -> b)[OneShot]
                            (n :: b)[OneShot] ->
                          GHC.Base.foldr
                            @ GHC.Types.Char
                            @ b
                            c
                            n
                            Data.Array.Accelerate.Error.call1)
                         m))) -}
bc0d43c30ed525d43132a1c46ef65606
  call1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "): "#) -}
2b92b4010388b6d1e89614bc2920370c
  call2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "("#) -}
ceda3ca04bd3b8516235aa07ff825eef
  doChecks :: Data.Array.Accelerate.Error.Check -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ (ds :: Data.Array.Accelerate.Error.Check) ->
                 case ds of wild {
                   Data.Array.Accelerate.Error.Bounds -> GHC.Types.True
                   Data.Array.Accelerate.Error.Unsafe -> GHC.Types.False
                   Data.Array.Accelerate.Error.Internal -> GHC.Types.False }) -}
54e07801f21c65f47e61eb3bf2a3f03e
  indexCheck ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.indexCheck1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
102e1750bb99322b47f567861c40179c
  indexCheck1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.indexCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.boundsCheck9
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
c420ce39461b7c33f3c8b3c1716e5590
  indexCheck2 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Strictness: <S(S(S(LC(C(S))LLL)L)LLLLLLLLLLLLLLLLLLLL),U(U(U(U(U(U,U),U,U,U,U),U,U,U,U),U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)> -}
b5e5bdf15bb75000e14453e6b2e53ba6
  internalCheck ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.internalCheck1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
e98f54f89582018863134484be3d612b
  internalCheck1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsCheck8
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.internalCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
626c5bbc2b6c3f3ad7db0175c3c75df3
  internalCheck2 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.conE1
                   Data.Array.Accelerate.Error.internalCheck3) -}
c9aa3674687c29ac82217f56c369c297
  internalCheck3 :: Language.Haskell.TH.Syntax.Name
  {- Strictness: m,
     Unfolding: (Language.Haskell.TH.Syntax.Name
                   Data.Array.Accelerate.Error.internalCheck4
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:OccName[0]))
                   Data.Array.Accelerate.Error.boundsCheck4) -}
2056d272e4c16b71620aae6751df9303
  internalCheck4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Internal"#) -}
aa331c50846093a3a39d2946a445c28d
  internalError ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.internalError1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
cc5b69483a9030007aa79f631bc3454c
  internalError1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsError2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.internalCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
10eafa360d7d24f4f866163feb8792cf
  internalWarning ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.internalWarning1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
150ce0005ccad8a0085f9db47f9caa8b
  internalWarning1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsWarning2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.internalCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
43164dbb4cecc9911948fd9ecaf0a042
  message ::
    Data.Array.Accelerate.Error.Check
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (kind :: Data.Array.Accelerate.Error.Check)
                   (msg :: GHC.Base.String) ->
                 case kind of wild {
                   DEFAULT
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Data.Array.Accelerate.Error.message7
                        msg
                   Data.Array.Accelerate.Error.Internal
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Data.Array.Accelerate.Error.message1
                        msg }) -}
80f40d36c0beb7c10b9dff528e037514
  message1 :: GHC.Base.String
  {- Unfolding: (Data.OldList.unlines
                   Data.Array.Accelerate.Error.message2) -}
180c8208defcd5146b9c2f901e2e717d
  message2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Data.Array.Accelerate.Error.message3) -}
bc1a74429f408638b7c55d144ed46a56
  message3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Data.Array.Accelerate.Error.message6
                   Data.Array.Accelerate.Error.message4) -}
85866cdf3d7ce669c59c905f2f2b4990
  message4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Data.Array.Accelerate.Error.message5
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
b9de65253af7e3836e3bdf3f348a059e
  message5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "*** Please submit a bug report at https://github.com/AccelerateHS/accelerate/issues"#) -}
24bdb145a9798a74ccc14fdb225ef64a
  message6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "*** Internal error in package accelerate ***"#) -}
7a0018c0d141e3b9ddbadab11c31be93
  message7 :: GHC.Base.String
  {- Unfolding: (Data.OldList.unlines
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
f7a13c928828412b0db6771a90a30594
  unsafeCheck ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.unsafeCheck1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
741a6ddb953d547d152cf31e41716c5e
  unsafeCheck1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsCheck8
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.unsafeCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
e5e2205f3423883c092c7cabcc8fd38c
  unsafeCheck2 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.conE1
                   Data.Array.Accelerate.Error.unsafeCheck3) -}
9950b8a5b9a63b9cc9753e10b1177743
  unsafeCheck3 :: Language.Haskell.TH.Syntax.Name
  {- Strictness: m,
     Unfolding: (Language.Haskell.TH.Syntax.Name
                   Data.Array.Accelerate.Error.unsafeCheck4
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:OccName[0]))
                   Data.Array.Accelerate.Error.boundsCheck4) -}
41133459fce4f98de00f1d95ad423a2c
  unsafeCheck4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Unsafe"#) -}
da63dd7bd4fcbe7f056cb52c8f2a2a24
  unsafeError ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.unsafeError1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
4121ba08755fcb924931e023c8be98ca
  unsafeError1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsError2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.unsafeCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
47c927be9bd73509d48599a545eed287
  unsafeWarning ::
    Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Error.unsafeWarning1
                  `cast`
                (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                          <Language.Haskell.TH.Syntax.Exp>_N)) -}
6981d49355f2d6a018b1cf43988ee1bb
  unsafeWarning1 ::
    Language.Haskell.TH.Syntax.Quasi m =>
    m Language.Haskell.TH.Syntax.Exp
  {- Arity: 1,
     Unfolding: (Language.Haskell.TH.Lib.appE1
                   Data.Array.Accelerate.Error.boundsWarning2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))
                   Data.Array.Accelerate.Error.unsafeCheck2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Language.Haskell.TH.Syntax.Exp>_N))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

