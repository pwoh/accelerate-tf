
==================== FINAL INTERFACE ====================
2017-08-29 05:27:42.343245 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Ord [orphan module] 8002
  interface hash: 83b15c5ea5f7d35a6d8ac4a8c454aee2
  ABI hash: 838718467444fc3520e0ce057ae54e2a
  export-list hash: 73bb94b1a06727c01aa4a74d6dab52ae
  orphan hash: 50b71ed92ea9be853e3b98c96354bd1d
  flag hash: c41c39962105214f56b6dd8e7f4e3036
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Array.Accelerate.Classes.Ord.Ord{Data.Array.Accelerate.Classes.Ord.< Data.Array.Accelerate.Classes.Ord.<= Data.Array.Accelerate.Classes.Ord.> Data.Array.Accelerate.Classes.Ord.>= Data.Array.Accelerate.Classes.Ord.max Data.Array.Accelerate.Classes.Ord.min}
module dependencies: Data.Array.Accelerate.AST
                     Data.Array.Accelerate.Array.Data
                     Data.Array.Accelerate.Array.Representation
                     Data.Array.Accelerate.Array.Sugar
                     Data.Array.Accelerate.Array.Unique Data.Array.Accelerate.Classes.Eq
                     Data.Array.Accelerate.Debug.Flags
                     Data.Array.Accelerate.Debug.Monitoring
                     Data.Array.Accelerate.Debug.Trace Data.Array.Accelerate.Error
                     Data.Array.Accelerate.Lifetime Data.Array.Accelerate.Product
                     Data.Array.Accelerate.Smart Data.Array.Accelerate.Type
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      unique-0@unique-0-9CJQKYGbqiDaFUmoekKeA
orphans: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Eq
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt:Data.Label.Point
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Data
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Representation
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Sugar
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Product
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Smart
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Type
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  Data.Array.Accelerate.Classes.Eq b5abcb6d2b1b2f77926ba32e74c56bfd
  exports: 6d08b503170f674ec3fef36c5a59035f
  && fd3fbc575278d01240f55b5285c81d9c
  /= bfd246b5fc13bff4fe92c8890493d0d4
  == 373f16d63bf36dcf6c5be36579a78740
  Eq 52ed39f384f936d7cab795259d55d4b0
  not a442d284a248c70a10c21df510baefef
  || 385cac0096364cd1168d80272fce6db4
import  -/  Data.Array.Accelerate.Smart c6a471aeed497009ce791e94dc05d100
  exports: 1e3a20050ce25466608a82a26d24d5f0
  Cond 4628c12b51c834347b1c399b590eac59
  Exp 2fd934232a7ed8f151cd01d9504e7b9f
  Exp dff601899922d9e86e5ab6941dfbac5f
  constant 8196d527ad9044191643ad6b39858685
  mkGt b00aceefee65a90e41897ae94768e02d
  mkGtEq e0efbd760228eaeb83ac7ae601fbe0c5
  mkLt 14ffaf62f1fcb1b7a5036ae42859b6f7
  mkLtEq 48788da0fbcb12aa22e428d00bb49db8
  mkMax 1bfee3a4a7e123de8c4b8bb68f89e630
  mkMin 7fd27b83ec6a735be5b196ee21b5ab67
  tup10 b850a03d534acdb5b65fbf584bf41199
  tup11 d23f0f4f44d99f79ba814447ecfa95b3
  tup12 874b3f539d9b41892b0a875713de2089
  tup13 8e1b532ec427dfedcf7ce9513e711f2b
  tup14 d50d2d2417d1971bf6391dfa74346a23
  tup2 c501dd227fe5d3d61a446c8db6829c7a
  tup3 ebdb68a7e81c25436d21dfab0bff78b9
  tup4 7fd6bd9fbfcf14fc073d36e695729f7d
  tup5 35104c6c1fa6f2c283761df1abf1c382
  tup6 9a35feddddcf210ad3825dc37a7c01d8
  tup7 067fb486bdee20b496241082273f152b
  tup8 6c3160c32ae29132c1405f18f3b229ff
  tup9 0585ecb312193aa3b1964ca23affaa0d
  untup10 a022de08a40a3c1cd1559cce6e2e2925
  untup11 6f92be26603f19815c2724581cd0c085
  untup12 d4b1721b33b6d8adf456af3b57267e31
  untup13 e08123e796ea1be9528c69797eef1d9b
  untup14 376aac23be3b16c15f70eaf2b58edbbd
  untup15 3bc1328dd9dca030056a1a420628da79
  untup2 751a423afd0ba14775d3a5cf0fe0a975
  untup3 a872de1aa1e286d98d4e71dcdc0df473
  untup4 cb63a01d60f4388f017c9803c0e2b1d6
  untup5 c19d9e4d60fba99f2fccca66405b465f
  untup6 8333449942fab95e0eeedec4679cd9db
  untup7 a2c1f2a23de830761b93c418b5b86727
  untup8 0f86d7b9c7d25ede27d69adc758ee7bc
  untup9 23d0fa95217da76f4c89ac24fbae9a2e
import  -/  Data.Array.Accelerate.Type a1c7885f4a79193eaa1f192a9acbec78
  exports: 7aad7ca015788892b1349ebab929b71f
import  -/  base-4.9.1.0:Foreign.C.Types bf568ee9a3ec4aa42333a0da5f4345de
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.Word 2f8cb4e909eeef2f95e1563807dd9268
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.Printf 6701574960cd2af960fec5d940be0c25
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
fixities infix 4 <, infix 4 <=, infix 4 >, infix 4 >=
9295580cebc0dbc28ce564113e087ad7
  $dm< ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(1*U(A,A,1*C1(C1(U))),A,A,1*C1(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (eta :: Data.Array.Accelerate.Smart.Exp a)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.Eq.&&
                   (Data.Array.Accelerate.Classes.Eq./=
                      @ a
                      (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd)
                      eta
                      eta1)
                   (Data.Array.Accelerate.Classes.Ord.<= @ a $dOrd eta eta1)) -}
c6d2c3f2c1a73a9d61e6650440b7f149
  $dm<= ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(A,A,1*C1(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (y :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.Eq.not
                   (Data.Array.Accelerate.Classes.Ord.> @ a $dOrd x y)) -}
1d1d51179e867e28fd05bfcaea033a76
  $dm> ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,1*U(A,A,A,1*C1(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (y :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.Eq.not
                   (Data.Array.Accelerate.Classes.Ord.<= @ a $dOrd x y)) -}
1851dd60a74f2306260a17722300b9d8
  $dm>= ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(1*U(A,1*C1(C1(U)),A),A,A,1*C1(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (eta :: Data.Array.Accelerate.Smart.Exp a)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.Eq.||
                   (Data.Array.Accelerate.Classes.Eq.==
                      @ a
                      (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd)
                      eta
                      eta1)
                   (Data.Array.Accelerate.Classes.Eq.not
                      (Data.Array.Accelerate.Classes.Ord.<= @ a $dOrd eta eta1))) -}
71296e44f0d7403219fb82b4ebc99fcb
  $dmmax ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(1*U(1*U,A,A),A,A,1*C1(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (eta :: Data.Array.Accelerate.Smart.Exp a)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Data.Array.Accelerate.Smart.PreExp
                        Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a)
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   (\ (tpl :: Data.Array.Accelerate.Smart.PreExp
                                Data.Array.Accelerate.Smart.Acc
                                Data.Array.Accelerate.Smart.Exp
                                a) ->
                    tpl)
                     `cast`
                   (<Data.Array.Accelerate.Smart.PreExp
                       Data.Array.Accelerate.Smart.Acc
                       Data.Array.Accelerate.Smart.Exp
                       a>_R
                    ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ a
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ a
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd))
                      (Data.Array.Accelerate.Classes.Ord.<= @ a $dOrd eta eta1)
                      eta1
                      eta)) -}
c7caa467b8bd698748d108fb8467dd04
  $dmmin ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(1*U(1*U,A,A),A,A,1*C1(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (eta :: Data.Array.Accelerate.Smart.Exp a)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Data.Array.Accelerate.Smart.PreExp
                        Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a)
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   (\ (tpl :: Data.Array.Accelerate.Smart.PreExp
                                Data.Array.Accelerate.Smart.Acc
                                Data.Array.Accelerate.Smart.Exp
                                a) ->
                    tpl)
                     `cast`
                   (<Data.Array.Accelerate.Smart.PreExp
                       Data.Array.Accelerate.Smart.Acc
                       Data.Array.Accelerate.Smart.Exp
                       a>_R
                    ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ a
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ a
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd))
                      (Data.Array.Accelerate.Classes.Ord.<= @ a $dOrd eta eta1)
                      eta
                      eta1)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd() :: Data.Array.Accelerate.Classes.Ord.Ord ()
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ()
                  Data.Array.Accelerate.Classes.Eq.$fEq()
                  Data.Array.Accelerate.Classes.Ord.$fOrd()_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrd()_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrd()_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrd()_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrd()_$cmax
                  Data.Array.Accelerate.Classes.Ord.$fOrd()_$cmax -}
e6a5a9d408f5e6685656768e5adfff26
  $fOrd()1 ::
    Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp ()
  {- Arity: 2, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp ())
                   (ds1 :: Data.Array.Accelerate.Smart.Exp ()) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrd()2) -}
a98af2c7d5f576d5cd1765438d07911e
  $fOrd()2 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp ()
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ()
                   Data.Array.Accelerate.Array.Sugar.$fElt()
                   GHC.Tuple.()) -}
53b08ea47c32c50b58726c2b23ef6f7b
  $fOrd()3 ::
    Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp ())
                   (ds1 :: Data.Array.Accelerate.Smart.Exp ()) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrd()4) -}
44fc7320f7e88f50f678eee82f3ec583
  $fOrd()4 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   GHC.Types.True) -}
978964526244821a7d20d2025823416c
  $fOrd()5 ::
    Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp ())
                   (ds1 :: Data.Array.Accelerate.Smart.Exp ()) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrd()6) -}
458530902e67b4928aa7dcea107f1b24
  $fOrd()6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   GHC.Types.False) -}
6d110f270b876f0e3d6303ea306e720b
  $fOrd()_$c> ::
    Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd()5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp ()>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp ()>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
95858d1192b5de3c32a068e38706dff4
  $fOrd()_$c>= ::
    Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd()3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp ()>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp ()>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
3f4f0637f5d31f69caa526803a140f22
  $fOrd()_$cmax ::
    Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp ()
    -> Data.Array.Accelerate.Smart.Exp ()
  {- Arity: 2, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd()1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp ()>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp ()>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <()>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b)
  DFunId
  {- Arity: 2,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b).
                  @ (a, b)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,)_$cp1Ord
                     @ a
                     @ b
                     $dOrd
                     $dOrd1)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,)_$c<
                     @ a
                     @ b
                     $dOrd
                     $dOrd1)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,)_$c>
                     @ a
                     @ b
                     $dOrd
                     $dOrd1)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,)_$c<=
                     @ a
                     @ b
                     $dOrd
                     $dOrd1)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,)_$c>=
                     @ a
                     @ b
                     $dOrd
                     $dOrd1)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,)_$cmin
                     @ a
                     @ b
                     $dOrd
                     $dOrd1)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,)_$cmax
                     @ a
                     @ b
                     $dOrd
                     $dOrd1) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b)
  {- Arity: 4,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Smart.Exp (a, b))
                   (w3 :: Data.Array.Accelerate.Smart.Exp (a, b)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b)
                   (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                      @ a
                      @ b
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ a
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w))
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ b
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)))
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,)2 @ a @ b w w1 w2 w3)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w3
                   w2) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(1*U,A,A,1*C1(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,) @ a @ b $dElt $dElt1
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             $dElt
                             $dElt1
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.<
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.<=
                                      @ b
                                      $dOrd1
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta1)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b)
  {- Arity: 4,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Smart.Exp (a, b))
                   (w3 :: Data.Array.Accelerate.Smart.Exp (a, b)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b)
                   (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                      @ a
                      @ b
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ a
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w))
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ b
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)))
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,)2 @ a @ b w w1 w2 w3)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w2
                   w3) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(1*U,A,A,A,1*C1(C1(U)),A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,) @ a @ b $dElt $dElt1
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             $dElt
                             $dElt1
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.>
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.>=
                                      @ b
                                      $dOrd1
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta1)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,) @ a @ b $dElt $dElt1
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             $dElt
                             $dElt1
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.>
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.>
                                      @ b
                                      $dOrd1
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta1)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,) @ a @ b $dElt $dElt1
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             $dElt
                             $dElt1
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b)
                             $dElt2
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix1 @ () @ a @ b)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <b>_N <a>_N))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.<
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.<
                                      @ b
                                      $dOrd1
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)
                                      (Data.Array.Accelerate.Smart.Prj
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ b
                                         @ (a, b)
                                         $dElt2
                                         $dIsProduct
                                         $dElt1
                                         (Data.Array.Accelerate.Product.$WZeroTupIdx @ b @ ((), a))
                                           `cast`
                                         (Data.Array.Accelerate.Product.TupleIdx
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <b>_N <a>_N))
                                            <b>_N)_R
                                         eta1)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N)))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(1*U,A,A,1*C1(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(1*U,A,A,A,1*C1(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
  {- Arity: 4,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
    -> Data.Array.Accelerate.Smart.Exp (a, b)
  {- Arity: 4,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b)
  {- Arity: 2,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ b
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b) ->
                 Data.Array.Accelerate.Classes.Eq.$fEq(,)
                   @ a
                   @ b
                   (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd)
                   (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b, c)
  DFunId
  {- Arity: 3,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c).
                  @ (a, b, c)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     $dOrd
                     $dOrd1
                     $dOrd2)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)_$c<
                     @ a
                     @ b
                     @ c
                     $dOrd
                     $dOrd1
                     $dOrd2)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)_$c>
                     @ a
                     @ b
                     @ c
                     $dOrd
                     $dOrd1
                     $dOrd2)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)_$c<=
                     @ a
                     @ b
                     @ c
                     $dOrd
                     $dOrd1
                     $dOrd2)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)_$c>=
                     @ a
                     @ b
                     @ c
                     $dOrd
                     $dOrd1
                     $dOrd2)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)_$cmin
                     @ a
                     @ b
                     @ c
                     $dOrd
                     $dOrd1
                     $dOrd2)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)_$cmax
                     @ a
                     @ b
                     @ c
                     $dOrd
                     $dOrd1
                     $dOrd2) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c)
  {- Arity: 5,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ b
                   @ c
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (w4 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmax
                        @ a
                        @ b
                        @ c
                        w
                        w1
                        w2
                        w3
                        w4 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   @ c
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dEq2 :: Data.Array.Accelerate.Classes.Eq.Eq c
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ c $dOrd2
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt c
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ c $dEq2
                       } in
                       let {
                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b, c)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,,)
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b, c)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.<
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,)2
                                      @ b
                                      @ c
                                      $dOrd1
                                      $dOrd2
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N)
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta1)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c)
  {- Arity: 5,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ b
                   @ c
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (w4 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmin
                        @ a
                        @ b
                        @ c
                        w
                        w1
                        w2
                        w3
                        w4 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   @ c
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dEq2 :: Data.Array.Accelerate.Classes.Eq.Eq c
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ c $dOrd2
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt c
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ c $dEq2
                       } in
                       let {
                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b, c)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,,)
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b, c)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.>
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,)4
                                      @ b
                                      @ c
                                      $dOrd1
                                      $dOrd2
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N)
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta1)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   @ c
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dEq2 :: Data.Array.Accelerate.Classes.Eq.Eq c
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ c $dOrd2
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt c
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ c $dEq2
                       } in
                       let {
                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b, c)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,,)
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b, c)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.>
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,)5
                                      @ b
                                      @ c
                                      $dOrd1
                                      $dOrd2
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N)
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta1)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   @ c
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (eta :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (eta1 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (let {
                         $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd
                       } in
                       let {
                         $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                       } in
                       let {
                         $dEq1 :: Data.Array.Accelerate.Classes.Eq.Eq b
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1
                       } in
                       let {
                         $dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt b
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ b $dEq1
                       } in
                       let {
                         $dEq2 :: Data.Array.Accelerate.Classes.Eq.Eq c
                         = Data.Array.Accelerate.Classes.Ord.$p1Ord @ c $dOrd2
                       } in
                       let {
                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt c
                         = Data.Array.Accelerate.Classes.Eq.$p1Eq @ c $dEq2
                       } in
                       let {
                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt (a, b, c)
                         = Data.Array.Accelerate.Array.Sugar.$fElt(,,)
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         $dIsProduct :: Data.Array.Accelerate.Array.Sugar.IsTuple (a, b, c)
                         = Data.Array.Accelerate.Product.$fIsProductcst(,,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ a
                             @ b
                             @ c
                             $dElt
                             $dElt1
                             $dElt2
                       } in
                       let {
                         ds :: Data.Array.Accelerate.Smart.PreExp
                                 Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta1
                       } in
                       let {
                         ds1 :: Data.Array.Accelerate.Smart.PreExp
                                  Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a
                         = Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ a
                             @ (a, b, c)
                             $dElt3
                             $dIsProduct
                             $dElt
                             (Data.Array.Accelerate.Smart.tix2 @ () @ a @ b @ c)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Trans
                                     ((,)
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <b>_N <a>_N))
                                        <c>_N)_N
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                               <c>_N <b>_N <a>_N)))
                                <a>_N)_R
                             eta
                       } in
                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (((), GHC.Types.Bool), GHC.Types.Bool)
                          @ GHC.Types.Bool
                          @ ((), GHC.Types.Bool)
                          @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ ((), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ()
                             @~ <((), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                @ Data.Array.Accelerate.Smart.Exp)
                             (Data.Array.Accelerate.Classes.Ord.<
                                @ a
                                $dOrd
                                ds1 `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                ds `cast` (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Bool, GHC.Types.Bool)
                             Data.Array.Accelerate.Smart.$s$fElt(,)
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.AST.$WPrimLAnd
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                   @ GHC.Types.Bool
                                   @ ((), GHC.Types.Bool)
                                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ()
                                      @~ <((), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      (Data.Array.Accelerate.Classes.Eq.==
                                         @ a
                                         $dEq
                                         ds1
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                                         ds
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)))
                                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,)6
                                      @ b
                                      @ c
                                      $dOrd1
                                      $dOrd2
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N)
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (b, c)
                                         (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Product.$fIsProductcst(,)
                                            @ Data.Array.Accelerate.Array.Sugar.Elt
                                            @ b
                                            @ c
                                            $dElt1
                                            $dElt2)
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), b), c)
                                            @ c
                                            @ ((), b)
                                            @~ <(((), b), c)>_N
                                            $dElt2
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), b)
                                               @ b
                                               @ ()
                                               @~ <((), b)>_N
                                               $dElt1
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               (Data.Array.Accelerate.Smart.Prj
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ b
                                                  @ (a, b, c)
                                                  $dElt3
                                                  $dIsProduct
                                                  $dElt1
                                                  (Data.Array.Accelerate.Smart.tix1
                                                     @ ((), a)
                                                     @ b
                                                     @ c)
                                                    `cast`
                                                  (Data.Array.Accelerate.Product.TupleIdx
                                                     (Trans
                                                          ((,)
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <b>_N <a>_N))
                                                             <c>_N)_N
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                    <c>_N <b>_N <a>_N)))
                                                     <b>_N)_R
                                                  eta1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <b>_N))
                                            (Data.Array.Accelerate.Smart.Prj
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ c
                                               @ (a, b, c)
                                               $dElt3
                                               $dIsProduct
                                               $dElt2
                                               (Data.Array.Accelerate.Product.$WZeroTupIdx
                                                  @ c
                                                  @ (((), a), b))
                                                 `cast`
                                               (Data.Array.Accelerate.Product.TupleIdx
                                                  (Trans
                                                       ((,)
                                                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                    <b>_N <a>_N))
                                                          <c>_N)_N
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,,)[0]
                                                                 <c>_N <b>_N <a>_N)))
                                                  <c>_N)_R
                                               eta1)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <c>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <c>_N <b>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(b, c)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                           GHC.Types.Bool)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
  {- Arity: 5,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
  {- Arity: 5,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c)
  {- Arity: 3,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ b
                   @ c
                   ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c) ->
                 Data.Array.Accelerate.Classes.Eq.$fEq(,,)
                   @ a
                   @ b
                   @ c
                   (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a $dOrd)
                   (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b $dOrd1)
                   (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c $dOrd2)) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b, c, d)
  DFunId
  {- Arity: 4,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d).
                  @ (a, b, c, d)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d)
  {- Arity: 6,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d))
                   (w5 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord
                           @ a
                           @ b
                           @ c
                           @ d
                           w
                           w1
                           w2
                           w3 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      w
                      w1
                      w2
                      w3
                      w4
                      w5)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w5
                   w4) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d)
  {- Arity: 6,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d))
                   (w5 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord
                           @ a
                           @ b
                           @ c
                           @ d
                           w
                           w1
                           w2
                           w3 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      w
                      w1
                      w2
                      w3
                      w4
                      w5)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w4
                   w5) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 6,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
  {- Arity: 6,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c,
                                                                   d)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
  {- Arity: 6,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c,
                                                                   d)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c, d)
  {- Arity: 4,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord
                        @ a
                        @ b
                        @ c
                        @ d
                        w
                        w1
                        w2
                        w3 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b, c, d, e)
  DFunId
  {- Arity: 5,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e).
                  @ (a, b, c, d, e)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e)
  {- Arity: 7,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e))
                   (w6 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord1
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           w
                           w1
                           w2
                           w3
                           w4 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w6
                   w5) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e)
  {- Arity: 7,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e))
                   (w6 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord1
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           w
                           w1
                           w2
                           w3
                           w4 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w5
                   w6) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 7,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
  {- Arity: 7,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d,
                                                                   e)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
  {- Arity: 7,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d,
                                                                   e)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c, d, e)
  {- Arity: 5,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord1
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        w
                        w1
                        w2
                        w3
                        w4 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b, c, d, e, f)
  DFunId
  {- Arity: 6,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f).
                  @ (a, b, c, d, e, f)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f)
  {- Arity: 8,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (8, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f))
                   (w7 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord2
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           w
                           w1
                           w2
                           w3
                           w4
                           w5 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w7
                   w6) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f)
  {- Arity: 8,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (8, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f))
                   (w7 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord2
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           w
                           w1
                           w2
                           w3
                           w4
                           w5 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w6
                   w7) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 8,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
  {- Arity: 8,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e,
                                                                   f)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
  {- Arity: 8,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e,
                                                                   f)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c, d, e, f)
  {- Arity: 6,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord2
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        w
                        w1
                        w2
                        w3
                        w4
                        w5 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b, c, d, e, f, g)
  DFunId
  {- Arity: 7,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g).
                  @ (a, b, c, d, e, f, g)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g)
  {- Arity: 9,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (9, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g))
                   (w8 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord3
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w8
                   w7) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g)
  {- Arity: 9,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (9, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g))
                   (w8 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord3
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w7
                   w8) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 9,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
  {- Arity: 9,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
  {- Arity: 9,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c, d, e, f, g)
  {- Arity: 7,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord3
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b, c, d, e, f, g, h)
  DFunId
  {- Arity: 8,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h).
                  @ (a, b, c, d, e, f, g, h)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h)
  {- Arity: 10,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (10, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h))
                   (w9 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord4
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w9
                   w8) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h)
  {- Arity: 10,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (10, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h))
                   (w9 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord4
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w8
                   w9) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 10,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
  {- Arity: 10,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
  {- Arity: 10,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c, d, e, f, g, h)
  {- Arity: 8,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (8, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord4
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Classes.Ord.Ord (a, b, c, d, e, f, g, h, i)
  DFunId
  {- Arity: 9,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                      ($dOrd8 :: Data.Array.Accelerate.Classes.Ord.Ord i).
                  @ (a, b, c, d, e, f, g, h, i)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i)
  {- Arity: 11,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (11, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i))
                   (w10 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord5
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9
                      w10)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w10
                   w9) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i)
  {- Arity: 11,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (11, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i))
                   (w10 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord5
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9
                      w10)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w9
                   w10) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 11,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
  {- Arity: 11,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
  {- Arity: 11,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c, d, e, f, g, h, i)
  {- Arity: 9,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (9, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord5
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h, i)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Classes.Ord.Ord
      (a, b, c, d, e, f, g, h, i, j)
  DFunId
  {- Arity: 10,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                      ($dOrd8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                      ($dOrd9 :: Data.Array.Accelerate.Classes.Ord.Ord j).
                  @ (a, b, c, d, e, f, g, h, i, j)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j)
  {- Arity: 12,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (12, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j))
                   (w11 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord6
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9
                      w10
                      w11)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w11
                   w10) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j)
  {- Arity: 12,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (12, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j))
                   (w11 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord6
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9
                      w10
                      w11)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w10
                   w11) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 12,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
  {- Arity: 12,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
  {- Arity: 12,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    Data.Array.Accelerate.Classes.Eq.Eq (a, b, c, d, e, f, g, h, i, j)
  {- Arity: 10,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (10, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord6
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h, i, j)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Classes.Ord.Ord
      (a, b, c, d, e, f, g, h, i, j, k)
  DFunId
  {- Arity: 11,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                      ($dOrd8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                      ($dOrd9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                      ($dOrd10 :: Data.Array.Accelerate.Classes.Ord.Ord k).
                  @ (a, b, c, d, e, f, g, h, i, j, k)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
  {- Arity: 13,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (13, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k))
                   (w12 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord7
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9
                      w10
                      w11
                      w12)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w12
                   w11) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
  {- Arity: 13,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (13, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k))
                   (w12 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k)) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k)
                   (case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord7
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 })
                   (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)2
                      @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      w8
                      w9
                      w10
                      w11
                      w12)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w11
                   w12) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 13,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
  {- Arity: 13,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k)
  {- Arity: 13,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    Data.Array.Accelerate.Classes.Eq.Eq
      (a, b, c, d, e, f, g, h, i, j, k)
  {- Arity: 11,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (11, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord7
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h, i, j, k)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Classes.Ord.Ord
      (a, b, c, d, e, f, g, h, i, j, k, l)
  DFunId
  {- Arity: 12,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                      ($dOrd8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                      ($dOrd9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                      ($dOrd10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                      ($dOrd11 :: Data.Array.Accelerate.Classes.Ord.Ord l).
                  @ (a, b, c, d, e, f, g, h, i, j, k, l)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
  {- Arity: 14,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (14, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l))
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmax1
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
  {- Arity: 14,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (14, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l))
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmin1
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 14,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
  {- Arity: 14,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
  {- Arity: 14,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Classes.Eq.Eq
      (a, b, c, d, e, f, g, h, i, j, k, l)
  {- Arity: 12,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (12, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord8
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h, i, j, k, l)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Classes.Ord.Ord
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
  DFunId
  {- Arity: 13,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                      ($dOrd8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                      ($dOrd9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                      ($dOrd10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                      ($dOrd11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                      ($dOrd12 :: Data.Array.Accelerate.Classes.Ord.Ord m).
                  @ (a, b, c, d, e, f, g, h, i, j, k, l, m)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
  {- Arity: 15,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (15, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m))
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmax2
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13
                        w14 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
  {- Arity: 15,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (15, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m))
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmin2
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13
                        w14 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 15,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
  {- Arity: 15,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l, m)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
  {- Arity: 15,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l, m)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Classes.Eq.Eq
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
  {- Arity: 13,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (13, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord9
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Classes.Ord.Ord
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  DFunId
  {- Arity: 14,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      @ n
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                      ($dOrd8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                      ($dOrd9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                      ($dOrd10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                      ($dOrd11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                      ($dOrd12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                      ($dOrd13 :: Data.Array.Accelerate.Classes.Ord.Ord n).
                  @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  {- Arity: 16,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (16, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n))
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmax3
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        @ n
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13
                        w14
                        w15 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  {- Arity: 16,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (16, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n))
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmin3
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        @ n
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13
                        w14
                        w15 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 16,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  {- Arity: 16,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l, m, n)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  {- Arity: 16,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l, m, n)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Classes.Eq.Eq
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  {- Arity: 14,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (14, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord10
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        @ n
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,) ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Classes.Ord.Ord
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  DFunId
  {- Arity: 15,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),C(C1(U)),C(C1(U)),C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      @ n
                      @ o
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a)
                      ($dOrd1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                      ($dOrd2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                      ($dOrd3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                      ($dOrd4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                      ($dOrd5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                      ($dOrd6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                      ($dOrd7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                      ($dOrd8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                      ($dOrd9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                      ($dOrd10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                      ($dOrd11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                      ($dOrd12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                      ($dOrd13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                      ($dOrd14 :: Data.Array.Accelerate.Classes.Ord.Ord o).
                  @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)_$cp1Ord
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13
                     $dOrd14)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)_$c<
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13
                     $dOrd14)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)_$c>
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13
                     $dOrd14)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)_$c<=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13
                     $dOrd14)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)_$c>=
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13
                     $dOrd14)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)_$cmin
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13
                     $dOrd14)
                  (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)_$cmax
                     @ a
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     $dOrd
                     $dOrd1
                     $dOrd2
                     $dOrd3
                     $dOrd4
                     $dOrd5
                     $dOrd6
                     $dOrd7
                     $dOrd8
                     $dOrd9
                     $dOrd10
                     $dOrd11
                     $dOrd12
                     $dOrd13
                     $dOrd14) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  {- Arity: 17,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (17, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Classes.Ord.Ord o)
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o))
                   (w16 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmax4
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        @ n
                        @ o
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13
                        w14
                        w15
                        w16 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  {- Arity: 17,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (17, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Classes.Ord.Ord o)
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o))
                   (w16 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cmin4
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        @ n
                        @ o
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13
                        w14
                        w15
                        w16 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)_$c< ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)6
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N) (o :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord o>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)_$c<= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,1*C1(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,C(C1(U)),A,A,A,A,A)><L,U(U,A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)2
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N) (o :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord o>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)_$c> ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N) (o :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord o>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)_$c>= ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 17,
     Strictness: <L,U(1*U,A,1*C1(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,C(C1(U)),A,A,A,A)><L,U(U,A,A,A,C(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)4
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N) (o :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord o>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)_$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  {- Arity: 17,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N) (o :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord o>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l, m, n, o)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)_$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  {- Arity: 17,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N) (d :: <*>_N) (e :: <*>_N) (f :: <*>_N) (g :: <*>_N) (h :: <*>_N) (i :: <*>_N) (j :: <*>_N) (k :: <*>_N) (l :: <*>_N) (m :: <*>_N) (n :: <*>_N) (o :: <*>_N).
                 <Data.Array.Accelerate.Classes.Ord.Ord a>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord b>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord c>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord d>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord e>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord f>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord g>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord h>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord i>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord j>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord k>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord l>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord m>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord n>_R
                 ->_R <Data.Array.Accelerate.Classes.Ord.Ord o>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp
                         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(a, b, c, d, e, f,
                                                                   g, h, i, j, k, l, m, n, o)>_N) -}
32c955536e40f163bc65c13f16697a02
  $fOrd(,,,,,,,,,,,,,,)_$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Classes.Eq.Eq
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
  {- Arity: 15,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (15, True, False)
                (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Classes.Ord.Ord o) ->
                 case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord11
                        @ a
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        @ n
                        @ o
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7
                        w8
                        w9
                        w10
                        w11
                        w12
                        w13
                        w14 of ww { (#,,#) ww1 ww2 ww3 ->
                 Data.Array.Accelerate.Classes.Eq.C:Eq
                   @ (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
                   ww1
                   ww2
                   ww3 }) -}
32c955536e40f163bc65c13f16697a02
  $fOrdBool :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Types.Bool
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Bool
                  Data.Array.Accelerate.Classes.Eq.$fEqBool
                  Data.Array.Accelerate.Classes.Ord.$fOrdBool_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdBool_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdBool_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdBool_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdBool_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdBool_$cmax -}
90147e1225edf386e89203d614972998
  $fOrdBool1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
f0a5a7a1b4d373f3d3c27696e3adac7f
  $fOrdBool2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
1da6ed1701f34508afb15f2f66a5c64b
  $fOrdBool3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
178e0904a2861a9630bd622f45d718d5
  $fOrdBool4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
905266eef47d6113f25c9fa1ff7d41e0
  $fOrdBool5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
ca754150b35521418b3b0e3be95c9e8c
  $fOrdBool6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdBool_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
e6dfaa1c8895ce567def90a8f329cfc2
  $fOrdBool_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdBool6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
994e383aa65d126aaed7d119e0575113
  $fOrdBool_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdBool4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
13a37ce0e3fbba5616a03344cb24861e
  $fOrdBool_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdBool5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
ece89a4e6c3f5bcdd519e946f89e432c
  $fOrdBool_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdBool3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
67ec70c74fd6842d71a1d5ed9e04e9f8
  $fOrdBool_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdBool1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
089a9d0479c6bdb0bae1ae55f7c2b584
  $fOrdBool_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdBool2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
35fd67a378dc3883d2d86b5227a95e31
  $fOrdBool_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <(GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarBool_$cscalarType) -}
d6d89c7fca32ea3ad1c4962867dbe9ab
  $fOrdBool_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Bool, GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool) -}
21642aeb92c4516fc1ab49e593a0ef97
  $fOrdBool_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <(GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarBool_$cscalarType) -}
d3dcaee8ffececae432582257ec50469
  $fOrdBool_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Bool, GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool) -}
c4ed2faef7ff9d7cf170745d8eb7644b
  $fOrdBool_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <(GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarBool_$cscalarType) -}
4b0b947e4246f97d537fd83b4fd0fb06
  $fOrdBool_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <(GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarBool_$cscalarType) -}
e6dbd45776f45b7afaaccb05726fccd6
  $fOrdBool_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <(GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarBool_$cscalarType) -}
1687d005e3197e5a600a785eb5f8adfd
  $fOrdBool_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @~ <(GHC.Types.Bool, GHC.Types.Bool) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarBool_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCChar ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CChar
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CChar
                  Data.Array.Accelerate.Classes.Eq.$fEqCChar
                  Data.Array.Accelerate.Classes.Ord.$fOrdCChar_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCChar_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCChar_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCChar_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCChar_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCChar_$cmax -}
c2b519b57e0ad8793d4a967578358fb7
  $fOrdCChar1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CChar
                   @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)
                         @ Foreign.C.Types.CChar
                         @ ((), Foreign.C.Types.CChar)
                         @~ <(((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CChar)
                            @ Foreign.C.Types.CChar
                            @ ()
                            @~ <((), Foreign.C.Types.CChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CChar>_N <Foreign.C.Types.CChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CChar,
                                                                 Foreign.C.Types.CChar)>_N)) -}
9c04a5a379ed0e27d9c7861197daafc1
  $fOrdCChar2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CChar
                   @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)
                         @ Foreign.C.Types.CChar
                         @ ((), Foreign.C.Types.CChar)
                         @~ <(((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CChar)
                            @ Foreign.C.Types.CChar
                            @ ()
                            @~ <((), Foreign.C.Types.CChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CChar>_N <Foreign.C.Types.CChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CChar,
                                                                 Foreign.C.Types.CChar)>_N)) -}
9c99ca0160e09091ab779f6508578a74
  $fOrdCChar3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)
                         @ Foreign.C.Types.CChar
                         @ ((), Foreign.C.Types.CChar)
                         @~ <(((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CChar)
                            @ Foreign.C.Types.CChar
                            @ ()
                            @~ <((), Foreign.C.Types.CChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CChar>_N <Foreign.C.Types.CChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CChar,
                                                                 Foreign.C.Types.CChar)>_N)) -}
d145cbeeb8c8b61b98306dd63858443b
  $fOrdCChar4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)
                         @ Foreign.C.Types.CChar
                         @ ((), Foreign.C.Types.CChar)
                         @~ <(((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CChar)
                            @ Foreign.C.Types.CChar
                            @ ()
                            @~ <((), Foreign.C.Types.CChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CChar>_N <Foreign.C.Types.CChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CChar,
                                                                 Foreign.C.Types.CChar)>_N)) -}
20d546679cfb933bf8f2b50ae7b1ad93
  $fOrdCChar5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)
                         @ Foreign.C.Types.CChar
                         @ ((), Foreign.C.Types.CChar)
                         @~ <(((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CChar)
                            @ Foreign.C.Types.CChar
                            @ ()
                            @~ <((), Foreign.C.Types.CChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CChar>_N <Foreign.C.Types.CChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CChar,
                                                                 Foreign.C.Types.CChar)>_N)) -}
9786d78721011301e52959580e59fc82
  $fOrdCChar6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)
                         @ Foreign.C.Types.CChar
                         @ ((), Foreign.C.Types.CChar)
                         @~ <(((), Foreign.C.Types.CChar), Foreign.C.Types.CChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CChar)
                            @ Foreign.C.Types.CChar
                            @ ()
                            @~ <((), Foreign.C.Types.CChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CChar>_N <Foreign.C.Types.CChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CChar,
                                                                 Foreign.C.Types.CChar)>_N)) -}
60aed12b278454fb37663293795c09bf
  $fOrdCChar_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCChar6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
90521007f4162a4fe55e25300daf6e84
  $fOrdCChar_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCChar4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
b4a4746432a5389cb19b37da85f31ed8
  $fOrdCChar_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCChar5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
23967fefccf2316ef9c6457c300bb73b
  $fOrdCChar_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCChar3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
08eb9a63eebf5c277fb718fdbd383244
  $fOrdCChar_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCChar1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CChar>_N) -}
42f79b9444781dbf1217aef23a589faa
  $fOrdCChar_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCChar2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CChar>_N) -}
33fbf0e09f50d85338fbd7d03195a1e4
  $fOrdCChar_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
       -> Foreign.C.Types.CChar)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      -> Foreign.C.Types.CChar)
                   @ Foreign.C.Types.CChar
                   @~ <(Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                       -> Foreign.C.Types.CChar>_N
                   Data.Array.Accelerate.Type.$fIsScalarCChar_$cscalarType) -}
9ee1c46590ce219c0d68a5c620e028f1
  $fOrdCChar_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CChar
                   @ Foreign.C.Types.CChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCChar) -}
73442b8a97d58c16b2adf79a2e7b1f3d
  $fOrdCChar_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
       -> Foreign.C.Types.CChar)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      -> Foreign.C.Types.CChar)
                   @ Foreign.C.Types.CChar
                   @~ <(Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                       -> Foreign.C.Types.CChar>_N
                   Data.Array.Accelerate.Type.$fIsScalarCChar_$cscalarType) -}
fae2d9b20e3de083339715d780484bf5
  $fOrdCChar_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CChar, Foreign.C.Types.CChar)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CChar
                   @ Foreign.C.Types.CChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCChar) -}
9b133803becd53d9b50991505d27777a
  $fOrdCChar_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CChar, Foreign.C.Types.CChar) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CChar
                   @~ <(Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCChar_$cscalarType) -}
3bdeb9028fecaa8906a03c25dba1ca3b
  $fOrdCChar_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CChar, Foreign.C.Types.CChar) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CChar
                   @~ <(Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCChar_$cscalarType) -}
d2569ff5ebf2c3989460211c02bcd44f
  $fOrdCChar_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CChar, Foreign.C.Types.CChar) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CChar
                   @~ <(Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCChar_$cscalarType) -}
433e394d95a81b26f6211dcf11a72ab9
  $fOrdCChar_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CChar, Foreign.C.Types.CChar) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CChar
                   @~ <(Foreign.C.Types.CChar, Foreign.C.Types.CChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCChar_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCDouble ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CDouble
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CDouble
                  Data.Array.Accelerate.Classes.Eq.$fEqCDouble
                  Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_$cmax -}
dbc2c51e131443b62e983fd12343d44e
  $fOrdCDouble1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CDouble
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
5ccada3d8f786dc3f18527fbdb5b5297
  $fOrdCDouble2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CDouble
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
62562d6cc277a51986a60fc61f6a4787
  $fOrdCDouble3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
deaecf2cfbad46728b454b05f3b1a122
  $fOrdCDouble4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
9790b97f462c384e231d3a28c0266782
  $fOrdCDouble5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
e26c72b5b3b736e49d9ff6baca36ed75
  $fOrdCDouble6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
34b2fc36d34516aeef71401f96507791
  $fOrdCDouble_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCDouble6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
f6299aa3973d1dd6b822d7e0cbb197c8
  $fOrdCDouble_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCDouble4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
d0b2ea2de62db6814949f724aba433f2
  $fOrdCDouble_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCDouble5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
0da98e49253de301e89757636cf3747a
  $fOrdCDouble_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCDouble3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
fd6d33cbc8bbab450732e92b55aaba86
  $fOrdCDouble_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCDouble1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N) -}
cc96b1a334a7a2df64f51b836fd4c3bd
  $fOrdCDouble_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCDouble2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N) -}
7aa91ba4e216a11c32bcc2e6fc73cb69
  $fOrdCDouble_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
       -> Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      -> Foreign.C.Types.CDouble)
                   @ Foreign.C.Types.CDouble
                   @~ <(Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                       -> Foreign.C.Types.CDouble>_N
                   Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType) -}
02893970812d9f546be557e2d5037252
  $fOrdCDouble_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CDouble
                   @ Foreign.C.Types.CDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble) -}
d7c66591dd1e942b77a74d54c4b04085
  $fOrdCDouble_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
       -> Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      -> Foreign.C.Types.CDouble)
                   @ Foreign.C.Types.CDouble
                   @~ <(Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                       -> Foreign.C.Types.CDouble>_N
                   Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType) -}
659340db1ed0ece18a05e7f94f12e6df
  $fOrdCDouble_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CDouble
                   @ Foreign.C.Types.CDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble) -}
56fbaa673bebf4d92288ed8e92cc6bdc
  $fOrdCDouble_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CDouble
                   @~ <(Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType) -}
3cce852ef56bb03b677c46c8b79fb803
  $fOrdCDouble_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CDouble
                   @~ <(Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType) -}
d14086198c2c0397b3fe43b9e45ba4e5
  $fOrdCDouble_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CDouble
                   @~ <(Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType) -}
ab7e4c0097c39f3764613070569a47e6
  $fOrdCDouble_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CDouble
                   @~ <(Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCFloat ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CFloat
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CFloat
                  Data.Array.Accelerate.Classes.Eq.$fEqCFloat
                  Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_$cmax -}
e6b7be25bfdd5fe1441f7c44471405cf
  $fOrdCFloat1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CFloat
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
5dfef7139f24cad4616bf8dae090fe21
  $fOrdCFloat2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CFloat
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
c50b5cb23b20351d56c0f74d7a0194d5
  $fOrdCFloat3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
1476e3ec7a373e680470b77b52f592e1
  $fOrdCFloat4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
3e9bf7861629a85dedd5f342da3f3771
  $fOrdCFloat5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
fb1160c4d6e06690ff54901691ab63cf
  $fOrdCFloat6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
8b452357cdaa076061b5d6f6dba76db1
  $fOrdCFloat_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCFloat6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
67404b5c8745c3de692556f6b03784fd
  $fOrdCFloat_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCFloat4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
a0df9a89588703f314ba797de0a486ee
  $fOrdCFloat_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCFloat5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
68266caebcfea3d5f0cb1655c5bc800d
  $fOrdCFloat_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCFloat3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
959d7a177e973741e4c4771f23d9e11c
  $fOrdCFloat_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCFloat1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N) -}
0de97aca559a2b66578ca3f0e0b05f4c
  $fOrdCFloat_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCFloat2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N) -}
2335ab1a61e860a5f187f4670db8f6c8
  $fOrdCFloat_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
       -> Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      -> Foreign.C.Types.CFloat)
                   @ Foreign.C.Types.CFloat
                   @~ <(Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                       -> Foreign.C.Types.CFloat>_N
                   Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType) -}
cb907d5b55240bd531c69f17c728c0e2
  $fOrdCFloat_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CFloat
                   @ Foreign.C.Types.CFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat) -}
8594ba4802cbd7e9e338de10cce4eb85
  $fOrdCFloat_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
       -> Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      -> Foreign.C.Types.CFloat)
                   @ Foreign.C.Types.CFloat
                   @~ <(Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                       -> Foreign.C.Types.CFloat>_N
                   Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType) -}
c551c6b15cee17d264ebd04991892d8b
  $fOrdCFloat_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CFloat
                   @ Foreign.C.Types.CFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat) -}
5a3c7e196248a88bc381ba8d046b91e1
  $fOrdCFloat_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CFloat
                   @~ <(Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType) -}
265c4e4dcf44d7a87c05d1ea9dad12fd
  $fOrdCFloat_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CFloat
                   @~ <(Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType) -}
ddd22fba5dbaa9b72e2e4ebf0d9dd08b
  $fOrdCFloat_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CFloat
                   @~ <(Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType) -}
bfa6007ee0527a1bb61668c7b4129e39
  $fOrdCFloat_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CFloat
                   @~ <(Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCInt ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CInt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CInt
                  Data.Array.Accelerate.Classes.Eq.$fEqCInt
                  Data.Array.Accelerate.Classes.Ord.$fOrdCInt_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCInt_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCInt_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCInt_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCInt_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCInt_$cmax -}
5545600b1b53746b415a84b091255be9
  $fOrdCInt1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
74a8e652375bc395553a43bb7e8dbd4c
  $fOrdCInt2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
030b330effbc48004a138bb1c12d5b31
  $fOrdCInt3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
ef9370eed71864980487a061acfd7966
  $fOrdCInt4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
fc0c0dfc8d5e3ea72cdfba4eff3ee8f6
  $fOrdCInt5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
0e060004bd795f285cccedbc6c94c837
  $fOrdCInt6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
2ff820f096ed4d4485df3235f1eb3548
  $fOrdCInt_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCInt6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
65d86070edaf2cd753373fb6f1d778d0
  $fOrdCInt_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCInt4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
cab0a8be14d6241a4f99b8e236c6681c
  $fOrdCInt_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCInt5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2c7b74b71df4df68ded0002a16f8c78c
  $fOrdCInt_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
59d42817401eb24a1c129d47bbd9bcb0
  $fOrdCInt_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
056c7ffe283a2ccaa1dce54afc072034
  $fOrdCInt_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
3488f6d68ca8b9a97ee492f7828d9c9d
  $fOrdCInt_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
       -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
d0e2d684714490cf575d5d3c55211042
  $fOrdCInt_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CInt
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt) -}
3002a3b91465b4379a0260e2863456fa
  $fOrdCInt_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
       -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
2e7b9b684bbe2c3077401aa82ffcd42f
  $fOrdCInt_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CInt
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt) -}
915aa652c643ee415f5f1984b5a35e08
  $fOrdCInt_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
b3dee7d6801147034d24f40ce93ae245
  $fOrdCInt_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
7746545539b5f9331ca64bfa622674d3
  $fOrdCInt_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
674c5b92efbf6fa46e114d0ce23f9468
  $fOrdCInt_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCLLong ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CLLong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CLLong
                  Data.Array.Accelerate.Classes.Eq.$fEqCLLong
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_$cmax -}
5f3c9a667371ce572b949439bff8f783
  $fOrdCLLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
b7497bb2a9ffbe823c9b6eff12d010b6
  $fOrdCLLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
5a0edc84ff34fccca3e345ed762748d0
  $fOrdCLLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
0ab6ab017854a6f92254a07195a2da4e
  $fOrdCLLong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
09710cdaac67d437b352184bd0d0fbf7
  $fOrdCLLong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
6019d98c1fa94f64b22b69f01d6dd4b3
  $fOrdCLLong6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
32eccab0e460e5fc27cf5cacc795dbc9
  $fOrdCLLong_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLLong6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
f4d0e497a41b6032a53fe4e72d4a3d71
  $fOrdCLLong_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLLong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
5ca24a480d3101673a4faef76f10ce76
  $fOrdCLLong_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLLong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
bee97aa43f02ff83720f7371fe1ecb36
  $fOrdCLLong_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1613814ef8f8cf8b897c6fa39923606c
  $fOrdCLLong_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
38213d3652526f350ae23996d01ef07b
  $fOrdCLLong_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
8b591e39b77c714f30de48468804bb79
  $fOrdCLLong_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
2290e1adff9aece252559657c449c801
  $fOrdCLLong_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CLLong
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong) -}
e8291317b04a04dc948e4b75f4d998eb
  $fOrdCLLong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
7b05d22b04d1161a9c8487f2646b251d
  $fOrdCLLong_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CLLong
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong) -}
ee25f7f868fb80a630d2301442e05596
  $fOrdCLLong_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
417f8b7df589168f38b7b29d08490cf1
  $fOrdCLLong_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
a2ecb7471be859b77a9d424c6f479aca
  $fOrdCLLong_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
0951c8a9b2a1d5273e51e4ec530239e1
  $fOrdCLLong_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCLong ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CLong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CLong
                  Data.Array.Accelerate.Classes.Eq.$fEqCLong
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLong_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLong_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLong_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLong_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLong_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCLong_$cmax -}
22a5943f27b1d75462edcc943421c406
  $fOrdCLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
3b74e1284a214d46dff219d254de3e5c
  $fOrdCLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
86c9c63871efc708a12ca6473c0d7163
  $fOrdCLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
b733fc475c1798979db555a84d9bcfda
  $fOrdCLong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
ff17eaee008f803a3eccea9694d5450c
  $fOrdCLong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
ad3f63f9d4aac8ef47ba6dbb1cb9c889
  $fOrdCLong6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
3b16810730b335d678a0af76189b4895
  $fOrdCLong_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLong6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
281b975ba5304d39a7911a538f6b2174
  $fOrdCLong_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
ebf9f0d41444dbc166724f228c918e46
  $fOrdCLong_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
f636a5ba55f56e4035be29aa7682f7fd
  $fOrdCLong_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
660f3b7407ea6a18e198df2e595036fe
  $fOrdCLong_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
8ffdeebc053013210961d2dc273b2494
  $fOrdCLong_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
1a539510c5996002743095db27688ac2
  $fOrdCLong_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
       -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
ac4153c801e0375ef5c7df2ef45cb070
  $fOrdCLong_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CLong
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong) -}
3df3830f984498027aa30324c7e387ca
  $fOrdCLong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
       -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
aae8d5ad2caeb499d1f79cb274e41840
  $fOrdCLong_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CLong
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong) -}
6d828eec23efc4ea6a8f19788560bf23
  $fOrdCLong_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
c4629c487c1114331e2a87faa161b8b4
  $fOrdCLong_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
3bef4658030d1199a24600dbf75c746a
  $fOrdCLong_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
3432d62b6a5fac9d7380b0755199b3dd
  $fOrdCLong_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCSChar ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CSChar
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CSChar
                  Data.Array.Accelerate.Classes.Eq.$fEqCSChar
                  Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_$cmax -}
446c784f0e2689ec6b166a284605a5da
  $fOrdCSChar1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CSChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CSChar
                   @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)
                         @ Foreign.C.Types.CSChar
                         @ ((), Foreign.C.Types.CSChar)
                         @~ <(((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CSChar)
                            @ Foreign.C.Types.CSChar
                            @ ()
                            @~ <((), Foreign.C.Types.CSChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CSChar>_N <Foreign.C.Types.CSChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CSChar,
                                                                 Foreign.C.Types.CSChar)>_N)) -}
1dfcec117577b1a6e32f0d084461e9e2
  $fOrdCSChar2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CSChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CSChar
                   @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)
                         @ Foreign.C.Types.CSChar
                         @ ((), Foreign.C.Types.CSChar)
                         @~ <(((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CSChar)
                            @ Foreign.C.Types.CSChar
                            @ ()
                            @~ <((), Foreign.C.Types.CSChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CSChar>_N <Foreign.C.Types.CSChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CSChar,
                                                                 Foreign.C.Types.CSChar)>_N)) -}
93a859ebad76ae82f1c4afc6bd10117b
  $fOrdCSChar3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)
                         @ Foreign.C.Types.CSChar
                         @ ((), Foreign.C.Types.CSChar)
                         @~ <(((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CSChar)
                            @ Foreign.C.Types.CSChar
                            @ ()
                            @~ <((), Foreign.C.Types.CSChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CSChar>_N <Foreign.C.Types.CSChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CSChar,
                                                                 Foreign.C.Types.CSChar)>_N)) -}
14643300b51ac7810600d8a47dc5dad6
  $fOrdCSChar4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)
                         @ Foreign.C.Types.CSChar
                         @ ((), Foreign.C.Types.CSChar)
                         @~ <(((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CSChar)
                            @ Foreign.C.Types.CSChar
                            @ ()
                            @~ <((), Foreign.C.Types.CSChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CSChar>_N <Foreign.C.Types.CSChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CSChar,
                                                                 Foreign.C.Types.CSChar)>_N)) -}
3c48f2affd550471e454d15fdcca4e67
  $fOrdCSChar5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)
                         @ Foreign.C.Types.CSChar
                         @ ((), Foreign.C.Types.CSChar)
                         @~ <(((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CSChar)
                            @ Foreign.C.Types.CSChar
                            @ ()
                            @~ <((), Foreign.C.Types.CSChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CSChar>_N <Foreign.C.Types.CSChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CSChar,
                                                                 Foreign.C.Types.CSChar)>_N)) -}
fa30ef81b8661605606f40960388e4ad
  $fOrdCSChar6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCSChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)
                         @ Foreign.C.Types.CSChar
                         @ ((), Foreign.C.Types.CSChar)
                         @~ <(((), Foreign.C.Types.CSChar), Foreign.C.Types.CSChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CSChar)
                            @ Foreign.C.Types.CSChar
                            @ ()
                            @~ <((), Foreign.C.Types.CSChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CSChar>_N <Foreign.C.Types.CSChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CSChar,
                                                                 Foreign.C.Types.CSChar)>_N)) -}
6f8b43ac2e5ec6c4ce8f62798f39fc70
  $fOrdCSChar_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCSChar6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
6c4437ac869772c59930dff0bb2396c7
  $fOrdCSChar_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCSChar4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
6eee911222f042df737d3d353c547f8a
  $fOrdCSChar_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCSChar5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
be735981958fc8bff1955b6278d6e15e
  $fOrdCSChar_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCSChar3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2f3976ad0ef20bb57dcbec3b6f555291
  $fOrdCSChar_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCSChar1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CSChar>_N) -}
8dbc5f2afeea66ec7502269e1dd71d02
  $fOrdCSChar_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCSChar2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CSChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CSChar>_N) -}
f2944c03687c47b596173130ab0bb029
  $fOrdCSChar_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
       -> Foreign.C.Types.CSChar)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      -> Foreign.C.Types.CSChar)
                   @ Foreign.C.Types.CSChar
                   @~ <(Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                       -> Foreign.C.Types.CSChar>_N
                   Data.Array.Accelerate.Type.$fIsScalarCSChar_$cscalarType) -}
d8999ce4bf8b73a4f1e3c14e6da33016
  $fOrdCSChar_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CSChar
                   @ Foreign.C.Types.CSChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCSChar) -}
d145ca360ef25313de453c3838adc202
  $fOrdCSChar_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
       -> Foreign.C.Types.CSChar)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      -> Foreign.C.Types.CSChar)
                   @ Foreign.C.Types.CSChar
                   @~ <(Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                       -> Foreign.C.Types.CSChar>_N
                   Data.Array.Accelerate.Type.$fIsScalarCSChar_$cscalarType) -}
6ef37653b0edd43778abe0c371a6ea1d
  $fOrdCSChar_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CSChar
                   @ Foreign.C.Types.CSChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCSChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCSChar) -}
142efb4c627ef540490a1a3b709340c7
  $fOrdCSChar_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CSChar
                   @~ <(Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCSChar_$cscalarType) -}
06532c6611e287afc77744cdff487054
  $fOrdCSChar_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CSChar
                   @~ <(Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCSChar_$cscalarType) -}
f08769726225ebd3d7b74639f30d5bd3
  $fOrdCSChar_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CSChar
                   @~ <(Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCSChar_$cscalarType) -}
6dba297e9efbb8649511617e250f7918
  $fOrdCSChar_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CSChar
                   @~ <(Foreign.C.Types.CSChar, Foreign.C.Types.CSChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCSChar_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCShort ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CShort
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CShort
                  Data.Array.Accelerate.Classes.Eq.$fEqCShort
                  Data.Array.Accelerate.Classes.Ord.$fOrdCShort_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCShort_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCShort_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCShort_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCShort_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCShort_$cmax -}
be1140a9d2ec4480d34e682ebe0ac2d3
  $fOrdCShort1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
9796dc3e1cc64ef80603f8b421c846ab
  $fOrdCShort2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
5165410f530e4852cf7addcad526f4fb
  $fOrdCShort3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
895bd4387af6ed8a70b6690d7fd30895
  $fOrdCShort4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
310c7b5dd470057867e8948f9982e790
  $fOrdCShort5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
eee25d6924fb256b3125fa6d82111b5d
  $fOrdCShort6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
b686ab02a65a721ab6403fa2a4d82886
  $fOrdCShort_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCShort6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
669d2add8749f7f96132e74711a8b3b8
  $fOrdCShort_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCShort4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
8cfcdbf5e77942292d92e731b4cb12ca
  $fOrdCShort_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCShort5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
7f023349f3589d118d2a86ba9b5f816b
  $fOrdCShort_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCShort3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
79ef1b9c0507b581eb167b0b8c5c6c25
  $fOrdCShort_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCShort1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
632659d06ba7ff0e0d9bc9915a8b83e8
  $fOrdCShort_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCShort2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
dde3487760ac8c0ac08c60f16a1150eb
  $fOrdCShort_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
44e4d4c4dd80c787601ba9ff1fa7446b
  $fOrdCShort_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CShort
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort) -}
7654b84adac4a7f3abf952ae8e57638f
  $fOrdCShort_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
e5a44b18c90a7a7b4dda148c6fd6865d
  $fOrdCShort_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CShort
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort) -}
38f8052766f7736d5f576701e3f56085
  $fOrdCShort_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
e23b8e5aad926413b05a699b139b76ba
  $fOrdCShort_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
28959933e43da580c763aa0d3924767d
  $fOrdCShort_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
4d81bdc16dfcd455a4afff21acf5250b
  $fOrdCShort_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCUChar ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CUChar
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CUChar
                  Data.Array.Accelerate.Classes.Eq.$fEqCUChar
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_$cmax -}
3ce6873b70e277d39494a3282398b139
  $fOrdCUChar1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUChar
                   @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)
                         @ Foreign.C.Types.CUChar
                         @ ((), Foreign.C.Types.CUChar)
                         @~ <(((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUChar)
                            @ Foreign.C.Types.CUChar
                            @ ()
                            @~ <((), Foreign.C.Types.CUChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUChar>_N <Foreign.C.Types.CUChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUChar,
                                                                 Foreign.C.Types.CUChar)>_N)) -}
5bbef97c942a4baf50852d479c26ee8e
  $fOrdCUChar2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUChar
                   @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)
                         @ Foreign.C.Types.CUChar
                         @ ((), Foreign.C.Types.CUChar)
                         @~ <(((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUChar)
                            @ Foreign.C.Types.CUChar
                            @ ()
                            @~ <((), Foreign.C.Types.CUChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUChar>_N <Foreign.C.Types.CUChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUChar,
                                                                 Foreign.C.Types.CUChar)>_N)) -}
e3caae0945b00ee56f6b2d9391883359
  $fOrdCUChar3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)
                         @ Foreign.C.Types.CUChar
                         @ ((), Foreign.C.Types.CUChar)
                         @~ <(((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUChar)
                            @ Foreign.C.Types.CUChar
                            @ ()
                            @~ <((), Foreign.C.Types.CUChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUChar>_N <Foreign.C.Types.CUChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUChar,
                                                                 Foreign.C.Types.CUChar)>_N)) -}
9d5149f1edf02cbc22a1e51339900bc7
  $fOrdCUChar4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)
                         @ Foreign.C.Types.CUChar
                         @ ((), Foreign.C.Types.CUChar)
                         @~ <(((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUChar)
                            @ Foreign.C.Types.CUChar
                            @ ()
                            @~ <((), Foreign.C.Types.CUChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUChar>_N <Foreign.C.Types.CUChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUChar,
                                                                 Foreign.C.Types.CUChar)>_N)) -}
b8c46c92f8422254a94bc2c76e09b35a
  $fOrdCUChar5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)
                         @ Foreign.C.Types.CUChar
                         @ ((), Foreign.C.Types.CUChar)
                         @~ <(((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUChar)
                            @ Foreign.C.Types.CUChar
                            @ ()
                            @~ <((), Foreign.C.Types.CUChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUChar>_N <Foreign.C.Types.CUChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUChar,
                                                                 Foreign.C.Types.CUChar)>_N)) -}
dc6756d6125cd843ae32e2ff5eebe996
  $fOrdCUChar6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)
                         @ Foreign.C.Types.CUChar
                         @ ((), Foreign.C.Types.CUChar)
                         @~ <(((), Foreign.C.Types.CUChar), Foreign.C.Types.CUChar)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUChar)
                            @ Foreign.C.Types.CUChar
                            @ ()
                            @~ <((), Foreign.C.Types.CUChar)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUChar>_N <Foreign.C.Types.CUChar>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUChar,
                                                                 Foreign.C.Types.CUChar)>_N)) -}
0d76333fcb713e834f1827da2eff7e0a
  $fOrdCUChar_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUChar6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
33a79107ed6524e587382d5032d03585
  $fOrdCUChar_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUChar4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
fef1591c810f0e1322f7e972224c9f73
  $fOrdCUChar_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUChar5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
d067f50d8df111b8f9cbf791b1dec0ac
  $fOrdCUChar_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUChar3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
fd9bf70537dc063d26ccb6aba8adee16
  $fOrdCUChar_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUChar1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUChar>_N) -}
2154d0d2a955cec71d05393b2aa2ef1b
  $fOrdCUChar_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUChar2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUChar>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUChar>_N) -}
1a871835463511a5c73b14417b8e3e9c
  $fOrdCUChar_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
       -> Foreign.C.Types.CUChar)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      -> Foreign.C.Types.CUChar)
                   @ Foreign.C.Types.CUChar
                   @~ <(Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                       -> Foreign.C.Types.CUChar>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUChar_$cscalarType) -}
23320209d12a406ffdd7be398d0ad18f
  $fOrdCUChar_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CUChar
                   @ Foreign.C.Types.CUChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCUChar) -}
0ae905cfbebaa4ac4c19738b89ee0b53
  $fOrdCUChar_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
       -> Foreign.C.Types.CUChar)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      -> Foreign.C.Types.CUChar)
                   @ Foreign.C.Types.CUChar
                   @~ <(Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                       -> Foreign.C.Types.CUChar>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUChar_$cscalarType) -}
07cc621039c40291593dc695157296b6
  $fOrdCUChar_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CUChar
                   @ Foreign.C.Types.CUChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCUChar
                   Data.Array.Accelerate.Array.Sugar.$fEltCUChar) -}
c12699488fe977e812fd07fd2926002c
  $fOrdCUChar_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUChar
                   @~ <(Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUChar_$cscalarType) -}
6f9e9e7a9355765be4b698ba145ac522
  $fOrdCUChar_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUChar
                   @~ <(Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUChar_$cscalarType) -}
6ec0ecc6a6a7f9c90dbe42136f4c0cb1
  $fOrdCUChar_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUChar
                   @~ <(Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUChar_$cscalarType) -}
207a4d88f5c93e57a9d90b4f8f6d5066
  $fOrdCUChar_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUChar
                   @~ <(Foreign.C.Types.CUChar, Foreign.C.Types.CUChar)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUChar_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCUInt ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CUInt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CUInt
                  Data.Array.Accelerate.Classes.Eq.$fEqCUInt
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_$cmax -}
bcbf8ebae78973b057abf7190c31e95c
  $fOrdCUInt1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
906ade2728576572a85f1ef51fd9f558
  $fOrdCUInt2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
9c3d605d33572a9243bf5ae0a91b7401
  $fOrdCUInt3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
1187728c5b00a7becdd3b7cd998e4b11
  $fOrdCUInt4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
169b87951bbfcac1ddcbc8aa1447ae86
  $fOrdCUInt5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
be67eab2c3aaaa9d3051a1bdbdc821f5
  $fOrdCUInt6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
0194b4c340cdc4bfb89fc13975a98d1b
  $fOrdCUInt_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUInt6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
e2332f164fa4c3738a5a652eb3a28c32
  $fOrdCUInt_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUInt4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
dbcf793b3752c451e3bcbf68a740ae5d
  $fOrdCUInt_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUInt5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
a49f1949eff0f7559d891667b08ea0f5
  $fOrdCUInt_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
e7fa736f79969830e962933823992b53
  $fOrdCUInt_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
86a0b98c72001190e57de7d5f7ba2d8f
  $fOrdCUInt_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
07f4daad3412ba74e6a90007c8d7bfdb
  $fOrdCUInt_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
       -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
ba3ecf106bf42bcc5b1cc2dfef63210d
  $fOrdCUInt_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt) -}
d0e0915afc82d0c8c7ee36388d8ba020
  $fOrdCUInt_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
       -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
4250396cc8a8e3c017940e2d272e42a5
  $fOrdCUInt_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt) -}
0d5dae89ea99bb8263d320c410cbb929
  $fOrdCUInt_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
b779ec1541a8cc6938927f09c3fea730
  $fOrdCUInt_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
e577ffcb243135d36fc84e84dd3975e6
  $fOrdCUInt_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
f3a6398a609ee08105cf8f9f95efdd7b
  $fOrdCUInt_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCULLong ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CULLong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CULLong
                  Data.Array.Accelerate.Classes.Eq.$fEqCULLong
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_$cmax -}
de4d2ad4528ef713e0ee247f4c6f5523
  $fOrdCULLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
4c78a671bee4ec10ff03a34adf1ac98d
  $fOrdCULLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
469545cadeb73f0b742bc95525f71421
  $fOrdCULLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
978905e0ab98bde79195215df618a3d8
  $fOrdCULLong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
2a162954645f0789e8aa0aa06a1583a2
  $fOrdCULLong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
d8c6137871932a41294affc297856d67
  $fOrdCULLong6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
87e7f5ddc33af748e781f450d72c7d13
  $fOrdCULLong_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULLong6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
0118bccd24b0d61602b0c4bde02fa41d
  $fOrdCULLong_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULLong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
7879ce4f398a4a8d396f54c490cd0bcd
  $fOrdCULLong_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULLong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
f7d65c84f22777a1beba285168bead6f
  $fOrdCULLong_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
29ae6a2e78a7e67821c58284cf3880c4
  $fOrdCULLong_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
481a843a078fab12c9532379bbe413e3
  $fOrdCULLong_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
c21377de9afef637c8ab5fa0b17a5773
  $fOrdCULLong_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
7bbc96859d576b4302da560f4bfc9970
  $fOrdCULLong_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong) -}
c0fe8293df5b4900e1a9185455b214c1
  $fOrdCULLong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
0c89fbdc6280ca8d02f7242c85865619
  $fOrdCULLong_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong) -}
b7212b9a6f3e801e60b4487fe2f144e2
  $fOrdCULLong_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
4b5cb184814045ae5f7a6c2bd850a7c9
  $fOrdCULLong_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
178a0287783eddd73e295bf032ae59f9
  $fOrdCULLong_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
8917f0ce9d8d5355fc051ccd6e6e07fc
  $fOrdCULLong_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCULong ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CULong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CULong
                  Data.Array.Accelerate.Classes.Eq.$fEqCULong
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULong_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULong_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULong_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULong_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULong_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCULong_$cmax -}
9b643f1ad5f9f3bbf219f30fd62d67b3
  $fOrdCULong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
ddb288cd23470f96fc50936c0e58528d
  $fOrdCULong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
999b9ff282fb71b2df4c0e8f85779c63
  $fOrdCULong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
3d207e30181f70a9221d6320c8974d61
  $fOrdCULong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
31be62d375d6688307b16b7e552ec9c0
  $fOrdCULong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
afcbd4ff1116d276e08c867ca9b60821
  $fOrdCULong6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCULong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
ea791934cf2fa95e3b49d8d4c12e6230
  $fOrdCULong_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULong6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
a26db78036109d2ab1e0f359f6559386
  $fOrdCULong_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
973e083b28615ceb28f9b85f3d7f7517
  $fOrdCULong_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
4e6f13efe6de76b162c8a2d1d9ca95a4
  $fOrdCULong_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
f112c31177585b2da046497d3c82298b
  $fOrdCULong_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
ba9fad2ea4cf9220362bb3fb85f9a190
  $fOrdCULong_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCULong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
e35da29742df9f7c798928cf494eaebf
  $fOrdCULong_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
7dda9bfabc3f8fd03d1e62868cf7de4f
  $fOrdCULong_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong) -}
3c13904e2c259b25fd19d08565821e82
  $fOrdCULong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
ad4ace545f27f2d1fc3504d0f272fadd
  $fOrdCULong_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong) -}
66152f307b63c7c34d0c2c836a22f145
  $fOrdCULong_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
301f7aa80ab87c5253ccb85adaacb6d4
  $fOrdCULong_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
4dd51cde1c817d77df3ca42d682d8e65
  $fOrdCULong_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
cc6d28409f16ed05b0e73b2a2d46bcd3
  $fOrdCULong_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdCUShort ::
    Data.Array.Accelerate.Classes.Ord.Ord Foreign.C.Types.CUShort
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CUShort
                  Data.Array.Accelerate.Classes.Eq.$fEqCUShort
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_$cmax -}
a64c26fadfe7afa19fd3cbe92bcbc02d
  $fOrdCUShort1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
98a9ec78b3db1d11b4844bb33329ddae
  $fOrdCUShort2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
51bd720e78c28ba0f855f6c259fcdd91
  $fOrdCUShort3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
ca561b6c7c7a9a7b050e326fddf6aaf3
  $fOrdCUShort4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
c06919a89c7a205481e61e46ad56a0b5
  $fOrdCUShort5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
5de7a3f07118a20d859bc580c6614f20
  $fOrdCUShort6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdCUShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
b1db86e6edd10548058553dbed65859a
  $fOrdCUShort_$c< ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUShort6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2d3895485c30492afe91736bb578d67c
  $fOrdCUShort_$c<= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUShort4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
70d96ed5749c22c2564f74db223e4681
  $fOrdCUShort_$c> ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUShort5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
cf49523f9a19ca7e8d08967a4abbf3bc
  $fOrdCUShort_$c>= ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUShort3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
b81e3007539d72efb4c4beedb928d915
  $fOrdCUShort_$cmax ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUShort1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
842d2913cc5e41cc9e44b37ee60fda01
  $fOrdCUShort_$cmin ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdCUShort2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
1f13f7a44a958c0aec5251903538f124
  $fOrdCUShort_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
2773795af6c60c43bcdf7a0953581580
  $fOrdCUShort_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort) -}
f931eef13ad950de669ffc5b02285c97
  $fOrdCUShort_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
67dcb21da613e2ea6a4c86b910086ab5
  $fOrdCUShort_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort) -}
f80042574ca9d5a7968ccd2109b9fc9a
  $fOrdCUShort_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
1e1dd4ee30cae2cf4977719c5cf37e68
  $fOrdCUShort_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
2d686f6d8c2a030e4a2742203b597875
  $fOrdCUShort_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
70f5f3a0d87952d6887749b8e2259ea4
  $fOrdCUShort_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdChar :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Types.Char
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Char
                  Data.Array.Accelerate.Classes.Eq.$fEqChar
                  Data.Array.Accelerate.Classes.Ord.$fOrdChar_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdChar_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdChar_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdChar_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdChar_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdChar_$cmax -}
debb25b6ad2bfa1091c100042c134c8c
  $fOrdChar1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Char
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Char
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Char, GHC.Types.Char)
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Char), GHC.Types.Char)
                         @ GHC.Types.Char
                         @ ((), GHC.Types.Char)
                         @~ <(((), GHC.Types.Char), GHC.Types.Char)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Char)
                            @ GHC.Types.Char
                            @ ()
                            @~ <((), GHC.Types.Char)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Char>_N <GHC.Types.Char>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Char,
                                                                 GHC.Types.Char)>_N)) -}
896c3033b688d20eaf7861902e0fa1e0
  $fOrdChar2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Char
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Char
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltChar
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Char, GHC.Types.Char)
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Char), GHC.Types.Char)
                         @ GHC.Types.Char
                         @ ((), GHC.Types.Char)
                         @~ <(((), GHC.Types.Char), GHC.Types.Char)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Char)
                            @ GHC.Types.Char
                            @ ()
                            @~ <((), GHC.Types.Char)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Char>_N <GHC.Types.Char>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Char,
                                                                 GHC.Types.Char)>_N)) -}
6de75a81c1c473b591ac1882c5518e63
  $fOrdChar3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Char, GHC.Types.Char)
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Char), GHC.Types.Char)
                         @ GHC.Types.Char
                         @ ((), GHC.Types.Char)
                         @~ <(((), GHC.Types.Char), GHC.Types.Char)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Char)
                            @ GHC.Types.Char
                            @ ()
                            @~ <((), GHC.Types.Char)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Char>_N <GHC.Types.Char>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Char,
                                                                 GHC.Types.Char)>_N)) -}
1f865e1d2737d55453073cdafcfa86ca
  $fOrdChar4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Char, GHC.Types.Char)
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Char), GHC.Types.Char)
                         @ GHC.Types.Char
                         @ ((), GHC.Types.Char)
                         @~ <(((), GHC.Types.Char), GHC.Types.Char)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Char)
                            @ GHC.Types.Char
                            @ ()
                            @~ <((), GHC.Types.Char)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Char>_N <GHC.Types.Char>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Char,
                                                                 GHC.Types.Char)>_N)) -}
23df42e062736b7d9ba958c115ec6bfb
  $fOrdChar5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Char, GHC.Types.Char)
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Char), GHC.Types.Char)
                         @ GHC.Types.Char
                         @ ((), GHC.Types.Char)
                         @~ <(((), GHC.Types.Char), GHC.Types.Char)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Char)
                            @ GHC.Types.Char
                            @ ()
                            @~ <((), GHC.Types.Char)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Char>_N <GHC.Types.Char>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Char,
                                                                 GHC.Types.Char)>_N)) -}
2713f81268930ef37357c0ea7ea2773b
  $fOrdChar6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Char) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Char, GHC.Types.Char)
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Char, GHC.Types.Char)
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdChar_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Char), GHC.Types.Char)
                         @ GHC.Types.Char
                         @ ((), GHC.Types.Char)
                         @~ <(((), GHC.Types.Char), GHC.Types.Char)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltChar
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Char)
                            @ GHC.Types.Char
                            @ ()
                            @~ <((), GHC.Types.Char)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltChar
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Char>_N <GHC.Types.Char>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Char,
                                                                 GHC.Types.Char)>_N)) -}
1a9c1d3e8c50eff72803e51752d01033
  $fOrdChar_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdChar6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
bb806cae96c3987e1ad400ae740a2181
  $fOrdChar_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdChar4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
679e2c111dab6715f85a27546ad3f6d8
  $fOrdChar_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdChar5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
56062114d79b78b6c7d3051eb75d1020
  $fOrdChar_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdChar3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
bc95ad965044cfe0a14f4a21cc8ff34d
  $fOrdChar_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdChar1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Char>_N) -}
03d200f5f3381e8edad0abe34ad985b3
  $fOrdChar_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Char
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdChar2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Char>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Char>_N) -}
a0db8b2e181831fbd0a957f2c6939c50
  $fOrdChar_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Char)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Char>_N
                   Data.Array.Accelerate.Type.$fIsScalarChar_$cscalarType) -}
f6780dc7a4f2479407e8a0a0888ed464
  $fOrdChar_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Char, GHC.Types.Char)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   Data.Array.Accelerate.Array.Sugar.$fEltChar
                   Data.Array.Accelerate.Array.Sugar.$fEltChar) -}
66ef58f055cc4f50d3d8fe4cc41e1e37
  $fOrdChar_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Char)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Char)
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Char>_N
                   Data.Array.Accelerate.Type.$fIsScalarChar_$cscalarType) -}
a1af3a345904c4598b1af258ee05007b
  $fOrdChar_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Char, GHC.Types.Char)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   Data.Array.Accelerate.Array.Sugar.$fEltChar
                   Data.Array.Accelerate.Array.Sugar.$fEltChar) -}
c2f630e3989415140e237c2f8c288904
  $fOrdChar_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarChar_$cscalarType) -}
2717f0763907611eb28ff686fdc879a8
  $fOrdChar_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarChar_$cscalarType) -}
8b03532309364fe75677581b58906b93
  $fOrdChar_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarChar_$cscalarType) -}
d802b458c781e05abd42addfc76e3bbe
  $fOrdChar_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool)
                   @ GHC.Types.Char
                   @~ <(GHC.Types.Char, GHC.Types.Char) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarChar_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdDouble ::
    Data.Array.Accelerate.Classes.Ord.Ord GHC.Types.Double
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Double
                  Data.Array.Accelerate.Classes.Eq.$fEqDouble
                  Data.Array.Accelerate.Classes.Ord.$fOrdDouble_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdDouble_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdDouble_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdDouble_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdDouble_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdDouble_$cmax -}
38619a9d253c1024ea8c6b25632b906f
  $fOrdDouble1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
f1bd6777839aaf2cf6548b1d7e3c47a1
  $fOrdDouble2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
4c8572f139da9aefc7229257efc30e23
  $fOrdDouble3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
fd2ea9d98983fa68378fc025dd1699c8
  $fOrdDouble4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
4959735132093f37710c220cb92ab12f
  $fOrdDouble5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
05888bd8234178c9f8e359967b47bbc0
  $fOrdDouble6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
b265ac187e0add8206e0f96cd05886bd
  $fOrdDouble_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdDouble6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
37a013ee7776a01ae8c214d8d61660b4
  $fOrdDouble_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdDouble4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
bcc6794718f8e491899adfeaf818b628
  $fOrdDouble_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdDouble5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
a067ec8bcec77dc8e068bc6b79e1aa29
  $fOrdDouble_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdDouble3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
9a5b9094903986c3cdd74bdefade33b9
  $fOrdDouble_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdDouble1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N) -}
e74b7a845e778b0fb0bb66ac4688a900
  $fOrdDouble_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdDouble2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N) -}
7bd2751bf12d4f995f5888bf164dc344
  $fOrdDouble_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double)
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double>_N
                   Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType) -}
c9d9ca177d958123d1bfaaece76ff6a8
  $fOrdDouble_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Double, GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
ea8ec492e0cf0bb8f0ac0a0df10d7531
  $fOrdDouble_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double)
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double>_N
                   Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType) -}
7a4ed314478bb6c983e5f6170484a0cf
  $fOrdDouble_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Double, GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
e079762b02fa343b3d0c6d6bc2dfced8
  $fOrdDouble_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType) -}
b649e87361873fdd5aaecb22aedd0d87
  $fOrdDouble_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType) -}
ce7e31cb6ce644d9c408c667e61aba40
  $fOrdDouble_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType) -}
ccfedd68f442986daa1421f754934952
  $fOrdDouble_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool)
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType) -}
7c428d45de80ebc3a1dae4de28c3b91e
  $fOrdExp ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    GHC.Classes.Ord (Data.Array.Accelerate.Smart.Exp a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,A,A,A,A,1*U,1*U)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a).
                  @ (Data.Array.Accelerate.Smart.Exp a)
                  (Data.Array.Accelerate.Classes.Ord.$fOrdExp_$cp1Ord @ a $dOrd)
                  (Data.Array.Accelerate.Classes.Ord.$fOrdExp_$ccompare @ a $dOrd)
                  (Data.Array.Accelerate.Classes.Ord.$fOrdExp_$c< @ a $dOrd)
                  (Data.Array.Accelerate.Classes.Ord.$fOrdExp_$c<= @ a $dOrd)
                  (Data.Array.Accelerate.Classes.Ord.$fOrdExp_$c> @ a $dOrd)
                  (Data.Array.Accelerate.Classes.Ord.$fOrdExp_$c>= @ a $dOrd)
                  (Data.Array.Accelerate.Classes.Ord.max @ a $dOrd)
                  (Data.Array.Accelerate.Classes.Ord.min @ a $dOrd) -}
c68c22bbc46895fc6ff66725c1cef068
  $fOrdExp1 ::
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
d1e0062d11223b969613ecdd771ac046
  $fOrdExp2 ::
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
4f365eb8b20aa19382d7e5fe2feceece
  $fOrdExp3 ::
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
886b5275390b7383c0f63233cadf8e81
  $fOrdExp4 ::
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
f225f2532940595076eeadc1be561a84
  $fOrdExp5 ::
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Ordering
  {- Strictness: x -}
1e91c3685801b43a6a73fc5492d7b69b
  $fOrdExp_$c< ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrdExp4 @ a) -}
746869e612a83aeaa4a3be5355f5925e
  $fOrdExp_$c<= ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrdExp3 @ a) -}
50a3093ef00cb2c9d732cd1073e087ee
  $fOrdExp_$c> ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrdExp2 @ a) -}
d6044a291b8d541af287ac23d7481442
  $fOrdExp_$c>= ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrdExp1 @ a) -}
b7c4c419a129c6f7c6e4a33dc9d3943d
  $fOrdExp_$ccompare ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Ordering
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a) ->
                 Data.Array.Accelerate.Classes.Ord.$fOrdExp5 @ a) -}
feb0ba5bbc5bd443a50451aa18d24dee
  $fOrdExp_$cp1Ord ::
    Data.Array.Accelerate.Classes.Ord.Ord a =>
    GHC.Classes.Eq (Data.Array.Accelerate.Smart.Exp a)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dOrd :: Data.Array.Accelerate.Classes.Ord.Ord a) ->
                 Data.Array.Accelerate.Classes.Eq.$fEqExp @ a) -}
32c955536e40f163bc65c13f16697a02
  $fOrdFloat :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Types.Float
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Float
                  Data.Array.Accelerate.Classes.Eq.$fEqFloat
                  Data.Array.Accelerate.Classes.Ord.$fOrdFloat_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdFloat_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdFloat_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdFloat_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdFloat_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdFloat_$cmax -}
4dd36bbcd2c630b6e5218d4572365af2
  $fOrdFloat1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Float
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
1a56b2eeb1109a88f997f18ccef6edc2
  $fOrdFloat2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Float
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
b82b3b574fdcbb5468184b79b9e1ad6a
  $fOrdFloat3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
dbfb10fb8e981161fd14dcc4cc487d1f
  $fOrdFloat4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
e3f69c2b44229a51ba2eb022d8f5bf00
  $fOrdFloat5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
89ee97de461b60ba71c9edbfc45af905
  $fOrdFloat6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
c7f68a5d99f56cc76a978a5d109b589c
  $fOrdFloat_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdFloat6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
bf85d3f2133834a27eed91a469fb8877
  $fOrdFloat_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdFloat4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
e5ebb7a253b96d4a3afb9473baec20f3
  $fOrdFloat_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdFloat5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
9b66e88526457ac40878bcddb47eab0e
  $fOrdFloat_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdFloat3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
33978c63acd7aaefdf807db1c5991d22
  $fOrdFloat_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdFloat1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N) -}
2044087e7fbcc9e645a2dc03180d10e8
  $fOrdFloat_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdFloat2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N) -}
ade062eca439d14669584a7fa343eed3
  $fOrdFloat_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float)
                   @ GHC.Types.Float
                   @~ <(GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float>_N
                   Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType) -}
83c950d0f6c3e7d9f7ac30cb3d2c9ed2
  $fOrdFloat_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat) -}
b979f63722099a74885f9fe4a468657f
  $fOrdFloat_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float)
                   @ GHC.Types.Float
                   @~ <(GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float>_N
                   Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType) -}
991a31d870971cbf30203da784c471e0
  $fOrdFloat_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat) -}
8f67911745f1e548ea263b50f2382553
  $fOrdFloat_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
                   @ GHC.Types.Float
                   @~ <(GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType) -}
c34a34100524c9f58d16d0a4abd2f41a
  $fOrdFloat_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
                   @ GHC.Types.Float
                   @~ <(GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType) -}
f3d4f06815a576349a618dd4565f035e
  $fOrdFloat_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
                   @ GHC.Types.Float
                   @~ <(GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType) -}
831fad3ceced9189d68c944475b15211
  $fOrdFloat_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool)
                   @ GHC.Types.Float
                   @~ <(GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdInt :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Types.Int
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Int
                  Data.Array.Accelerate.Classes.Eq.$fEqInt
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_$cmax -}
d9dca189428cff5c0172117e0d96f157
  $fOrdInt1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
c00de2cb66c10ea188ca88ed354500dc
  $fOrdInt10 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
f89e782efa19b2bf86edba9c1485c7a7
  $fOrdInt11 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
6ed50777b08df5718cae080e1bf832fe
  $fOrdInt12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
977e2de64f11259de5b7971bd06f77db
  $fOrdInt13 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
558c84bcfd87e1f3cf759988f772d141
  $fOrdInt14 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
d46d0a232b3d41d74f90e17579f938b4
  $fOrdInt15 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdInt16 :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Int.Int16
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int16
                  Data.Array.Accelerate.Classes.Eq.$fEqInt16
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt16_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt16_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt16_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt16_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt16_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt16_$cmax -}
0fba08739e8fa0611806f2070fbff325
  $fOrdInt16_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
976accf51a00e93b0f39ca0328b19a3d
  $fOrdInt16_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
8f99cf9baea884de476cc4cb99776a02
  $fOrdInt16_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
d8f6b67dee271920516a98112831ec34
  $fOrdInt16_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
93e5166c47dc9675017d45cf8fa5a7ef
  $fOrdInt16_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
d3b46b2555912493e1112590f4d19b92
  $fOrdInt16_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
7c071fa0dc3f36fd425cbda839c332eb
  $fOrdInt16_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
ce8cdb05994ed8d8e390080ae975ddf3
  $fOrdInt16_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int16, GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int16
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16) -}
2f806a867b144304c207dc8f96caaeda
  $fOrdInt16_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
52244f65f003deda2136771220ae9061
  $fOrdInt16_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int16, GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int16
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16) -}
3d4d298b6ce68d44c8d210132885e5cb
  $fOrdInt16_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
d5f77ba8796c661acfa1e4cae48054ea
  $fOrdInt16_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
6d8acc0abf3b115b1629830b2e9c9a8a
  $fOrdInt16_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
2e0c034f2c9ad3aef9308324c6e5360e
  $fOrdInt16_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
4e9ecb9dd038286001657e3fad4bfbbc
  $fOrdInt17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
9d7fcc024a42702435d0de90b62ea9da
  $fOrdInt18 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
73431e06cab8884547eff15565828dc8
  $fOrdInt19 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
967d3b6ef6a7bec3e260a668e5926a4c
  $fOrdInt2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
46a68a4634fe6f35946da413103fbc64
  $fOrdInt20 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
dc996282940fea6fc8fad404b8eaf57d
  $fOrdInt21 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
2a7dcd44257cd4a80fab8a64b5a12150
  $fOrdInt22 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
bc5f5dcc2cd9769076d1bdc25de19dec
  $fOrdInt23 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
3640516e91ada4c8c5b0ce7292e962ad
  $fOrdInt24 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
020d0e39571f1c1f799ca876b1db861f
  $fOrdInt25 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
1e206d2abf017459065d7e179e5e5136
  $fOrdInt26 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
c972aff55b5a769c15cab7fc0fa51d3f
  $fOrdInt27 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
f87e946b2a3b3d8cbd15def5bbc2784d
  $fOrdInt28 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
55ee5132cf14d959383d5c3ea4673e83
  $fOrdInt29 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
645cb74b49a0ab1b20744bac5ea25aa2
  $fOrdInt3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
867fff3b1dc8a9be80184cceea9a7244
  $fOrdInt30 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
598c60bdd23893f7a7983c33d528490b
  $fOrdInt31 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdInt32 :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Int.Int32
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int32
                  Data.Array.Accelerate.Classes.Eq.$fEqInt32
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt32_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt32_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt32_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt32_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt32_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt32_$cmax -}
7e5d5ee63910d8a309ef1c8b5857a6b6
  $fOrdInt32_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1165902541c52705a732a56b429738b0
  $fOrdInt32_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
416cb7d6f15053130ce5098242afd58c
  $fOrdInt32_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2a2edeb557e57f6ea2f4af04422152fd
  $fOrdInt32_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
7b74af40ab619acbc22521358383c165
  $fOrdInt32_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
8e68e2d546c2441d5484b68a1d689349
  $fOrdInt32_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
e554a651e04266761d66015f614eb20b
  $fOrdInt32_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
5fbdb937c8dee007b8d5b395642ecc8f
  $fOrdInt32_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int32, GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int32
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32) -}
301ea88120d9d19e0ea20f959a8503f8
  $fOrdInt32_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
e0262323cc66a0aefece56e332448a2d
  $fOrdInt32_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int32, GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int32
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32) -}
84c801526deede445fef95c7574f2393
  $fOrdInt32_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
a7540074a6df91f415fe868d1b51c1e3
  $fOrdInt32_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
4369c3b2b592ab5c573e74db22657b8a
  $fOrdInt32_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
b1ad7b6031f4b8e11b1234dd11a145aa
  $fOrdInt32_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
7947dbd94ba57b4b86c471751c192be9
  $fOrdInt33 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
3a141de0e11f228e7749fe2de3aa9cb7
  $fOrdInt4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
0bfa0de909713d1f09c003b268774d20
  $fOrdInt5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
0ddac887233278aa141e5dbc8db2c1b7
  $fOrdInt6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdInt64 :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Int.Int64
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int64
                  Data.Array.Accelerate.Classes.Eq.$fEqInt64
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt64_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt64_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt64_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt64_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt64_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt64_$cmax -}
9c48dadbdab9672841cc32aa31a075d8
  $fOrdInt64_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt26
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
abe774a147e1d97b750575e68e8d4b82
  $fOrdInt64_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt24
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
15a99f7d3d7bf5acc98a0ae60049164d
  $fOrdInt64_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt25
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
7f600ac5bb500fe781fe609399ce2dc5
  $fOrdInt64_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt23
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
40bfea6b597cac098dca1d0f7ae608dc
  $fOrdInt64_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt21
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
a597b65b39348a36ff5a996eb4eb6d05
  $fOrdInt64_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt22
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
3f5d0e783a706a38c9c28c2e8af61dfb
  $fOrdInt64_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
35dcbeefb4199bb2686fab9c3d77b1e8
  $fOrdInt64_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int64, GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int64
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64) -}
691728d8e005fd933fa4a0e76a796f2d
  $fOrdInt64_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
09c117ff38f28bae14f13574a78f4b93
  $fOrdInt64_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int64, GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int64
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64) -}
8d977512fd382c21a1c7ddf200f64075
  $fOrdInt64_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
fb9e043ac0664b5c81be58ac6f6b27be
  $fOrdInt64_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
68c8c5ff8e5c3cecbb7f33c0df2b331c
  $fOrdInt64_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
3702d6561aea346aeb32004505517897
  $fOrdInt64_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
c88d7f98e9da22751880d937f2524695
  $fOrdInt7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdInt8 :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Int.Int8
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int8
                  Data.Array.Accelerate.Classes.Eq.$fEqInt8
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt8_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt8_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt8_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt8_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt8_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt8_$cmax -}
e337714856dae81547ef72a5fb90c58b
  $fOrdInt8_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt33
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
7855c10f3bd855405abd4952411a2533
  $fOrdInt8_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt30
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1202fef010a73a6acd88572f0e70404b
  $fOrdInt8_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt31
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
0a78f4fe175569b080d938298a9ec3ee
  $fOrdInt8_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt29
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
fbf463f80cc6c98be10e4327673d0b9f
  $fOrdInt8_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt27
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
b46df20edc7bc8112d2e67aec4679916
  $fOrdInt8_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt28
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
d4e2c4dc7ef7a7da9b5569af00dd4ef0
  $fOrdInt8_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
2871ceef0e32a7203fee722cd75dbabd
  $fOrdInt8_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt (GHC.Int.Int8, GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int8
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8) -}
3ec2d906085285130b4db6d70eab6619
  $fOrdInt8_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
83556346bbe87f74f04dd26413c945ad
  $fOrdInt8_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt (GHC.Int.Int8, GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int8
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8) -}
e13fae5395a94461d40c214c9f137e6f
  $fOrdInt8_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
33581a24b1e5127333a5909111d6d8e2
  $fOrdInt8_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
6cc86ede7677c75aa26f3b1a81e91cd3
  $fOrdInt8_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
c06a54307b454ab8c15a5e3ebe901b18
  $fOrdInt8_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
3d7cf942ff8c57587d5c8f8194093b09
  $fOrdInt9 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
66b8e9b8dbbea42b68fffd2ef7af7271
  $fOrdInt_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2c8c7a4fb576a2d6fb46791aeb9ec2fd
  $fOrdInt_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
5e9b08b3fdcb0afe1b97b95409c06c04
  $fOrdInt_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
01522bfa6bd54a0b002fd9bf1bcdf854
  $fOrdInt_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1110ab9dc5bc1cadc2a8cf993392ec30
  $fOrdInt_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
046e6281bd20093f2478b96fb02c998d
  $fOrdInt_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
526f0d4b342af8c3b962d41e593ff9f7
  $fOrdInt_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
4424da867a4767a6ccdfce62414446ce
  $fOrdInt_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
57af781390bfdd33ba813a870ccf7937
  $fOrdInt_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
ef363babcab24c2284f73acbce821864
  $fOrdInt_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
1ba95ed5f1892503585ef6d9f27d09dd
  $fOrdInt_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
29566684ab48b14b1cc3b37f32dbf8a5
  $fOrdInt_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
6e017bb11bc5791fb3b7ad6d6aab267a
  $fOrdInt_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
5f3b9ab275ef53af6b37ab54f1a96898
  $fOrdInt_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
32c955536e40f163bc65c13f16697a02
  $fOrdWord :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Types.Word
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Word
                  Data.Array.Accelerate.Classes.Eq.$fEqWord
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord_$cmax -}
a084c06dae310671626ecebda48a4156
  $fOrdWord1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
93f1bf78a727dfbc360b09c1bda2d157
  $fOrdWord10 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
9be0d40d726442803fbb3ee6825a87b5
  $fOrdWord11 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
e7ef9775467b82d101d5e04d86e7c4f1
  $fOrdWord12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
c619aab35e0d1eee250254e2965ddf36
  $fOrdWord13 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
e4403e1d56b335bef20d1efb6560ac87
  $fOrdWord14 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
213ec01e73e9fa6e8f4e17b6fa7e25a1
  $fOrdWord15 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdWord16 ::
    Data.Array.Accelerate.Classes.Ord.Ord GHC.Word.Word16
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word16
                  Data.Array.Accelerate.Classes.Eq.$fEqWord16
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord16_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord16_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord16_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord16_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord16_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord16_$cmax -}
4601a4657daa711c66b0d18a4ecb0363
  $fOrdWord16_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
3e0cdd1a3ee2c9774fda537546625bf4
  $fOrdWord16_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
0dc5e0249e1115642efed7cc037fa724
  $fOrdWord16_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
80b5b027894ac9df66eafd071305f4c1
  $fOrdWord16_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
4b1a01f0699068bf53da79a18b3f4e4f
  $fOrdWord16_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
e6977f6cbb605ebee4839e34584ef36c
  $fOrdWord16_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
b21eb849fbe416e40f10b89099f8bed0
  $fOrdWord16_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
32f7375dc644d92374094c6fefe94c6a
  $fOrdWord16_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word16, GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word16
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16) -}
ccbfd62fb6f23e0b631863bd3edbe797
  $fOrdWord16_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
e33cc576be997959cfe811609e18016a
  $fOrdWord16_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word16, GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word16
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16) -}
c8f0e4ab44bdd7ad24481e9e84cc0a4c
  $fOrdWord16_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
f637a4a85afb3d586689df30ae2dfb3c
  $fOrdWord16_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
db643ce664375ff72f758ff3b71f3ffb
  $fOrdWord16_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
772bfdd3446a3c194f0c468750f6c3be
  $fOrdWord16_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
ce1b815a1644e20283f92f30e5a83c49
  $fOrdWord17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
e3e0c33a74885ba9bfd1f1ec8f9f1520
  $fOrdWord18 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
bcf66dd91fde32c364752289a070f41d
  $fOrdWord19 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
ca4823fac14f6c535663c6c96490f223
  $fOrdWord2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
ab0589875d7b3eb455b457061d219a68
  $fOrdWord20 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
f9b64478c4ec472e805c928d0ca303e8
  $fOrdWord21 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
539214dd73ce943181e0dae1afd5b2a0
  $fOrdWord22 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
43396290e27ed0c69d9d882d805cbb46
  $fOrdWord23 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
1cf10c2179defc0256bd44b313049e32
  $fOrdWord24 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
e3c18967a44b1f7afc13138e3d5d9806
  $fOrdWord25 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
2e6261b20bf1dd1231cff0a482c1c0e3
  $fOrdWord26 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
8c7f5707549ce9e0e211c860eb706c9e
  $fOrdWord27 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
654f3423cf80495ea6885768255b2f42
  $fOrdWord28 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
b109a4f3cc1a8074d0af52f4f299fe51
  $fOrdWord29 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
ac5f731db4a3537dc330d7402e06d1f7
  $fOrdWord3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
bb030be42da09c72d186f2ed07d14df2
  $fOrdWord30 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
5ece7bff447ee0166e766a4522623692
  $fOrdWord31 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdWord32 ::
    Data.Array.Accelerate.Classes.Ord.Ord GHC.Word.Word32
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word32
                  Data.Array.Accelerate.Classes.Eq.$fEqWord32
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord32_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord32_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord32_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord32_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord32_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord32_$cmax -}
6350354c7962b8c9ecc62dc0b96f8785
  $fOrdWord32_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1b68a900515561dd33911405a8cc4f1e
  $fOrdWord32_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
4bf846d4cc25a74b22eac8752be8ef70
  $fOrdWord32_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
95e1585eb5666c39e540c279b4d77e4f
  $fOrdWord32_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
f455c175ec8acde1f040650d80379c7e
  $fOrdWord32_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
12b84922a5290790a9c864955a0c3e0c
  $fOrdWord32_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
352717b8ba6b7c648ae5fc92c5abe583
  $fOrdWord32_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
75c9dc43634138c56b9d4c0696564668
  $fOrdWord32_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word32, GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32) -}
dcc28e16202ec012213c8332a9426b09
  $fOrdWord32_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
f92ed943852bec56b30a7b3c81b81aac
  $fOrdWord32_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word32, GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32) -}
e9f173f354fd1dde3d985086973dce01
  $fOrdWord32_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
23bb82bf36c4ae5176a420208909a4fb
  $fOrdWord32_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
8f934fcc99b6e292f1e0f53b510b63bb
  $fOrdWord32_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
b17be7a9986446b39a8b205e3902c9f6
  $fOrdWord32_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
64417ed774908f050c8ebe7eec751cd9
  $fOrdWord33 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
9c4f1ecadcc1c79760e0533287fc9e17
  $fOrdWord4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
3b2b61ee1c22c5761e4345716bf5c6cb
  $fOrdWord5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
90d6761e328de502e3677bbc183b76e6
  $fOrdWord6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdWord64 ::
    Data.Array.Accelerate.Classes.Ord.Ord GHC.Word.Word64
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word64
                  Data.Array.Accelerate.Classes.Eq.$fEqWord64
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord64_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord64_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord64_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord64_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord64_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord64_$cmax -}
36834ed9954f1469ac669fc13b180328
  $fOrdWord64_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord26
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
370361a676840624addb75a36a5c5b1f
  $fOrdWord64_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord24
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
7e27d3f5876c1c7ebbcd672a090f5fc7
  $fOrdWord64_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord25
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
54d116f60aff4ef6f6b02d9dd54a5700
  $fOrdWord64_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord23
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
4f162b4c3efafcfd072401e8806c766d
  $fOrdWord64_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord21
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
65bb33860e4d2140893c401e2f180576
  $fOrdWord64_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord22
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
6ccadc760ed10ce11c81090a15e8f582
  $fOrdWord64_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
7d9b95599b39b93fb4abda9f841f7bd2
  $fOrdWord64_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word64, GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word64
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64) -}
604c3e694fb306e799daf7b3ec1dabd3
  $fOrdWord64_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
17c5ef9281471172ab72a84adcafdd1e
  $fOrdWord64_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word64, GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word64
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64) -}
1b32ea4c10ec461b88f2a2f7dba60068
  $fOrdWord64_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
df8d1dc0a745f461ed377e0e8f893848
  $fOrdWord64_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
38085a106b0e82e9f7638ce42d974f3f
  $fOrdWord64_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
609e9cdc2213e4c343f220e2220a7ef3
  $fOrdWord64_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
10eef46e291784bc08e0ec7b68a9d662
  $fOrdWord7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
32c955536e40f163bc65c13f16697a02
  $fOrdWord8 :: Data.Array.Accelerate.Classes.Ord.Ord GHC.Word.Word8
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word8
                  Data.Array.Accelerate.Classes.Eq.$fEqWord8
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord8_$c<
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord8_$c>
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord8_$c<=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord8_$c>=
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord8_$cmin
                  Data.Array.Accelerate.Classes.Ord.$fOrdWord8_$cmax -}
63576b69aa950e85d370d062131a15f2
  $fOrdWord8_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord33
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
48d914d768cc35c4cfda02c294b08f05
  $fOrdWord8_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord30
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
b50016e1415bb176094aeaeb45da9323
  $fOrdWord8_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord31
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
89510e141d40990abb55063efafd6100
  $fOrdWord8_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord29
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
ac418bf55143b3eb67d4b91b85fc012a
  $fOrdWord8_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord27
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
313b6acc0afddc100c988fd8a19c78b3
  $fOrdWord8_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord28
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
04da2d2d51e529bad11ed96c9e1df37a
  $fOrdWord8_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
5691ecdf130e4c03c19182fdd0536839
  $fOrdWord8_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word8, GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8) -}
52391a6da0e8eef06ec003c33d38b2c9
  $fOrdWord8_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
1b5a535daaaeac9bdcbcfd999c0f65cc
  $fOrdWord8_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word8, GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8) -}
a00587c08df52b6d5c788aa0606b1edd
  $fOrdWord8_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
b0e85f7bc2ef3665b960f15e7cbb67a7
  $fOrdWord8_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
b2deb858a887a897d9f8678df18801b2
  $fOrdWord8_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
60cd34280e28eef975aa76fd884f92a4
  $fOrdWord8_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
df7318090956fe416291f3b1f70439e5
  $fOrdWord9 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl196
                      Data.Array.Accelerate.Classes.Ord.$fOrdWord16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
2603818f1e0868da791ebf341bf4f8eb
  $fOrdWord_$c< ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
e18d110c5867685eae2f9845ae7d04ed
  $fOrdWord_$c<= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
d374bce7ddd1c713f717a73926f30419
  $fOrdWord_$c> ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
d88c861b016047e46be2363ad09edfb6
  $fOrdWord_$c>= ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
3558787690c9dfb902bdd8c3c6c80458
  $fOrdWord_$cmax ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
ee70e80956394b8b161a4541a752a9b0
  $fOrdWord_$cmin ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Ord.$fOrdWord2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
ce37e60c6c79b0a30411f12fe0bd3641
  $fOrdWord_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMin
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
3f7c79d82f98504f36a840391129c8a3
  $fOrdWord_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Word, GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Word
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltWord) -}
830a033ba6f3d15a1752e9c91493a138
  $fOrdWord_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimMax
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
82b501057815cec9565372e6815afa6b
  $fOrdWord_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Word, GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Word
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltWord) -}
1b270472d6bb485f1c1105f8eb5ccc7c
  $fOrdWord_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGtEq
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
8c7569e7db08cf1f28e30f08b6fe2aa7
  $fOrdWord_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLtEq
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
597b0df6d0f439d47fdfca30021a2c5a
  $fOrdWord_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimGt
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
8a4455281aa156d69288e1c3cc7d9296
  $fOrdWord_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
a3099a505cd4e836069074afbd7de738
  $sprintf3 ::
    GHC.Base.String -> [Text.Printf.UPrintf] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (fmts :: GHC.Base.String)
                   (args :: [Text.Printf.UPrintf]) ->
                 GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   Text.Printf.$fIsCharChar_$cfromChar
                   (Text.Printf.uprintfs
                      fmts
                      (GHC.List.reverse1
                         @ Text.Printf.UPrintf
                         args
                         (GHC.Types.[] @ Text.Printf.UPrintf))
                      (GHC.Types.[] @ GHC.Types.Char))) -}
d074f55cee67ca902eeef27c576be82b
  $tc'C:Ord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10156674613223450846##
                   10536115601163679049##
                   Data.Array.Accelerate.Classes.Ord.$trModule
                   Data.Array.Accelerate.Classes.Ord.$tc'C:Ord1) -}
a53f7586a483e0d7b6545434c59fc328
  $tc'C:Ord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:Ord"#) -}
a1fa7cd14534f018c7c21a8365c49283
  $tcOrd :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6891692268740665200##
                   16984271031060068692##
                   Data.Array.Accelerate.Classes.Ord.$trModule
                   Data.Array.Accelerate.Classes.Ord.$tcOrd1) -}
fc4937966b579899dee50f31136ffdc2
  $tcOrd1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Ord"#) -}
c6496c8a27e1139847260f13f2f61c85
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Classes.Ord.$trModule2
                   Data.Array.Accelerate.Classes.Ord.$trModule1) -}
30c754e40a5b524239a862b6be170f4b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Data.Array.Accelerate.Classes.Ord"#) -}
aee78b7f17919bf09c0b0fd6d0af0979
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
32c955536e40f163bc65c13f16697a02
  $w$cmax ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt (a, b, c),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp (a, b, c),
          Data.Array.Accelerate.Smart.Exp (a, b, c) #)
  {- Arity: 5,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (w4 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fElt(,,)
                      @ a
                      @ b
                      @ c
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ a
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w))
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ b
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1))
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ c
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)),
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)2
                       @ a
                       @ b
                       @ c
                       w
                       w1
                       w2
                       w3
                       w4)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w4, w3 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmax1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l) #)
  {- Arity: 14,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l))
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord8
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w13, w12 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmax2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l, m),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m) #)
  {- Arity: 15,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m))
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord9
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           @ m
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11
                           w12 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       @ m
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13
                       w14)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w14, w13 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmax3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n) #)
  {- Arity: 16,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n))
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord10
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           @ m
                           @ n
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11
                           w12
                           w13 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       @ m
                       @ n
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13
                       w14
                       w15)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w15, w14 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmax4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) #)
  {- Arity: 17,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Classes.Ord.Ord o)
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o))
                   (w16 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord11
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           @ m
                           @ n
                           @ o
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11
                           w12
                           w13
                           w14 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       @ m
                       @ n
                       @ o
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13
                       w14
                       w15
                       w16)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w16, w15 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmin ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c) =>
    Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> Data.Array.Accelerate.Smart.Exp (a, b, c)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt (a, b, c),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp (a, b, c),
          Data.Array.Accelerate.Smart.Exp (a, b, c) #)
  {- Arity: 5,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Smart.Exp (a, b, c))
                   (w4 :: Data.Array.Accelerate.Smart.Exp (a, b, c)) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fElt(,,)
                      @ a
                      @ b
                      @ c
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ a
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w))
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ b
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1))
                      (Data.Array.Accelerate.Classes.Eq.$p1Eq
                         @ c
                         (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)),
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,)2
                       @ a
                       @ b
                       @ c
                       w
                       w1
                       w2
                       w3
                       w4)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w3, w4 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmin1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l) #)
  {- Arity: 14,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l))
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord8
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w12, w13 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmin2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l, m),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m) #)
  {- Arity: 15,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m))
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord9
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           @ m
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11
                           w12 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       @ m
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13
                       w14)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w13, w14 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmin3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n) #)
  {- Arity: 16,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n))
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord10
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           @ m
                           @ n
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11
                           w12
                           w13 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       @ m
                       @ n
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13
                       w14
                       w15)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w14, w15 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cmin4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    Data.Array.Accelerate.Smart.Exp
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o),
          Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) #)
  {- Arity: 17,
     Strictness: <L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),C(C1(U)),A,A,A,A,A)><L,U(U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),U,U),A,A,C(C1(U)),A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h)
                   (w8 :: Data.Array.Accelerate.Classes.Ord.Ord i)
                   (w9 :: Data.Array.Accelerate.Classes.Ord.Ord j)
                   (w10 :: Data.Array.Accelerate.Classes.Ord.Ord k)
                   (w11 :: Data.Array.Accelerate.Classes.Ord.Ord l)
                   (w12 :: Data.Array.Accelerate.Classes.Ord.Ord m)
                   (w13 :: Data.Array.Accelerate.Classes.Ord.Ord n)
                   (w14 :: Data.Array.Accelerate.Classes.Ord.Ord o)
                   (w15 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o))
                   (w16 :: Data.Array.Accelerate.Smart.Exp
                             (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) ->
                 (# case Data.Array.Accelerate.Classes.Ord.$w$cp1Ord11
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           @ i
                           @ j
                           @ k
                           @ l
                           @ m
                           @ n
                           @ o
                           w
                           w1
                           w2
                           w3
                           w4
                           w5
                           w6
                           w7
                           w8
                           w9
                           w10
                           w11
                           w12
                           w13
                           w14 of ww { (#,,#) ww1 ww2 ww3 ->
                    ww1 },
                    (Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       @ i
                       @ j
                       @ k
                       @ l
                       @ m
                       @ n
                       @ o
                       w
                       w1
                       w2
                       w3
                       w4
                       w5
                       w6
                       w7
                       w8
                       w9
                       w10
                       w11
                       w12
                       w13
                       w14
                       w15
                       w16)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w15, w16 #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt (a, b, c, d),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d) ->
                 (# case Data.Array.Accelerate.Classes.Eq.$w$cp1Eq
                           @ a
                           @ b
                           @ c
                           @ d
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord
                              @ d
                              w3) of ww { (#,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                    Data.Array.Accelerate.Array.Sugar.C:Elt
                      @ (a, b, c, d)
                      ww1
                      ww2
                      ww3
                      ww4
                      ww5
                      ww6
                      ww7 },
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,)1
                       @ a
                       @ b
                       @ c
                       @ d
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord1 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt (a, b, c, d, e),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 5,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e) ->
                 (# case Data.Array.Accelerate.Classes.Eq.$w$cp1Eq1
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord
                              @ e
                              w4) of ww { (#,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                    Data.Array.Accelerate.Array.Sugar.C:Elt
                      @ (a, b, c, d, e)
                      ww1
                      ww2
                      ww3
                      ww4
                      ww5
                      ww6
                      ww7 },
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,)1
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord10 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n),
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 14,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0] -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord11 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m,
     Data.Array.Accelerate.Classes.Ord.Ord n,
     Data.Array.Accelerate.Classes.Ord.Ord o) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o),
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 15,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0] -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord2 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt (a, b, c, d, e, f),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 6,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f) ->
                 (# case Data.Array.Accelerate.Classes.Eq.$w$cp1Eq2
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord
                              @ f
                              w5) of ww { (#,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                    Data.Array.Accelerate.Array.Sugar.C:Elt
                      @ (a, b, c, d, e, f)
                      ww1
                      ww2
                      ww3
                      ww4
                      ww5
                      ww6
                      ww7 },
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,,)1
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord3 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt (a, b, c, d, e, f, g),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 7,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g) ->
                 (# case Data.Array.Accelerate.Classes.Eq.$w$cp1Eq3
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord
                              @ g
                              w6) of ww { (#,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                    Data.Array.Accelerate.Array.Sugar.C:Elt
                      @ (a, b, c, d, e, f, g)
                      ww1
                      ww2
                      ww3
                      ww4
                      ww5
                      ww6
                      ww7 },
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ g w6))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,,,)1
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ g w6))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord4 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt (a, b, c, d, e, f, g, h),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 8,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   (w :: Data.Array.Accelerate.Classes.Ord.Ord a)
                   (w1 :: Data.Array.Accelerate.Classes.Ord.Ord b)
                   (w2 :: Data.Array.Accelerate.Classes.Ord.Ord c)
                   (w3 :: Data.Array.Accelerate.Classes.Ord.Ord d)
                   (w4 :: Data.Array.Accelerate.Classes.Ord.Ord e)
                   (w5 :: Data.Array.Accelerate.Classes.Ord.Ord f)
                   (w6 :: Data.Array.Accelerate.Classes.Ord.Ord g)
                   (w7 :: Data.Array.Accelerate.Classes.Ord.Ord h) ->
                 (# case Data.Array.Accelerate.Classes.Eq.$w$cp1Eq4
                           @ a
                           @ b
                           @ c
                           @ d
                           @ e
                           @ f
                           @ g
                           @ h
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord @ g w6)
                           (Data.Array.Accelerate.Classes.Ord.$p1Ord
                              @ h
                              w7) of ww { (#,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                    Data.Array.Accelerate.Array.Sugar.C:Elt
                      @ (a, b, c, d, e, f, g, h)
                      ww1
                      ww2
                      ww3
                      ww4
                      ww5
                      ww6
                      ww7 },
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,,,,)2
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ g w6)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ h w7))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Classes.Eq.$fEq(,,,,,,,)1
                       @ a
                       @ b
                       @ c
                       @ d
                       @ e
                       @ f
                       @ g
                       @ h
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ a w)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ b w1)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ c w2)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ d w3)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ e w4)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ f w5)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ g w6)
                       (Data.Array.Accelerate.Classes.Ord.$p1Ord @ h w7))
                      `cast`
                    (<Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                     ->_R <Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h)>_R
                     ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) #)) -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord5 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt
         (a, b, c, d, e, f, g, h, i),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 9,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0] -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord6 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt
         (a, b, c, d, e, f, g, h, i, j),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
       -> Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 10,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0] -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord7 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt
         (a, b, c, d, e, f, g, h, i, j, k),
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp (a, b, c, d, e, f, g, h, i, j, k)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 11,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0] -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord8 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt
         (a, b, c, d, e, f, g, h, i, j, k, l),
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 12,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0] -}
32c955536e40f163bc65c13f16697a02
  $w$cp1Ord9 ::
    (Data.Array.Accelerate.Classes.Ord.Ord a,
     Data.Array.Accelerate.Classes.Ord.Ord b,
     Data.Array.Accelerate.Classes.Ord.Ord c,
     Data.Array.Accelerate.Classes.Ord.Ord d,
     Data.Array.Accelerate.Classes.Ord.Ord e,
     Data.Array.Accelerate.Classes.Ord.Ord f,
     Data.Array.Accelerate.Classes.Ord.Ord g,
     Data.Array.Accelerate.Classes.Ord.Ord h,
     Data.Array.Accelerate.Classes.Ord.Ord i,
     Data.Array.Accelerate.Classes.Ord.Ord j,
     Data.Array.Accelerate.Classes.Ord.Ord k,
     Data.Array.Accelerate.Classes.Ord.Ord l,
     Data.Array.Accelerate.Classes.Ord.Ord m) =>
    (# Data.Array.Accelerate.Array.Sugar.Elt
         (a, b, c, d, e, f, g, h, i, j, k, l, m),
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
       Data.Array.Accelerate.Smart.Exp
         (a, b, c, d, e, f, g, h, i, j, k, l, m)
       -> Data.Array.Accelerate.Smart.Exp
            (a, b, c, d, e, f, g, h, i, j, k, l, m)
       -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool #)
  {- Arity: 13,
     Strictness: <L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)><L,1*U(1*U(U(U(U,U,U),U,U,U(U,U,U,U,U,U,U,U,U),U,U,U),C(C1(U)),C(C1(U))),A,A,A,A,A,A)>,
     Inline: [0] -}
32c955536e40f163bc65c13f16697a02
  class Data.Array.Accelerate.Classes.Eq.Eq a => Ord a where
    (<) :: Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    (>) :: Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    (<=) :: Data.Array.Accelerate.Smart.Exp a
            -> Data.Array.Accelerate.Smart.Exp a
            -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    (>=) :: Data.Array.Accelerate.Smart.Exp a
            -> Data.Array.Accelerate.Smart.Exp a
            -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    min :: Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
    max :: Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
    {-# MINIMAL (<=) #-}
instance Data.Array.Accelerate.Classes.Ord.Ord [()]
  = Data.Array.Accelerate.Classes.Ord.$fOrd()
instance Data.Array.Accelerate.Classes.Ord.Ord [(,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [(,,,,,,,,,,,,,,)]
  = Data.Array.Accelerate.Classes.Ord.$fOrd(,,,,,,,,,,,,,,)
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Types.Bool]
  = Data.Array.Accelerate.Classes.Ord.$fOrdBool
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CChar]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCChar
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CDouble]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCDouble
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CFloat]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCFloat
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CInt]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCInt
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CLLong]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCLLong
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CLong]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCLong
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CSChar]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCSChar
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CShort]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCShort
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CUChar]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCUChar
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CUInt]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCUInt
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CULLong]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCULLong
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CULong]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCULong
instance Data.Array.Accelerate.Classes.Ord.Ord [Foreign.C.Types.CUShort]
  = Data.Array.Accelerate.Classes.Ord.$fOrdCUShort
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Types.Char]
  = Data.Array.Accelerate.Classes.Ord.$fOrdChar
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Types.Double]
  = Data.Array.Accelerate.Classes.Ord.$fOrdDouble
instance GHC.Classes.Ord [Data.Array.Accelerate.Smart.Exp]
  = Data.Array.Accelerate.Classes.Ord.$fOrdExp
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Types.Float]
  = Data.Array.Accelerate.Classes.Ord.$fOrdFloat
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Types.Int]
  = Data.Array.Accelerate.Classes.Ord.$fOrdInt
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Int.Int16]
  = Data.Array.Accelerate.Classes.Ord.$fOrdInt16
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Int.Int32]
  = Data.Array.Accelerate.Classes.Ord.$fOrdInt32
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Int.Int64]
  = Data.Array.Accelerate.Classes.Ord.$fOrdInt64
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Int.Int8]
  = Data.Array.Accelerate.Classes.Ord.$fOrdInt8
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Types.Word]
  = Data.Array.Accelerate.Classes.Ord.$fOrdWord
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Word.Word16]
  = Data.Array.Accelerate.Classes.Ord.$fOrdWord16
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Word.Word32]
  = Data.Array.Accelerate.Classes.Ord.$fOrdWord32
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Word.Word64]
  = Data.Array.Accelerate.Classes.Ord.$fOrdWord64
instance Data.Array.Accelerate.Classes.Ord.Ord [GHC.Word.Word8]
  = Data.Array.Accelerate.Classes.Ord.$fOrdWord8
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

