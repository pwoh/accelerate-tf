
==================== FINAL INTERFACE ====================
2017-08-29 05:27:52.724574 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.RealFloat [orphan module] 8002
  interface hash: b3cc52e4e5bbdff68449d1ce8e6064fd
  ABI hash: d0a972f761ddfd864af916d13c8917d7
  export-list hash: cf63e601fd89b33146e43819eae6af6c
  orphan hash: 03099c81a2c1a7cafba66a9c12ec96a1
  flag hash: edf4c93fdca1b85c10893b275fa575aa
  sig of: Nothing
  used TH splices: True
  where
exports:
  Data.Array.Accelerate.Classes.RealFloat.RealFloat{Data.Array.Accelerate.Classes.RealFloat.atan2 Data.Array.Accelerate.Classes.RealFloat.decodeFloat Data.Array.Accelerate.Classes.RealFloat.encodeFloat Data.Array.Accelerate.Classes.RealFloat.exponent Data.Array.Accelerate.Classes.RealFloat.floatDigits Data.Array.Accelerate.Classes.RealFloat.floatRadix Data.Array.Accelerate.Classes.RealFloat.floatRange Data.Array.Accelerate.Classes.RealFloat.isDenormalized Data.Array.Accelerate.Classes.RealFloat.isIEEE Data.Array.Accelerate.Classes.RealFloat.isInfinite Data.Array.Accelerate.Classes.RealFloat.isNaN Data.Array.Accelerate.Classes.RealFloat.isNegativeZero Data.Array.Accelerate.Classes.RealFloat.scaleFloat Data.Array.Accelerate.Classes.RealFloat.significand}
module dependencies: Data.Array.Accelerate.AST
                     Data.Array.Accelerate.Array.Data
                     Data.Array.Accelerate.Array.Representation
                     Data.Array.Accelerate.Array.Sugar
                     Data.Array.Accelerate.Array.Unique
                     Data.Array.Accelerate.Classes.Enum Data.Array.Accelerate.Classes.Eq
                     Data.Array.Accelerate.Classes.Floating
                     Data.Array.Accelerate.Classes.Fractional
                     Data.Array.Accelerate.Classes.FromIntegral
                     Data.Array.Accelerate.Classes.Integral
                     Data.Array.Accelerate.Classes.Num Data.Array.Accelerate.Classes.Ord
                     Data.Array.Accelerate.Classes.Real
                     Data.Array.Accelerate.Classes.RealFrac
                     Data.Array.Accelerate.Classes.ToFloating
                     Data.Array.Accelerate.Data.Bits Data.Array.Accelerate.Debug.Flags
                     Data.Array.Accelerate.Debug.Monitoring
                     Data.Array.Accelerate.Debug.Trace Data.Array.Accelerate.Error
                     Data.Array.Accelerate.Language Data.Array.Accelerate.Lifetime
                     Data.Array.Accelerate.Product Data.Array.Accelerate.Smart
                     Data.Array.Accelerate.Type
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      unique-0@unique-0-9CJQKYGbqiDaFUmoekKeA
orphans: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Enum
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Eq
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Floating
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Fractional
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Integral
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Num
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Ord
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Real
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.RealFrac
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt:Data.Label.Point
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Data
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Representation
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Sugar
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Product
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Smart
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Type
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  Data.Array.Accelerate.Classes.Eq b5abcb6d2b1b2f77926ba32e74c56bfd
  exports: 6d08b503170f674ec3fef36c5a59035f
  && fd3fbc575278d01240f55b5285c81d9c
  /= bfd246b5fc13bff4fe92c8890493d0d4
  == 373f16d63bf36dcf6c5be36579a78740
  || 385cac0096364cd1168d80272fce6db4
import  -/  Data.Array.Accelerate.Classes.Floating 78c7950257cd37d694096876cf1b7382
  exports: 691d74993cefe4e7a712f639003341ed
  Floating c6033b504a6fb428fc9d28610d2d2d7f
import  -/  Data.Array.Accelerate.Classes.FromIntegral c06fea6ff5a7af191d75e7f95b36e541
  exports: bc5520e986a7e20fd2601829537ce128
  FromIntegral a95a2a699889c53924901c0ef834b946
  fromIntegral 9dddad050c551c7877d059293b3447c7
import  -/  Data.Array.Accelerate.Classes.Num 5830cb8ce2e6617e88ff07c7f188117f
  exports: 00b7c9e56019df3c44ef51ed8ebd4236
import  -/  Data.Array.Accelerate.Classes.Ord 838718467444fc3520e0ce057ae54e2a
  exports: 73bb94b1a06727c01aa4a74d6dab52ae
  < fb7363126baf54c55879edf3cf13ee03
  max b4116308dc1a98308e130ad57bba074e
  min bc752925f0b7e3e6736f85d788823e2c
import  -/  Data.Array.Accelerate.Classes.RealFrac 635f73a58c448925b4c50a5549aef363
  exports: bc0bd8373c36b6f0fc6e3cad9fd62605
  RealFrac 8c38af9b18db29070016e914e4775842
import  -/  Data.Array.Accelerate.Data.Bits 555bc4d2947ea186b9f9abd621c5aabb
  exports: 1237bf55563f9cc07ee899455862cfd7
  .&. 2468150f6ddfb6edc30d3e3285186e30
  .|. 62ea574b7d6f576a6c083fed0774bdfb
  complement 9744a9aa2f7cb6489b1b06b62e565d39
  testBit 07f4ede966e133b9eeb3f23a182b9394
  unsafeShiftL 60f8298ea702456186e4988eba7d3a68
  unsafeShiftR bba2755959dcfef3f1e7eaf8e73a3b29
import  -/  Data.Array.Accelerate.Error 9ed2d4a71009d558f562e118e9d36a23
  exports: f46a01ad5e78f9618f7a91c4ba90bc31
  Internal 354d17f13fa8c5b135052bcadc13dc67
  call 95bf4b02947c8c3e282c15050c022fa9
  internalError aa331c50846093a3a39d2946a445c28d
  message 43164dbb4cecc9911948fd9ecaf0a042
import  -/  Data.Array.Accelerate.Smart c6a471aeed497009ce791e94dc05d100
  exports: 1e3a20050ce25466608a82a26d24d5f0
  Cond 4628c12b51c834347b1c399b590eac59
  Exp 2fd934232a7ed8f151cd01d9504e7b9f
  Exp dff601899922d9e86e5ab6941dfbac5f
  While cfa001692d2530a211574d427e1300f3
  constant 8196d527ad9044191643ad6b39858685
  mkAtan2 53c904fd37f6366f16a84c7c67f9ed0d
  mkIsInfinite 5dc349ca160dbc1307207583cba4e5ba
  mkIsNaN b56d5ba44967e56e430f6b95eabaeb59
  mkUnsafeCoerce c7ecef85b962969ccc756d5581e1700a
  tup2 c501dd227fe5d3d61a446c8db6829c7a
  tup3 ebdb68a7e81c25436d21dfab0bff78b9
  tup4 7fd6bd9fbfcf14fc073d36e695729f7d
  untup2 751a423afd0ba14775d3a5cf0fe0a975
  untup3 a872de1aa1e286d98d4e71dcdc0df473
  untup4 cb63a01d60f4388f017c9803c0e2b1d6
import  -/  Data.Array.Accelerate.Type a1c7885f4a79193eaa1f192a9acbec78
  exports: 7aad7ca015788892b1349ebab929b71f
import  -/  base-4.9.1.0:Foreign.C.Types bf568ee9a3ec4aa42333a0da5f4345de
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Float 33e2b9ffe427edd6a5c2fd6a3b26703c
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Word 2f8cb4e909eeef2f95e1563807dd9268
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.Printf 6701574960cd2af960fec5d940be0c25
3f9964bf25d3929ae37d4e40bbf10c80
  $dmencodeFloat ::
    (Data.Array.Accelerate.Classes.RealFloat.RealFloat a,
     Data.Array.Accelerate.Classes.FromIntegral.FromIntegral
       GHC.Types.Int a,
     Data.Array.Accelerate.Classes.FromIntegral.FromIntegral
       GHC.Int.Int64 a) =>
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <L,U(1*U,1*U,1*C1(U),A,A,A,A,A,A,A,A,A,A,A,A,A)><L,C(C1(U))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   (eta :: Data.Array.Accelerate.Classes.FromIntegral.FromIntegral
                             GHC.Types.Int a)
                   (eta1 :: Data.Array.Accelerate.Classes.FromIntegral.FromIntegral
                              GHC.Int.Int64 a) ->
                 let {
                   $d(%,%)1 :: Data.Array.Accelerate.Classes.Floating.Floating a
                   = Data.Array.Accelerate.Classes.RealFloat.$p2RealFloat
                       @ a
                       $dRealFloat
                 } in
                 let {
                   $dFloating :: GHC.Float.Floating
                                   (Data.Array.Accelerate.Smart.Exp a)
                   = GHC.Classes.$p2(%,%)
                       @ (Data.Array.Accelerate.Classes.Fractional.Fractional a)
                       @ (GHC.Float.Floating (Data.Array.Accelerate.Smart.Exp a))
                       $d(%,%)1
                 } in
                 let {
                   $dRealFrac :: Data.Array.Accelerate.Classes.RealFrac.RealFrac a
                   = Data.Array.Accelerate.Classes.RealFloat.$p1RealFloat
                       @ a
                       $dRealFloat
                 } in
                 let {
                   $d(%,,%)2 :: Data.Array.Accelerate.Classes.Real.Real a
                   = Data.Array.Accelerate.Classes.RealFrac.$p1RealFrac @ a $dRealFrac
                 } in
                 let {
                   $d(%,%)2 :: Data.Array.Accelerate.Classes.Num.Num a
                   = GHC.Classes.$p1(%,,%)
                       @ (Data.Array.Accelerate.Classes.Num.Num a)
                       @ (Data.Array.Accelerate.Classes.Ord.Ord a)
                       @ (GHC.Real.Real (Data.Array.Accelerate.Smart.Exp a))
                       $d(%,,%)2
                 } in
                 let {
                   $dNum :: GHC.Num.Num (Data.Array.Accelerate.Smart.Exp a)
                   = GHC.Classes.$p2(%,%)
                       @ (Data.Array.Accelerate.Array.Sugar.Elt a)
                       @ (GHC.Num.Num (Data.Array.Accelerate.Smart.Exp a))
                       $d(%,%)2
                 } in
                 let {
                   loc3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#)
                 } in
                 let {
                   loc4 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "Data.Array.Accelerate.Classes.RealFloat"#)
                 } in
                 let {
                   loc5 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "./Data/Array/Accelerate/Classes/RealFloat.hs"#)
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 73#
                 } in
                 let {
                   loc7 :: GHC.Types.Int = GHC.Types.I# 65#
                 } in
                 let {
                   loc8 :: GHC.Types.Int = GHC.Types.I# 73#
                 } in
                 let {
                   loc9 :: GHC.Types.Int = GHC.Types.I# 74#
                 } in
                 let {
                   $dIP3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP4 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc3 loc4 loc5 loc6 loc7 loc8 loc9
                 } in
                 let {
                   $dIP5 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP3
                       $dIP4
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 let {
                   $d(%,%)3 :: Data.Array.Accelerate.Classes.Num.Num GHC.Int.Int64
                   = (Data.Array.Accelerate.Array.Sugar.$fEltInt64,
                      Data.Array.Accelerate.Classes.Num.$fNumExp16)
                 } in
                 let {
                   $d(%,,%)3 :: Data.Array.Accelerate.Classes.Real.Real GHC.Int.Int64
                   = ($d(%,%)3, Data.Array.Accelerate.Classes.Ord.$fOrdInt64,
                      Data.Array.Accelerate.Classes.Integral.$fIntegralExp12_$s$fRealExp)
                 } in
                 let {
                   $d(%,,%)4 :: Data.Array.Accelerate.Classes.Integral.Integral
                                  GHC.Int.Int64
                   = (Data.Array.Accelerate.Classes.Enum.$fEnumExp @ GHC.Int.Int64,
                      $d(%,,%)3, Data.Array.Accelerate.Classes.Integral.$fIntegralExp12)
                 } in
                 \ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (e :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 GHC.Num.*
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   $dNum
                   (eta1
                      `cast`
                    (Data.Array.Accelerate.Classes.FromIntegral.N:FromIntegral[0]
                         <GHC.Int.Int64>_N <a>_N)
                      $d(%,,%)4
                      x)
                   (GHC.Float.**
                      @ (Data.Array.Accelerate.Smart.Exp a)
                      $dFloating
                      (eta1
                         `cast`
                       (Data.Array.Accelerate.Classes.FromIntegral.N:FromIntegral[0]
                            <GHC.Int.Int64>_N <a>_N)
                         $d(%,,%)4
                         (Data.Array.Accelerate.Classes.RealFloat.floatRadix
                            @ a
                            $dRealFloat
                            (GHC.Err.undefined
                               @ 'GHC.Types.PtrRepLifted
                               @ (Data.Array.Accelerate.Smart.Exp a)
                               $dIP5
                                 `cast`
                               (Sym (GHC.Classes.N:IP[0]
                                         <"callStack">_N <GHC.Stack.Types.CallStack>_N)))))
                      (eta
                         `cast`
                       (Data.Array.Accelerate.Classes.FromIntegral.N:FromIntegral[0]
                            <GHC.Types.Int>_N <a>_N)
                         Data.Array.Accelerate.Classes.RealFloat.$dmencodeFloat1
                         e))) -}
382c1e6d0911904206c0eac4d142fcfc
  $dmencodeFloat1 ::
    Data.Array.Accelerate.Classes.Integral.Integral GHC.Types.Int
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.Enum.$fEnumExp
                    @ GHC.Types.Int,
                  Data.Array.Accelerate.Classes.RealFloat.$dmencodeFloat2,
                  Data.Array.Accelerate.Classes.Integral.$fIntegralExp16)) -}
196946adf8a6aadb1f8456c888bb44d9
  $dmencodeFloat2 ::
    Data.Array.Accelerate.Classes.Real.Real GHC.Types.Int
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$dmencodeFloat3,
                  Data.Array.Accelerate.Classes.Ord.$fOrdInt,
                  Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$s$fRealExp)) -}
75da6da561e92d0419638fbfd91b24b0
  $dmencodeFloat3 ::
    Data.Array.Accelerate.Classes.Num.Num GHC.Types.Int
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Array.Sugar.$fEltInt,
                  Data.Array.Accelerate.Classes.Num.$fNumExp20)) -}
25aa2a45bfc6b61b16b52d1189beff95
  $dmexponent ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2,
     Strictness: <L,U(A,A,A,1*C1(U),A,1*C1(U(U,U)),A,A,A,A,A,A,A,A,A,A)><L,U>m12,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   (x :: Data.Array.Accelerate.Smart.Exp a) ->
                 let {
                   ds :: (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
                          Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   = Data.Array.Accelerate.Classes.RealFloat.decodeFloat
                       @ a
                       $dRealFloat
                       x
                 } in
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Data.Array.Accelerate.Smart.PreExp
                        Data.Array.Accelerate.Smart.Acc
                        Data.Array.Accelerate.Smart.Exp
                        GHC.Types.Int)
                   @ (Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (\ (tpl :: Data.Array.Accelerate.Smart.PreExp
                                Data.Array.Accelerate.Smart.Acc
                                Data.Array.Accelerate.Smart.Exp
                                GHC.Types.Int) ->
                    tpl)
                     `cast`
                   (<Data.Array.Accelerate.Smart.PreExp
                       Data.Array.Accelerate.Smart.Acc
                       Data.Array.Accelerate.Smart.Exp
                       GHC.Types.Int>_R
                    ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                      (Data.Array.Accelerate.Classes.Eq.$fEqInt64_$c==
                         (case ds of wild { (,) m n -> m })
                         (Data.Array.Accelerate.Classes.Num.$fNumExp16_$cfromInteger 0))
                      (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0)
                      (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                         (case ds of wild { (,) m n -> n })
                         (Data.Array.Accelerate.Classes.RealFloat.floatDigits
                            @ a
                            $dRealFloat
                            x)))) -}
5b1c4da9965b28207c101486385d99a9
  $dmfloatDigits ::
    (Data.Array.Accelerate.Classes.RealFloat.RealFloat a,
     GHC.Float.RealFloat a) =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2,
     Strictness: <L,A><L,1*U(A,A,A,1*C1(U(U)),A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   ($dRealFloat1 :: GHC.Float.RealFloat a) ->
                 let {
                   loc3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#)
                 } in
                 let {
                   loc4 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "Data.Array.Accelerate.Classes.RealFloat"#)
                 } in
                 let {
                   loc5 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "./Data/Array/Accelerate/Classes/RealFloat.hs"#)
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 56#
                 } in
                 let {
                   loc7 :: GHC.Types.Int = GHC.Types.I# 46#
                 } in
                 let {
                   loc8 :: GHC.Types.Int = GHC.Types.I# 56#
                 } in
                 let {
                   loc9 :: GHC.Types.Int = GHC.Types.I# 55#
                 } in
                 let {
                   $dIP3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP4 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc3 loc4 loc5 loc6 loc7 loc8 loc9
                 } in
                 let {
                   $dIP5 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP3
                       $dIP4
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 \ (ds :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Smart.constant
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (GHC.Float.floatDigits
                      @ a
                      $dRealFloat1
                      (GHC.Err.undefined
                         @ 'GHC.Types.PtrRepLifted
                         @ a
                         $dIP5
                           `cast`
                         (Sym (GHC.Classes.N:IP[0]
                                   <"callStack">_N <GHC.Stack.Types.CallStack>_N))))) -}
33959a51ff1c326a2ac08150c769fb73
  $dmfloatRadix ::
    (Data.Array.Accelerate.Classes.RealFloat.RealFloat a,
     GHC.Float.RealFloat a) =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2,
     Strictness: <L,A><L,1*U(A,A,1*C1(U),A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   ($dRealFloat1 :: GHC.Float.RealFloat a) ->
                 let {
                   loc3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#)
                 } in
                 let {
                   loc4 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "Data.Array.Accelerate.Classes.RealFloat"#)
                 } in
                 let {
                   loc5 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "./Data/Array/Accelerate/Classes/RealFloat.hs"#)
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 51#
                 } in
                 let {
                   loc7 :: GHC.Types.Int = GHC.Types.I# 50#
                 } in
                 let {
                   loc8 :: GHC.Types.Int = GHC.Types.I# 51#
                 } in
                 let {
                   loc9 :: GHC.Types.Int = GHC.Types.I# 59#
                 } in
                 let {
                   $dIP3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP4 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc3 loc4 loc5 loc6 loc7 loc8 loc9
                 } in
                 let {
                   $dIP5 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP3
                       $dIP4
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 \ (ds :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.Num.$fNumExp16_$cfromInteger
                   (GHC.Float.floatRadix
                      @ a
                      $dRealFloat1
                      (GHC.Err.undefined
                         @ 'GHC.Types.PtrRepLifted
                         @ a
                         $dIP5
                           `cast`
                         (Sym (GHC.Classes.N:IP[0]
                                   <"callStack">_N <GHC.Stack.Types.CallStack>_N))))) -}
cef5d2ef9bbea61f049ee8a374d39f97
  $dmfloatRange ::
    (Data.Array.Accelerate.Classes.RealFloat.RealFloat a,
     GHC.Float.RealFloat a) =>
    Data.Array.Accelerate.Smart.Exp a
    -> (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 3,
     Strictness: <L,A><L,1*U(A,A,A,A,1*C1(U(U,U)),A,A,A,A,A,A,A,A,A,A,A)><L,A>m,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   ($dRealFloat1 :: GHC.Float.RealFloat a)
                   (ds :: Data.Array.Accelerate.Smart.Exp a) ->
                 let {
                   ds1 :: (GHC.Types.Int, GHC.Types.Int)
                   = GHC.Float.floatRange
                       @ a
                       $dRealFloat1
                       (GHC.Err.undefined
                          @ 'GHC.Types.PtrRepLifted
                          @ a
                          (GHC.Stack.Types.PushCallStack
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#))
                             (GHC.Stack.Types.SrcLoc
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b
                                      "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#))
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b
                                      "Data.Array.Accelerate.Classes.RealFloat"#))
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b ->
                                    GHC.CString.unpackFoldrCString#
                                      @ b
                                      "./Data/Array/Accelerate/Classes/RealFloat.hs"#))
                                (GHC.Types.I# 61#)
                                (GHC.Types.I# 47#)
                                (GHC.Types.I# 61#)
                                (GHC.Types.I# 56#))
                             GHC.Stack.Types.EmptyCallStack)
                            `cast`
                          (Sym (GHC.Classes.N:IP[0]
                                    <"callStack">_N <GHC.Stack.Types.CallStack>_N)))
                 } in
                 (Data.Array.Accelerate.Smart.constant
                    @ GHC.Types.Int
                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                    (case ds1 of wild { (,) m n -> m }),
                  Data.Array.Accelerate.Smart.constant
                    @ GHC.Types.Int
                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                    (case ds1 of wild { (,) m n -> n }))) -}
bc3786333cac85913fae8ab2ab90c895
  $dmisIEEE ::
    (Data.Array.Accelerate.Classes.RealFloat.RealFloat a,
     GHC.Float.RealFloat a) =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   ($dRealFloat1 :: GHC.Float.RealFloat a) ->
                 let {
                   loc3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#)
                 } in
                 let {
                   loc4 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "Data.Array.Accelerate.Classes.RealFloat"#)
                 } in
                 let {
                   loc5 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b ->
                        GHC.CString.unpackFoldrCString#
                          @ b
                          "./Data/Array/Accelerate/Classes/RealFloat.hs"#)
                 } in
                 let {
                   loc6 :: GHC.Types.Int = GHC.Types.I# 119#
                 } in
                 let {
                   loc7 :: GHC.Types.Int = GHC.Types.I# 41#
                 } in
                 let {
                   loc8 :: GHC.Types.Int = GHC.Types.I# 119#
                 } in
                 let {
                   loc9 :: GHC.Types.Int = GHC.Types.I# 50#
                 } in
                 let {
                   $dIP3 :: [GHC.Types.Char]
                   = GHC.Base.build
                       @ GHC.Types.Char
                       (\ @ b -> GHC.CString.unpackFoldrCString# @ b "undefined"#)
                 } in
                 let {
                   $dIP4 :: GHC.Stack.Types.SrcLoc
                   = GHC.Stack.Types.SrcLoc loc3 loc4 loc5 loc6 loc7 loc8 loc9
                 } in
                 let {
                   $dIP5 :: GHC.Stack.Types.CallStack
                   = GHC.Stack.Types.PushCallStack
                       $dIP3
                       $dIP4
                       GHC.Stack.Types.EmptyCallStack
                 } in
                 \ (ds :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Smart.constant
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (GHC.Float.$fRealFloatFloat_$cisIEEE
                      (GHC.Err.undefined
                         @ 'GHC.Types.PtrRepLifted
                         @ GHC.Types.Float
                         $dIP5
                           `cast`
                         (Sym (GHC.Classes.N:IP[0]
                                   <"callStack">_N <GHC.Stack.Types.CallStack>_N))))) -}
fca70dfc4dfc258ff2515396fa693ed9
  $dmscaleFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <L,U(1*U,A,A,1*C1(U),1*C1(U(U,U)),1*C1(U(U,U)),1*C1(C1(U)),A,A,A,1*C1(U),1*C1(U),A,A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 let {
                   $dRealFrac :: Data.Array.Accelerate.Classes.RealFrac.RealFrac a
                   = Data.Array.Accelerate.Classes.RealFloat.$p1RealFloat
                       @ a
                       $dRealFloat
                 } in
                 let {
                   $d(%,,%)2 :: Data.Array.Accelerate.Classes.Real.Real a
                   = Data.Array.Accelerate.Classes.RealFrac.$p1RealFrac @ a $dRealFrac
                 } in
                 let {
                   $d(%,%)1 :: Data.Array.Accelerate.Classes.Num.Num a
                   = GHC.Classes.$p1(%,,%)
                       @ (Data.Array.Accelerate.Classes.Num.Num a)
                       @ (Data.Array.Accelerate.Classes.Ord.Ord a)
                       @ (GHC.Real.Real (Data.Array.Accelerate.Smart.Exp a))
                       $d(%,,%)2
                 } in
                 let {
                   ds :: (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
                          Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   = Data.Array.Accelerate.Classes.RealFloat.floatRange
                       @ a
                       $dRealFloat
                       eta1
                 } in
                 let {
                   ds1 :: (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
                           Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   = Data.Array.Accelerate.Classes.RealFloat.decodeFloat
                       @ a
                       $dRealFloat
                       eta1
                 } in
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Data.Array.Accelerate.Smart.PreExp
                        Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a)
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   (\ (tpl :: Data.Array.Accelerate.Smart.PreExp
                                Data.Array.Accelerate.Smart.Acc
                                Data.Array.Accelerate.Smart.Exp
                                a) ->
                    tpl)
                     `cast`
                   (<Data.Array.Accelerate.Smart.PreExp
                       Data.Array.Accelerate.Smart.Acc
                       Data.Array.Accelerate.Smart.Exp
                       a>_R
                    ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <a>_N)
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.Array.Accelerate.Smart.Exp a)
                      @ (Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc Data.Array.Accelerate.Smart.Exp a)
                      (Data.Array.Accelerate.Smart.Cond
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ a
                         (GHC.Classes.$p1(%,%)
                            @ (Data.Array.Accelerate.Array.Sugar.Elt a)
                            @ (GHC.Num.Num (Data.Array.Accelerate.Smart.Exp a))
                            $d(%,%)1)
                         (Data.Array.Accelerate.Classes.Eq.||
                            (Data.Array.Accelerate.Classes.Eq.$fEqInt_$c==
                               eta
                               (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0))
                            (Data.Array.Accelerate.Classes.Eq.||
                               (Data.Array.Accelerate.Classes.Eq.==
                                  @ a
                                  (Data.Array.Accelerate.Classes.Ord.$p1Ord
                                     @ a
                                     (GHC.Classes.$p2(%,,%)
                                        @ (Data.Array.Accelerate.Classes.Num.Num a)
                                        @ (Data.Array.Accelerate.Classes.Ord.Ord a)
                                        @ (GHC.Real.Real (Data.Array.Accelerate.Smart.Exp a))
                                        $d(%,,%)2))
                                  eta1
                                  (GHC.Num.fromInteger
                                     @ (Data.Array.Accelerate.Smart.Exp a)
                                     (GHC.Classes.$p2(%,%)
                                        @ (Data.Array.Accelerate.Array.Sugar.Elt a)
                                        @ (GHC.Num.Num (Data.Array.Accelerate.Smart.Exp a))
                                        $d(%,%)1)
                                     0))
                               (Data.Array.Accelerate.Classes.Eq.||
                                  (Data.Array.Accelerate.Classes.RealFloat.isNaN
                                     @ a
                                     $dRealFloat
                                     eta1)
                                  (Data.Array.Accelerate.Classes.RealFloat.isInfinite
                                     @ a
                                     $dRealFloat
                                     eta1))))
                         eta1)
                      (Data.Array.Accelerate.Classes.RealFloat.encodeFloat
                         @ a
                         $dRealFloat
                         (case ds1 of wild { (,) m n -> m })
                         (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                            (case ds1 of wild { (,) m n -> n })
                            (let {
                               bd :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                               = Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                                   (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c-
                                      (case ds of wild { (,) l h -> h })
                                      (case ds of wild { (,) l h -> l }))
                                   (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c*
                                      (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 4)
                                      (Data.Array.Accelerate.Classes.RealFloat.floatDigits
                                         @ a
                                         $dRealFloat
                                         eta1))
                             } in
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_$cmax
                               (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cnegate bd)
                               (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$cmin bd eta)))))) -}
3b15cf11cbb96eee08fbf9a962713795
  $dmsignificand ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(C(S))LLLLLLLLL),U(A,A,A,1*C1(U),A,1*C1(U(1*U,A)),1*C1(C1(U)),A,A,A,A,A,A,A,A,A)><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a)
                   (x :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.RealFloat.encodeFloat
                   @ a
                   $dRealFloat
                   (case Data.Array.Accelerate.Classes.RealFloat.decodeFloat
                           @ a
                           $dRealFloat
                           x of wild { (,) m ds ->
                    m })
                   (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cnegate
                      (Data.Array.Accelerate.Classes.RealFloat.floatDigits
                         @ a
                         $dRealFloat
                         x))) -}
00ef28e1ee85ae838321e71004da4dc0
  $fRealFloatCDouble ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat
      Foreign.C.Types.CDouble
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CDouble
                  Data.Array.Accelerate.Classes.RealFrac.$fRealFracCDouble
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cp2RealFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cfloatRadix
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cfloatDigits
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cfloatRange
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cdecodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cencodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cexponent
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$csignificand
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cscaleFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cisNaN
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cisInfinite
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cisDenormalized
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cisNegativeZero
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$cisIEEE
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$catan2 -}
af3972e73ff8523081d4c754be29ef63
  $fRealFloatCDouble1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CDouble
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_lvl196
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
6a655c52b7509a086431b0a68c58ae3b
  $fRealFloatCDouble10 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble11) -}
178380f1d0935bbfd1966c96cdcd519c
  $fRealFloatCDouble11 :: GHC.Word.Word16
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W16# 0##) -}
6ad82005da25ebf6d071d8a380cf099f
  $fRealFloatCDouble12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word16
                               @ GHC.Word.Word64
                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                               Data.Array.Accelerate.Array.Sugar.$fEltWord16
                               Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble17
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word64
                                  @ (GHC.Word.Word64, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl7
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Word.Word64, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Word.Word64), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Word.Word64)
                                        @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Word.Word64)
                                           @ GHC.Word.Word64
                                           @ ()
                                           @~ <((), GHC.Word.Word64)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           x)
                                        Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble15
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble13
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
060f2ac6a296b838dfeadb0fa1a4d349
  $fRealFloatCDouble13 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble14) -}
8cbd1fcccd46aa42e06a4af0c0a4c6bf
  $fRealFloatCDouble14 :: GHC.Word.Word16
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W16# 2047##) -}
4fe28067960acd9ffbb5fea6188c1e09
  $fRealFloatCDouble15 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble16) -}
dab25b8630491c0d22bcb812181ace55
  $fRealFloatCDouble16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 52#) -}
05dc0e58ca2f9a506eb5c85708ed9711
  $fRealFloatCDouble17 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word64 -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimFromIntegral
                   @ (GHC.Word.Word64 -> GHC.Word.Word16)
                   @ GHC.Word.Word64
                   @ GHC.Word.Word16
                   @~ <GHC.Word.Word64 -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType
                   Data.Array.Accelerate.Type.$fIsNumWord16_$cnumType) -}
1017730d6969a4ae9f34d8c9eb311a8d
  $fRealFloatCDouble18 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble19) -}
8a0a5d1e070462b4b7245dd603ea54d0
  $fRealFloatCDouble19 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 63#) -}
82d16c53e9077763a88239d78b8a976f
  $fRealFloatCDouble2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble3) -}
ae5a24d9b1ffd526c685ae5731bbfe4a
  $fRealFloatCDouble20 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble21
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word64
                      @ Foreign.C.Types.CDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltWord64
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (Foreign.C.Types.CDouble -> GHC.Word.Word64)
                         @ Foreign.C.Types.CDouble
                         @ GHC.Word.Word64
                         @~ <Foreign.C.Types.CDouble -> GHC.Word.Word64>_N
                         Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
a539c4a730c9500646ca3cbbeb15dc4e
  $fRealFloatCDouble21 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLAnd
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Bool
                               @ (GHC.Word.Word64, GHC.Word.Word64)
                               Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl196
                               Data.Array.Accelerate.Array.Sugar.$fEltBool
                               Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl1
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Word.Word64, GHC.Word.Word64)
                                  Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl196
                                  Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl199
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Word.Word64), GHC.Word.Word64)
                                     @ GHC.Word.Word64
                                     @ ((), GHC.Word.Word64)
                                     @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Word.Word64)
                                        @ GHC.Word.Word64
                                        @ ()
                                        @~ <((), GHC.Word.Word64)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Word.Word64
                                           @ (GHC.Word.Word64, GHC.Word.Word64)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                           Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl198
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Word.Word64, GHC.Word.Word64)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Word.Word64), GHC.Word.Word64)
                                                 @ GHC.Word.Word64
                                                 @ ((), GHC.Word.Word64)
                                                 @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Word.Word64)
                                                    @ GHC.Word.Word64
                                                    @ ()
                                                    @~ <((), GHC.Word.Word64)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    x)
                                                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble8
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Word.Word64>_N
                                                           <GHC.Word.Word64>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                         GHC.Word.Word64)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble6
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                             GHC.Word.Word64)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Bool
                            @ (GHC.Word.Word16, GHC.Word.Word16)
                            Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl198
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Word.Word16, GHC.Word.Word16)
                               Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl196
                               Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Word.Word16), GHC.Word.Word16)
                                  @ GHC.Word.Word16
                                  @ ((), GHC.Word.Word16)
                                  @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ ((), GHC.Word.Word16)
                                     @ GHC.Word.Word16
                                     @ ()
                                     @~ <((), GHC.Word.Word16)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                        @ Data.Array.Accelerate.Smart.Exp)
                                     (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble12
                                        x)
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble10
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                          GHC.Word.Word16)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
7f4f1914dad59c443af83ce33395e5f4
  $fRealFloatCDouble22 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ Foreign.C.Types.CDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsInfinite
                      @ (Foreign.C.Types.CDouble -> GHC.Types.Bool)
                      @ Foreign.C.Types.CDouble
                      @~ <Foreign.C.Types.CDouble -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingCDouble_$cfloatingType)
                   x) -}
d15abd61684992f9a6b0c9de3c817e7f
  $fRealFloatCDouble23 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ Foreign.C.Types.CDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsNaN
                      @ (Foreign.C.Types.CDouble -> GHC.Types.Bool)
                      @ Foreign.C.Types.CDouble
                      @~ <Foreign.C.Types.CDouble -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingCDouble_$cfloatingType)
                   x) -}
f991e3a92776ac322ddae71656791768
  $fRealFloatCDouble24 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cscaleFloat
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CDouble
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
ab47404a08d1eb894feb6c18b41d8eae
  $fRealFloatCDouble25 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
0d3ce4cc12c4c275b654c2418d11da6f
  $fRealFloatCDouble26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble27
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
e110e04da8942cfcc91b3bced0759289
  $fRealFloatCDouble27 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble28
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
e71426110f00aa2116d7bdaf9abcd05f
  $fRealFloatCDouble28 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble36
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
b637856c972551a47fec12252e138060
  $fRealFloatCDouble29 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl198
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
72ebb4f912caf7028f881cd105a80a5d
  $fRealFloatCDouble3 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   GHC.Types.True) -}
e463b6ad9a44eb43d1204cccfa2026f5
  $fRealFloatCDouble30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble31
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
15761b5ce92269960b4336e76455ce95
  $fRealFloatCDouble31 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble33
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble32
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
4c3f30b780f478fabfc4a6b0d0d4c086
  $fRealFloatCDouble32 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Float.$fRealFloatDouble4) -}
e082ab1ab1255ff498fc3b8c76b24a40
  $fRealFloatCDouble33 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble34
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
88fd0c0fab96ad776dc0091350208563
  $fRealFloatCDouble34 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble35) -}
27308f9faa86c4e5f3ed50e3ca031fe7
  $fRealFloatCDouble35 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
0081fa9074ca3f8a96b67d929c50bc83
  $fRealFloatCDouble36 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble37
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
2ce474ae511ba390213fce6788f0bfcf
  $fRealFloatCDouble37 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble38
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
ace745bf00524c0df30ce296ae7575f1
  $fRealFloatCDouble38 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble39
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
af923331da51e07af5df9761d01bba5e
  $fRealFloatCDouble39 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble41
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble40
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
1523b3f62768bf2a70f85866782d65e3
  $fRealFloatCDouble4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble5
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word64
                      @ Foreign.C.Types.CDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltWord64
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (Foreign.C.Types.CDouble -> GHC.Word.Word64)
                         @ Foreign.C.Types.CDouble
                         @ GHC.Word.Word64
                         @~ <Foreign.C.Types.CDouble -> GHC.Word.Word64>_N
                         Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
0c428d4b6d40532c5078f689d453bb25
  $fRealFloatCDouble40 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Float.$fRealFloatDouble3) -}
019f6fe7324ee76d36c238d2c0642a0e
  $fRealFloatCDouble41 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble42
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
1eedea758a3bd8deb7b53ec1e520e85f
  $fRealFloatCDouble42 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Float.$fRealFloatDouble2) -}
c11716633b0437521f1c98f786e2bda0
  $fRealFloatCDouble43 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble44
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
1d859861fb844d528dfb86752687044a
  $fRealFloatCDouble44 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble45
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
e354be53b69c4ce124589367a2832bb7
  $fRealFloatCDouble45 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Types.Int -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimNeg
                   @ (GHC.Types.Int -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <GHC.Types.Int -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsNumInt_$cnumType) -}
efb6c78788ec84b86adc46984bf97137
  $fRealFloatCDouble46 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (e :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CDouble
                   @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                   Data.Array.Accelerate.Classes.Num.$fNumExp_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Classes.Num.$fNumExp_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      Data.Array.Accelerate.Classes.Num.$fNumExp_lvl196
                      Data.Array.Accelerate.Classes.Num.$fNumExp_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                         @ Foreign.C.Types.CDouble
                         @ ((), Foreign.C.Types.CDouble)
                         @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CDouble)
                            @ Foreign.C.Types.CDouble
                            @ ()
                            @~ <((), Foreign.C.Types.CDouble)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralInt64CDouble2
                               x)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CDouble
                            @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp_lvl1
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp_lvl196
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)
                                  @ Foreign.C.Types.CDouble
                                  @ ((), Foreign.C.Types.CDouble)
                                  @~ <(((), Foreign.C.Types.CDouble), Foreign.C.Types.CDouble)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble47
                                  (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralIntCDouble2
                                     e)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <Foreign.C.Types.CDouble>_N
                                            <Foreign.C.Types.CDouble>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                          Foreign.C.Types.CDouble)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CDouble>_N <Foreign.C.Types.CDouble>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                 Foreign.C.Types.CDouble)>_N)) -}
5b8f1c2057fe025f3490a6a1ab37a6ff
  $fRealFloatCDouble47 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CDouble)
                   @ Foreign.C.Types.CDouble
                   @ ()
                   @~ <((), Foreign.C.Types.CDouble)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble48
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N)) -}
91a385db8d6329bb1d76a24ea69e41fe
  $fRealFloatCDouble48 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CDouble
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CDouble
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble51
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
bc0e8d3db634213902590b5ea4be70fd
  $fRealFloatCDouble49 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble50) -}
dad3b08f4ab79fa4a17c81ce5ca64472
  $fRealFloatCDouble5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLAnd
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Data.Bits.$fBitsWord112
                               x
                               Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble18
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Bool
                            @ (GHC.Types.Bool, GHC.Types.Bool)
                            Data.Array.Accelerate.Smart.$s$fElt(,)
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.AST.$WPrimLAnd
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Types.Bool, GHC.Types.Bool)
                               Data.Array.Accelerate.Smart.$s$fElt(,)
                               Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                  @ GHC.Types.Bool
                                  @ ((), GHC.Types.Bool)
                                  @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ ((), GHC.Types.Bool)
                                     @ GHC.Types.Bool
                                     @ ()
                                     @~ <((), GHC.Types.Bool)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                        @ Data.Array.Accelerate.Smart.Exp)
                                     (Data.Array.Accelerate.Smart.PrimApp
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Types.Bool
                                        @ (GHC.Word.Word16, GHC.Word.Word16)
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl196
                                        Data.Array.Accelerate.Array.Sugar.$fEltBool
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl1
                                        (Data.Array.Accelerate.Smart.Tuple
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ (GHC.Word.Word16, GHC.Word.Word16)
                                           Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl196
                                           Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl199
                                           (Data.Array.Accelerate.Array.Sugar.SnocTup
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (((), GHC.Word.Word16), GHC.Word.Word16)
                                              @ GHC.Word.Word16
                                              @ ((), GHC.Word.Word16)
                                              @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                                              Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ ((), GHC.Word.Word16)
                                                 @ GHC.Word.Word16
                                                 @ ()
                                                 @~ <((), GHC.Word.Word16)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                                 (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                    @ Data.Array.Accelerate.Smart.Exp)
                                                 (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble12
                                                    x)
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                              Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble10
                                                `cast`
                                              (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                             `cast`
                                           (Data.Array.Accelerate.Array.Sugar.Tuple
                                              <Data.Array.Accelerate.Smart.Exp>_R
                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                        <GHC.Word.Word16>_N
                                                        <GHC.Word.Word16>_N)))_R)
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                                      GHC.Word.Word16)>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                  (Data.Array.Accelerate.Smart.PrimApp
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ GHC.Types.Bool
                                     @ (GHC.Word.Word64, GHC.Word.Word64)
                                     Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl196
                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                     Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl1
                                     (Data.Array.Accelerate.Smart.Tuple
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (GHC.Word.Word64, GHC.Word.Word64)
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl196
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl199
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ (((), GHC.Word.Word64), GHC.Word.Word64)
                                           @ GHC.Word.Word64
                                           @ ((), GHC.Word.Word64)
                                           @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                           (Data.Array.Accelerate.Array.Sugar.SnocTup
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ ((), GHC.Word.Word64)
                                              @ GHC.Word.Word64
                                              @ ()
                                              @~ <((), GHC.Word.Word64)>_N
                                              Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                              (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                 @ Data.Array.Accelerate.Smart.Exp)
                                              (Data.Array.Accelerate.Smart.PrimApp
                                                 @ Data.Array.Accelerate.Smart.Acc
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ GHC.Word.Word64
                                                 @ (GHC.Word.Word64, GHC.Word.Word64)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                                                 Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl198
                                                 (Data.Array.Accelerate.Smart.Tuple
                                                    @ Data.Array.Accelerate.Smart.Acc
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ (GHC.Word.Word64, GHC.Word.Word64)
                                                    Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                                                    Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                                                    (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                       @ Data.Array.Accelerate.Smart.Exp
                                                       @ (((), GHC.Word.Word64), GHC.Word.Word64)
                                                       @ GHC.Word.Word64
                                                       @ ((), GHC.Word.Word64)
                                                       @~ <(((), GHC.Word.Word64),
                                                            GHC.Word.Word64)>_N
                                                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                          @ Data.Array.Accelerate.Smart.Exp
                                                          @ ((), GHC.Word.Word64)
                                                          @ GHC.Word.Word64
                                                          @ ()
                                                          @~ <((), GHC.Word.Word64)>_N
                                                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                                          (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                             @ Data.Array.Accelerate.Smart.Exp)
                                                          x)
                                                       Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble8
                                                         `cast`
                                                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                                      `cast`
                                                    (Data.Array.Accelerate.Array.Sugar.Tuple
                                                       <Data.Array.Accelerate.Smart.Exp>_R
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                 <GHC.Word.Word64>_N
                                                                 <GHC.Word.Word64>_N)))_R)
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                               GHC.Word.Word64)>_N))
                                                `cast`
                                              (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                           Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble6
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                          `cast`
                                        (Data.Array.Accelerate.Array.Sugar.Tuple
                                           <Data.Array.Accelerate.Smart.Exp>_R
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                     <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                   GHC.Word.Word64)>_N))
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                          GHC.Types.Bool)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
b60acb6d47961fcfa4babf4460763344
  $fRealFloatCDouble50 :: GHC.Int.Int64
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I64# 2#) -}
eb4ac3606807d77a895ebabe52300b27
  $fRealFloatCDouble51 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Int.Int64 -> Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimFromIntegral
                   @ (GHC.Int.Int64 -> Foreign.C.Types.CDouble)
                   @ GHC.Int.Int64
                   @ Foreign.C.Types.CDouble
                   @~ <GHC.Int.Int64 -> Foreign.C.Types.CDouble>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType
                   Data.Array.Accelerate.Type.$fIsNumCDouble_$cnumType) -}
d3b3be2693ec5796f884c46c194a2274
  $fRealFloatCDouble52 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CDouble -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CDouble -> GHC.Word.Word64)
                   @ Foreign.C.Types.CDouble
                   @ GHC.Word.Word64
                   @~ <Foreign.C.Types.CDouble -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
4d6826ad4514cf9470f0c3eb4adb6966
  $fRealFloatCDouble53 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CDouble -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsInfinite
                   @ (Foreign.C.Types.CDouble -> GHC.Types.Bool)
                   @ Foreign.C.Types.CDouble
                   @~ <Foreign.C.Types.CDouble -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingCDouble_$cfloatingType) -}
ef9ed733f6c7d5110c6a36a0736f5202
  $fRealFloatCDouble54 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CDouble -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsNaN
                   @ (Foreign.C.Types.CDouble -> GHC.Types.Bool)
                   @ Foreign.C.Types.CDouble
                   @~ <Foreign.C.Types.CDouble -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingCDouble_$cfloatingType) -}
f95f0ee379e7fbd4bf4b625cc3de34cf
  $fRealFloatCDouble55 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CDouble
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble56
                     `cast`
                   (Sym (Foreign.C.Types.N:CDouble[0]))) -}
660229b6ff100f1c888af024e6181550
  $fRealFloatCDouble56 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
c3653e96158b06782427051f5fe4db64
  $fRealFloatCDouble57 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble58) -}
48e072d2d376b916b1a8cf00b72fa902
  $fRealFloatCDouble58 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
6518c5d7fadea982ecc5291666a4be64
  $fRealFloatCDouble59 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CDouble
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble46
                   (Data.Array.Accelerate.Smart.Prj
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int64
                      @ (GHC.Int.Int64, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                      (Data.Array.Accelerate.Smart.tix1
                         @ ()
                         @ GHC.Int.Int64
                         @ GHC.Types.Int)
                        `cast`
                      (Data.Array.Accelerate.Product.TupleIdx
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                         <GHC.Int.Int64>_N)_R
                      (case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f64_decode
                              (Data.Array.Accelerate.Smart.PrimApp
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ GHC.Word.Word64
                                 @ Foreign.C.Types.CDouble
                                 Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                                 Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble52
                                 x)
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) of ww { (#,,#) ww1 ww2 ww3 ->
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          ww1
                          ww2
                          ww3)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Types.Int)>_N) }))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble60
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
a0240661ec7af874dfeb4205cbeaaf4e
  $fRealFloatCDouble6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble7) -}
62428f2cebc9678cc2c1fef621698bce
  $fRealFloatCDouble60 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble45
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble32
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
70e6da3a0fa838cbffad1a616bcad576
  $fRealFloatCDouble61 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble62) -}
2af32db46551f25e1fa326309eff1436
  $fRealFloatCDouble62 :: GHC.Int.Int64
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I64# 0#) -}
7608942e4f8f29bba45541f02f598a71
  $fRealFloatCDouble63 ::
    (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
     Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble40
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N),
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble42
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
51ddfd6a8b570252c9ee1e03f996edc4
  $fRealFloatCDouble64 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble32) -}
0fb1e069d82cff8a700660f95cdb72f2
  $fRealFloatCDouble65 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49) -}
f6bd1c9e142d9a14b36d80e8bb3ed9e8
  $fRealFloatCDouble66 ::
    Data.Array.Accelerate.Classes.Fractional.Fractional
      Foreign.C.Types.CDouble
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble67,
                  Data.Array.Accelerate.Classes.Fractional.$fFractionalExp)) -}
dddf6e33819c99d930e3b9dd2ca74cea
  $fRealFloatCDouble67 ::
    Data.Array.Accelerate.Classes.Num.Num Foreign.C.Types.CDouble
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Array.Sugar.$fEltCDouble,
                  Data.Array.Accelerate.Classes.Num.$fNumExp)) -}
0d9a15a2b5bc6cbba3155d5575cb679c
  $fRealFloatCDouble7 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W64# 0##) -}
0bf4de25bbbac838137c2b3d17cff7b7
  $fRealFloatCDouble8 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble9) -}
4b900e46b412a71dcb51e459c92c0ddb
  $fRealFloatCDouble9 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 4503599627370495##) -}
71fac26f5f9d93dcf8e24eb2b57a001b
  $fRealFloatCDouble_$catan2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N) -}
e4897cbbe78aa299b95f98d747cc5de1
  $fRealFloatCDouble_$cdecodeFloat ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int64, GHC.Types.Int)
                   = Data.Array.Accelerate.Classes.RealFloat.ieee754_f64_decode
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word64
                          @ Foreign.C.Types.CDouble
                          Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          (Data.Array.Accelerate.AST.PrimCoerce
                             @ (Foreign.C.Types.CDouble -> GHC.Word.Word64)
                             @ Foreign.C.Types.CDouble
                             @ GHC.Word.Word64
                             @~ <Foreign.C.Types.CDouble -> GHC.Word.Word64>_N
                             Data.Array.Accelerate.Type.$fIsScalarCDouble_$cscalarType
                             Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType)
                          x)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                 } in
                 ((Data.Array.Accelerate.Smart.Prj
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Int.Int64
                     @ (GHC.Int.Int64, GHC.Types.Int)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                     Data.Array.Accelerate.Array.Sugar.$fEltInt64
                     (Data.Array.Accelerate.Smart.tix1
                        @ ()
                        @ GHC.Int.Int64
                        @ GHC.Types.Int)
                       `cast`
                     (Data.Array.Accelerate.Product.TupleIdx
                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                  <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                        <GHC.Int.Int64>_N)_R
                     e)
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N),
                  (Data.Array.Accelerate.Smart.Prj
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Types.Int
                     @ (GHC.Int.Int64, GHC.Types.Int)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     (Data.Array.Accelerate.Product.$WZeroTupIdx
                        @ GHC.Types.Int
                        @ ((), GHC.Int.Int64))
                       `cast`
                     (Data.Array.Accelerate.Product.TupleIdx
                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                  <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                        <GHC.Types.Int>_N)_R
                     e)
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
646a3c8664687fc8448ad58de92b1af5
  $fRealFloatCDouble_$cencodeFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble46
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N) -}
84a4eb351ca391a5392b6bc76454b808
  $fRealFloatCDouble_$cexponent ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cexponent
                        w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Types.Int
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) }) -}
7815a44ec6168eb77744d5bc668a264f
  $fRealFloatCDouble_$cfloatDigits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble64
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
a0e2b790c0201d551aa398997c00301a
  $fRealFloatCDouble_$cfloatRadix ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble65
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
8718d0118c3db448854996aa04a33174
  $fRealFloatCDouble_$cfloatRange ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CDouble) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble63) -}
cfc3a5b258aa85786f07b97eb044e584
  $fRealFloatCDouble_$cisDenormalized ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
b4926c515eda79e82bad569f26ce6ffb
  $fRealFloatCDouble_$cisIEEE ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
5e7094834ef0798bd4ce9de12ba56041
  $fRealFloatCDouble_$cisInfinite ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble22
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
53c9ad38a8a52b2a00875d42eeeaa917
  $fRealFloatCDouble_$cisNaN ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble23
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
41922303337cc4b52c300eb065315946
  $fRealFloatCDouble_$cisNegativeZero ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
80f5df3da09cefdbff323c2cc0ad2ee1
  $fRealFloatCDouble_$cp2RealFloat ::
    Data.Array.Accelerate.Classes.Floating.Floating
      Foreign.C.Types.CDouble
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble66,
                  Data.Array.Accelerate.Classes.Floating.$fFloatingExp)) -}
5bd373476b81260d9c942314e4267f3d
  $fRealFloatCDouble_$cscaleFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble24
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N) -}
62201189ab17d6822b89170c13fdeea2
  $fRealFloatCDouble_$csignificand ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble59
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N) -}
b6886a1ed0d35d647ce2d84279cf5dc3
  $fRealFloatCDouble_$dElt2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int64
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
c4a5c93e7b7cc58aad540e6f8f1d1af4
  $fRealFloatCDouble_$dIsProduct ::
    Data.Array.Accelerate.Array.Sugar.IsTuple
      (GHC.Int.Int64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int64
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
061068010c985212d556f2d2352642cf
  $fRealFloatCDouble_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CDouble
                   @ Foreign.C.Types.CDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble) -}
72887d5599edf0fe3d6f6b5655b01c68
  $fRealFloatCDouble_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
       -> Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimAtan2
                   @ ((Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                      -> Foreign.C.Types.CDouble)
                   @ Foreign.C.Types.CDouble
                   @~ <(Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                       -> Foreign.C.Types.CDouble>_N
                   Data.Array.Accelerate.Type.$fIsFloatingCDouble_$cfloatingType) -}
64d0cd8cb24e16085d127dfb907e277c
  $fRealFloatCDouble_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CDouble
                   @ Foreign.C.Types.CDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltCDouble) -}
00ef28e1ee85ae838321e71004da4dc0
  $fRealFloatCFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat
      Foreign.C.Types.CFloat
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CFloat
                  Data.Array.Accelerate.Classes.RealFrac.$fRealFracCFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cp2RealFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cfloatRadix
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cfloatDigits
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cfloatRange
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cdecodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cencodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cexponent
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$csignificand
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cscaleFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cisNaN
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cisInfinite
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cisDenormalized
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cisNegativeZero
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$cisIEEE
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$catan2 -}
b255364fd422fb3be31c308221926b31
  $fRealFloatCFloat1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CFloat
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_lvl196
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
ad417d46ecf1127910fff6b799850f64
  $fRealFloatCFloat10 :: GHC.Word.Word8
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W8# 0##) -}
d88b74bcf48447b99c1d07877299bfb8
  $fRealFloatCFloat11 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat12) -}
802cc40136affd6da47733c0debc50c4
  $fRealFloatCFloat12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
0e203c0b5eb3b5e2c84c95f5603dac75
  $fRealFloatCFloat13 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word32 -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimFromIntegral
                   @ (GHC.Word.Word32 -> GHC.Word.Word8)
                   @ GHC.Word.Word32
                   @ GHC.Word.Word8
                   @~ <GHC.Word.Word32 -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType
                   Data.Array.Accelerate.Type.$fIsNumWord8_$cnumType) -}
763c863d2ec5fa1a2f15fa5e88dabc33
  $fRealFloatCFloat14 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat15) -}
d2f80036947aa9691366bf07f161dee7
  $fRealFloatCFloat15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 31#) -}
4056565c5ee34fad0f8c914daf8c0056
  $fRealFloatCFloat16 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat17
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word32
                      @ Foreign.C.Types.CFloat
                      Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                      Data.Array.Accelerate.Array.Sugar.$fEltWord32
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (Foreign.C.Types.CFloat -> GHC.Word.Word32)
                         @ Foreign.C.Types.CFloat
                         @ GHC.Word.Word32
                         @~ <Foreign.C.Types.CFloat -> GHC.Word.Word32>_N
                         Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
b08121441a6c4702ef3f2721138ba3ec
  $fRealFloatCFloat17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLAnd
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Bool
                               @ (GHC.Word.Word32, GHC.Word.Word32)
                               Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl196
                               Data.Array.Accelerate.Array.Sugar.$fEltBool
                               Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl1
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Word.Word32, GHC.Word.Word32)
                                  Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl196
                                  Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl199
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Word.Word32), GHC.Word.Word32)
                                     @ GHC.Word.Word32
                                     @ ((), GHC.Word.Word32)
                                     @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Word.Word32)
                                        @ GHC.Word.Word32
                                        @ ()
                                        @~ <((), GHC.Word.Word32)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Word.Word32
                                           @ (GHC.Word.Word32, GHC.Word.Word32)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                           Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl198
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Word.Word32, GHC.Word.Word32)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Word.Word32), GHC.Word.Word32)
                                                 @ GHC.Word.Word32
                                                 @ ((), GHC.Word.Word32)
                                                 @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Word.Word32)
                                                    @ GHC.Word.Word32
                                                    @ ()
                                                    @~ <((), GHC.Word.Word32)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    x)
                                                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat7
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Word.Word32>_N
                                                           <GHC.Word.Word32>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                         GHC.Word.Word32)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat5
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                             GHC.Word.Word32)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Bool
                            @ (GHC.Word.Word8, GHC.Word.Word8)
                            Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl198
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Word.Word8, GHC.Word.Word8)
                               Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl196
                               Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Word.Word8), GHC.Word.Word8)
                                  @ GHC.Word.Word8
                                  @ ((), GHC.Word.Word8)
                                  @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ ((), GHC.Word.Word8)
                                     @ GHC.Word.Word8
                                     @ ()
                                     @~ <((), GHC.Word.Word8)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                        @ Data.Array.Accelerate.Smart.Exp)
                                     (Data.Array.Accelerate.Smart.PrimApp
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Word.Word8
                                        @ GHC.Word.Word32
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                        Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat13
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Word.Word32
                                           @ (GHC.Word.Word32, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl7
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Word.Word32, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Word.Word32), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Word.Word32)
                                                 @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Word.Word32)
                                                    @ GHC.Word.Word32
                                                    @ ()
                                                    @~ <((), GHC.Word.Word32)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    x)
                                                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <GHC.Word.Word32>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat9
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                          GHC.Word.Word8)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
f3c338d909e86e42ae659c054b718c02
  $fRealFloatCFloat18 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ Foreign.C.Types.CFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsInfinite
                      @ (Foreign.C.Types.CFloat -> GHC.Types.Bool)
                      @ Foreign.C.Types.CFloat
                      @~ <Foreign.C.Types.CFloat -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingCFloat_$cfloatingType)
                   x) -}
f7ae805adbcdf04b44b0123c780f7526
  $fRealFloatCFloat19 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ Foreign.C.Types.CFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsNaN
                      @ (Foreign.C.Types.CFloat -> GHC.Types.Bool)
                      @ Foreign.C.Types.CFloat
                      @~ <Foreign.C.Types.CFloat -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingCFloat_$cfloatingType)
                   x) -}
54c5bd98ba4940d55713c134c055f81d
  $fRealFloatCFloat2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble3) -}
e12660248a62ca8d3c2a457cdcb488ca
  $fRealFloatCFloat20 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cscaleFloat1
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CFloat
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
dbade494bb8277e53c24b667c3ead0ca
  $fRealFloatCFloat21 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat22
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
a0b0e3f97867cee39ee95332ba59237b
  $fRealFloatCFloat22 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat23
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
542e23c8a4028f68291fa42d700e5f26
  $fRealFloatCFloat23 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat24
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
3a02af249a6c514dfc5eba68308d0b33
  $fRealFloatCFloat24 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat29
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
4c18500c35b1d3456de797b20a240e75
  $fRealFloatCFloat25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl198
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
033ad8a0fb465ca51d41dea4fbda2bce
  $fRealFloatCFloat26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat27
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
cac617e06452c7d89620ee7c35aae861
  $fRealFloatCFloat27 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble33
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
208e4ad0f2b0b2dc7e780050e389ef66
  $fRealFloatCFloat28 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Float.$fRealFloatFloat4) -}
63ca26bb0c82bf7c66ff85242e9e166d
  $fRealFloatCFloat29 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
86b974da7dff00de21a701a2b4fa36aa
  $fRealFloatCFloat3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat4
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word32
                      @ Foreign.C.Types.CFloat
                      Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                      Data.Array.Accelerate.Array.Sugar.$fEltWord32
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (Foreign.C.Types.CFloat -> GHC.Word.Word32)
                         @ Foreign.C.Types.CFloat
                         @ GHC.Word.Word32
                         @~ <Foreign.C.Types.CFloat -> GHC.Word.Word32>_N
                         Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
92da0aae50f08859a9377488367a7718
  $fRealFloatCFloat30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat31
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
d2d71ec4a62869742d1ef9a1e2e6024e
  $fRealFloatCFloat31 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat32
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
57df8af6f160c05df6cdaa1ed2f8f0f0
  $fRealFloatCFloat32 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat34
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat33
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
bafd60fadaec1e8085d40c22289546d8
  $fRealFloatCFloat33 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Float.$fRealFloatFloat3) -}
8d0ccd3b20b13ec567b7d4a293c73ba3
  $fRealFloatCFloat34 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat35
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
b0c3302fb229f338d9df416e8340b968
  $fRealFloatCFloat35 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Float.$fRealFloatFloat2) -}
40e27b7a97ad36f94d98a30ec5f90a6d
  $fRealFloatCFloat36 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat37
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
ecb613707cb40f5f7dc9de625c5dbe90
  $fRealFloatCFloat37 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble45
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat22
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
c98a1bf768a61ac3f20e77cd1629de66
  $fRealFloatCFloat38 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Int.Int32 -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimFromIntegral
                   @ (GHC.Int.Int32 -> GHC.Int.Int64)
                   @ GHC.Int.Int32
                   @ GHC.Int.Int64
                   @~ <GHC.Int.Int32 -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType
                   Data.Array.Accelerate.Type.$fIsNumInt64_$cnumType) -}
ce923e66b04a9d61ba8068d03320c84c
  $fRealFloatCFloat39 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (e :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CFloat
                   @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                   Data.Array.Accelerate.Classes.Num.$fNumExp0_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Classes.Num.$fNumExp0_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      Data.Array.Accelerate.Classes.Num.$fNumExp0_lvl196
                      Data.Array.Accelerate.Classes.Num.$fNumExp0_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                         @ Foreign.C.Types.CFloat
                         @ ((), Foreign.C.Types.CFloat)
                         @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CFloat)
                            @ Foreign.C.Types.CFloat
                            @ ()
                            @~ <((), Foreign.C.Types.CFloat)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralInt64CFloat2
                               x)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CFloat
                            @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp0_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp0_lvl1
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp0_lvl196
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp0_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)
                                  @ Foreign.C.Types.CFloat
                                  @ ((), Foreign.C.Types.CFloat)
                                  @~ <(((), Foreign.C.Types.CFloat), Foreign.C.Types.CFloat)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat40
                                  (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralIntCFloat2
                                     e)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <Foreign.C.Types.CFloat>_N
                                            <Foreign.C.Types.CFloat>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                          Foreign.C.Types.CFloat)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CFloat>_N <Foreign.C.Types.CFloat>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                 Foreign.C.Types.CFloat)>_N)) -}
0263888a58a5652c44687e6676a0db8e
  $fRealFloatCFloat4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLAnd
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Data.Bits.$fBitsWord80
                               x
                               Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat14
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Bool
                            @ (GHC.Types.Bool, GHC.Types.Bool)
                            Data.Array.Accelerate.Smart.$s$fElt(,)
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.AST.$WPrimLAnd
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Types.Bool, GHC.Types.Bool)
                               Data.Array.Accelerate.Smart.$s$fElt(,)
                               Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                  @ GHC.Types.Bool
                                  @ ((), GHC.Types.Bool)
                                  @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ ((), GHC.Types.Bool)
                                     @ GHC.Types.Bool
                                     @ ()
                                     @~ <((), GHC.Types.Bool)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                        @ Data.Array.Accelerate.Smart.Exp)
                                     (Data.Array.Accelerate.Smart.PrimApp
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Types.Bool
                                        @ (GHC.Word.Word8, GHC.Word.Word8)
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl196
                                        Data.Array.Accelerate.Array.Sugar.$fEltBool
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl1
                                        (Data.Array.Accelerate.Smart.Tuple
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ (GHC.Word.Word8, GHC.Word.Word8)
                                           Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl196
                                           Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl199
                                           (Data.Array.Accelerate.Array.Sugar.SnocTup
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (((), GHC.Word.Word8), GHC.Word.Word8)
                                              @ GHC.Word.Word8
                                              @ ((), GHC.Word.Word8)
                                              @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                                              Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ ((), GHC.Word.Word8)
                                                 @ GHC.Word.Word8
                                                 @ ()
                                                 @~ <((), GHC.Word.Word8)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                                 (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                    @ Data.Array.Accelerate.Smart.Exp)
                                                 (Data.Array.Accelerate.Smart.PrimApp
                                                    @ Data.Array.Accelerate.Smart.Acc
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ GHC.Word.Word8
                                                    @ GHC.Word.Word32
                                                    Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                    Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                                    Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat13
                                                    (Data.Array.Accelerate.Smart.PrimApp
                                                       @ Data.Array.Accelerate.Smart.Acc
                                                       @ Data.Array.Accelerate.Smart.Exp
                                                       @ GHC.Word.Word32
                                                       @ (GHC.Word.Word32, GHC.Types.Int)
                                                       Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                       Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl7
                                                       (Data.Array.Accelerate.Smart.Tuple
                                                          @ Data.Array.Accelerate.Smart.Acc
                                                          @ Data.Array.Accelerate.Smart.Exp
                                                          @ (GHC.Word.Word32, GHC.Types.Int)
                                                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                             @ Data.Array.Accelerate.Smart.Exp
                                                             @ (((), GHC.Word.Word32),
                                                                GHC.Types.Int)
                                                             @ GHC.Types.Int
                                                             @ ((), GHC.Word.Word32)
                                                             @~ <(((), GHC.Word.Word32),
                                                                  GHC.Types.Int)>_N
                                                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                                @ Data.Array.Accelerate.Smart.Exp
                                                                @ ((), GHC.Word.Word32)
                                                                @ GHC.Word.Word32
                                                                @ ()
                                                                @~ <((), GHC.Word.Word32)>_N
                                                                Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                                   @ Data.Array.Accelerate.Smart.Exp)
                                                                x)
                                                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat11
                                                               `cast`
                                                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                            `cast`
                                                          (Data.Array.Accelerate.Array.Sugar.Tuple
                                                             <Data.Array.Accelerate.Smart.Exp>_R
                                                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                       <GHC.Types.Int>_N
                                                                       <GHC.Word.Word32>_N)))_R)
                                                         `cast`
                                                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                                     GHC.Types.Int)>_N))
                                                      `cast`
                                                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                              Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat9
                                                `cast`
                                              (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                             `cast`
                                           (Data.Array.Accelerate.Array.Sugar.Tuple
                                              <Data.Array.Accelerate.Smart.Exp>_R
                                              (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                        <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                                      GHC.Word.Word8)>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                  (Data.Array.Accelerate.Smart.PrimApp
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ GHC.Types.Bool
                                     @ (GHC.Word.Word32, GHC.Word.Word32)
                                     Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl196
                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                     Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl1
                                     (Data.Array.Accelerate.Smart.Tuple
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (GHC.Word.Word32, GHC.Word.Word32)
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl196
                                        Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl199
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ (((), GHC.Word.Word32), GHC.Word.Word32)
                                           @ GHC.Word.Word32
                                           @ ((), GHC.Word.Word32)
                                           @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                           (Data.Array.Accelerate.Array.Sugar.SnocTup
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ ((), GHC.Word.Word32)
                                              @ GHC.Word.Word32
                                              @ ()
                                              @~ <((), GHC.Word.Word32)>_N
                                              Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                              (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                 @ Data.Array.Accelerate.Smart.Exp)
                                              (Data.Array.Accelerate.Smart.PrimApp
                                                 @ Data.Array.Accelerate.Smart.Acc
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ GHC.Word.Word32
                                                 @ (GHC.Word.Word32, GHC.Word.Word32)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                                                 Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl198
                                                 (Data.Array.Accelerate.Smart.Tuple
                                                    @ Data.Array.Accelerate.Smart.Acc
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ (GHC.Word.Word32, GHC.Word.Word32)
                                                    Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                                                    Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                                                    (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                       @ Data.Array.Accelerate.Smart.Exp
                                                       @ (((), GHC.Word.Word32), GHC.Word.Word32)
                                                       @ GHC.Word.Word32
                                                       @ ((), GHC.Word.Word32)
                                                       @~ <(((), GHC.Word.Word32),
                                                            GHC.Word.Word32)>_N
                                                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                       (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                          @ Data.Array.Accelerate.Smart.Exp
                                                          @ ((), GHC.Word.Word32)
                                                          @ GHC.Word.Word32
                                                          @ ()
                                                          @~ <((), GHC.Word.Word32)>_N
                                                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                                          (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                             @ Data.Array.Accelerate.Smart.Exp)
                                                          x)
                                                       Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat7
                                                         `cast`
                                                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                                      `cast`
                                                    (Data.Array.Accelerate.Array.Sugar.Tuple
                                                       <Data.Array.Accelerate.Smart.Exp>_R
                                                       (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                                 <GHC.Word.Word32>_N
                                                                 <GHC.Word.Word32>_N)))_R)
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                               GHC.Word.Word32)>_N))
                                                `cast`
                                              (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                           Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat5
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                          `cast`
                                        (Data.Array.Accelerate.Array.Sugar.Tuple
                                           <Data.Array.Accelerate.Smart.Exp>_R
                                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                     <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                   GHC.Word.Word32)>_N))
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                          GHC.Types.Bool)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
f992e2d65734afadc983c4cdec27598c
  $fRealFloatCFloat40 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CFloat)
                   @ Foreign.C.Types.CFloat
                   @ ()
                   @~ <((), Foreign.C.Types.CFloat)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat41
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N)) -}
1b37ae66c4a5b5804408a24c4c92fbc7
  $fRealFloatCFloat41 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CFloat
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CFloat
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat42
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
4a56739ecdb4469b241741b68e17b2a1
  $fRealFloatCFloat42 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Int.Int64 -> Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimFromIntegral
                   @ (GHC.Int.Int64 -> Foreign.C.Types.CFloat)
                   @ GHC.Int.Int64
                   @ Foreign.C.Types.CFloat
                   @~ <GHC.Int.Int64 -> Foreign.C.Types.CFloat>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType
                   Data.Array.Accelerate.Type.$fIsNumCFloat_$cnumType) -}
0c694e74ffa25a0b237aca5704486b02
  $fRealFloatCFloat43 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CFloat -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CFloat -> GHC.Word.Word32)
                   @ Foreign.C.Types.CFloat
                   @ GHC.Word.Word32
                   @~ <Foreign.C.Types.CFloat -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
88dd24584b25c240896b931a1e63d3e1
  $fRealFloatCFloat44 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CFloat -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsInfinite
                   @ (Foreign.C.Types.CFloat -> GHC.Types.Bool)
                   @ Foreign.C.Types.CFloat
                   @~ <Foreign.C.Types.CFloat -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingCFloat_$cfloatingType) -}
ae5c7d519def385f7e5cf6e7a232df9e
  $fRealFloatCFloat45 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CFloat -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsNaN
                   @ (Foreign.C.Types.CFloat -> GHC.Types.Bool)
                   @ Foreign.C.Types.CFloat
                   @~ <Foreign.C.Types.CFloat -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingCFloat_$cfloatingType) -}
d54b3c10fa4e04f497636eaf5aa8ab35
  $fRealFloatCFloat46 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CFloat
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat47
                     `cast`
                   (Sym (Foreign.C.Types.N:CFloat[0]))) -}
cb0c970b292d460224587b39ae0f689a
  $fRealFloatCFloat47 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
2cd2bcd00ec6807971934c0a1db0e3f2
  $fRealFloatCFloat48 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CFloat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat39
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int64
                      @ GHC.Int.Int32
                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat38
                      (Data.Array.Accelerate.Smart.Prj
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Int.Int32
                         @ (GHC.Int.Int32, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Smart.tix1
                            @ ()
                            @ GHC.Int.Int32
                            @ GHC.Types.Int)
                           `cast`
                         (Data.Array.Accelerate.Product.TupleIdx
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                            <GHC.Int.Int32>_N)_R
                         (case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                                 (Data.Array.Accelerate.Smart.PrimApp
                                    @ Data.Array.Accelerate.Smart.Acc
                                    @ Data.Array.Accelerate.Smart.Exp
                                    @ GHC.Word.Word32
                                    @ Foreign.C.Types.CFloat
                                    Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                                    Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                    Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat43
                                    x)
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                          (Data.Array.Accelerate.Smart.Cond
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Int.Int32, GHC.Types.Int)
                             ww1
                             ww2
                             ww3
                             ww4)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                        GHC.Types.Int)>_N) }))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat49
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
a786c1d7a75e06a2782f7d7654f1f453
  $fRealFloatCFloat49 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble45
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
affd314e937f38b160afbfff69e8d227
  $fRealFloatCFloat5 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat6) -}
55e57e2d3ad638e773499c4eab7474e7
  $fRealFloatCFloat50 ::
    (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
     Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat33
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N),
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat35
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
fb3ead5bcf6540010341b09d136ece84
  $fRealFloatCFloat51 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat28) -}
5cea7c486cd9a22ed050453cf8b2d92b
  $fRealFloatCFloat52 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49) -}
c30489fd490ccc68ef1437594577490a
  $fRealFloatCFloat53 ::
    Data.Array.Accelerate.Classes.Fractional.Fractional
      Foreign.C.Types.CFloat
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat54,
                  Data.Array.Accelerate.Classes.Fractional.$fFractionalExp0)) -}
464c2cef2f21087fa4d0f72ab7ec8608
  $fRealFloatCFloat54 ::
    Data.Array.Accelerate.Classes.Num.Num Foreign.C.Types.CFloat
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Array.Sugar.$fEltCFloat,
                  Data.Array.Accelerate.Classes.Num.$fNumExp0)) -}
6471c98ff271dc63c2251b9351436a2d
  $fRealFloatCFloat6 :: GHC.Word.Word32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W32# 0##) -}
f23dfa9103f261c166978c76b80ac506
  $fRealFloatCFloat7 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat8) -}
52cbe09a125578393759f759554db02e
  $fRealFloatCFloat8 :: GHC.Word.Word32
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W32# 8388607##) -}
d52b2884362952d946f4430bedc0597d
  $fRealFloatCFloat9 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word8
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat10) -}
670e07609978cdac8004402cc750451a
  $fRealFloatCFloat_$catan2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N) -}
011bd35541bdad063bc032e50e02e268
  $fRealFloatCFloat_$cdecodeFloat ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_f -}
4ec849a267bbaaedf54e18e23c8f52f6
  $fRealFloatCFloat_$cencodeFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat39
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N) -}
0a3dfedeba492a268636cdee6e03d0de
  $fRealFloatCFloat_$cexponent ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cexponent1
                        w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Types.Int
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) }) -}
3b3df2d8cdd21526dbfb9aed2a52edb2
  $fRealFloatCFloat_$cfloatDigits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat51
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
55f2b9744c541dbb049ffeb28a5c63df
  $fRealFloatCFloat_$cfloatRadix ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat52
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
124dbde5f568945f6bcf2a8af77d7025
  $fRealFloatCFloat_$cfloatRange ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CFloat) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat50) -}
ce31c7bd23dcff3fbbab605e26b950de
  $fRealFloatCFloat_$cisDenormalized ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
5bcb0ca5e2b0309243d9e203cbc02e15
  $fRealFloatCFloat_$cisIEEE ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
60d6d5e7010d290eb71b85ccb795c910
  $fRealFloatCFloat_$cisInfinite ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
8de57f6fb776683489af762ec1ba2bff
  $fRealFloatCFloat_$cisNaN ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
37a12cce67692285ed2cf03b256f2ab7
  $fRealFloatCFloat_$cisNegativeZero ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
c31b96ceb53acc5aacf4890d09bd7f5c
  $fRealFloatCFloat_$cp2RealFloat ::
    Data.Array.Accelerate.Classes.Floating.Floating
      Foreign.C.Types.CFloat
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat53,
                  Data.Array.Accelerate.Classes.Floating.$fFloatingExp0)) -}
8c2c1b79caab824398fc5682dc11232c
  $fRealFloatCFloat_$cscaleFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N) -}
848ced9500d285ecc3421ddf9c517db6
  $fRealFloatCFloat_$csignificand ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat48
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N) -}
662087384e77ca12c4bc72c9d4842e60
  $fRealFloatCFloat_$dIsProduct ::
    Data.Array.Accelerate.Array.Sugar.IsTuple
      (GHC.Int.Int32, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int32
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
b0a033ae01ad30811bc507ba20be971b
  $fRealFloatCFloat_$dShow :: GHC.Show.Show GHC.Int.Int32
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Int.$fShowInt32 -}
bd67e0780973bdb8b042c9307cbb83bb
  $fRealFloatCFloat_$dShow2 :: GHC.Show.Show GHC.Types.Int
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Show.$fShowInt -}
1b01c48dfc57fb92683c2a9d13499b00
  $fRealFloatCFloat_$s$fElt(,) ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int32, GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Int.Int32, GHC.Types.Int)
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)_$cp1Elt
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,)_$cp2Elt
                     @ GHC.Int.Int32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,)_$cp3Elt
                     @ GHC.Int.Int32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,)_$cp4Elt
                     @ GHC.Int.Int32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,)_$celtType
                     @ GHC.Int.Int32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)_$cfromElt
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)_$ctoElt -}
132ebbbe135d502fa54f30a2268818e9
  $fRealFloatCFloat_$s$fElt(,)_$cfromElt ::
    (GHC.Int.Int32, GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         (GHC.Int.Int32, GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds2 :: (GHC.Int.Int32, GHC.Types.Int)) ->
                 case ds2 of wild { (,) a2 b1 ->
                 ((GHC.Tuple.(),
                   (GHC.Base.id @ GHC.Int.Int32 a2)
                     `cast`
                   (Sub (Sym (Data.Array.Accelerate.Array.Sugar.D:R:EltReprInt32[0])))),
                  (GHC.Base.id @ GHC.Types.Int b1)
                    `cast`
                  (Sub (Sym (Data.Array.Accelerate.Array.Sugar.D:R:EltReprInt[0]))))
                   `cast`
                 (Trans
                      (Sub (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                     <Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Types.Int>_N
                                     <Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Int.Int32>_N)))
                      (Sub (Sym (Data.Array.Accelerate.Array.Sugar.D:R:EltRepr(,)[0]
                                     <GHC.Types.Int>_N <GHC.Int.Int32>_N)))) }) -}
0238ac44eef249b25dccecbcd0cb746c
  $fRealFloatCFloat_$s$fElt(,)_$cp1Elt ::
    GHC.Show.Show (GHC.Int.Int32, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fShow(,) -}
c2309c30cf3c1e9be91d5709a617df80
  $fRealFloatCFloat_$s$fElt(,)_$ctoElt ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      (GHC.Int.Int32, GHC.Types.Int)
    -> (GHC.Int.Int32, GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SL)L),1*U(1*U(1*H,U),U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds2 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                             (GHC.Int.Int32, GHC.Types.Int)) ->
                 case ds2
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Array.Sugar.D:R:EltRepr(,)[0]
                                     <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                           (Sub (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                     <Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Types.Int>_N
                                     <Data.Array.Accelerate.Array.Sugar.EltRepr
                                        GHC.Int.Int32>_N))) of wild { (,) ds3 b1 ->
                 case ds3 of wild1 { (,) ds4 a2 ->
                 case ds4 of wild2 { () ->
                 (GHC.Base.id
                    @ GHC.Int.Int32
                    a2
                      `cast`
                    (Sub (Data.Array.Accelerate.Array.Sugar.D:R:EltReprInt32[0])),
                  GHC.Base.id
                    @ GHC.Types.Int
                    b1
                      `cast`
                    (Sub (Data.Array.Accelerate.Array.Sugar.D:R:EltReprInt[0]))) } } }) -}
a17666475bffe9cdde8c4ed2dafaa733
  $fRealFloatCFloat_$s$fShow(,) ::
    GHC.Show.Show (GHC.Int.Int32, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Int.Int32, GHC.Types.Int)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Int.Int32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow2)
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fShow(,)_$cshow
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fShow(,)_$cshowList -}
7cb82d1f8fa1776662fad66a6abcd0b7
  $fRealFloatCFloat_$s$fShow(,)_$cshow ::
    (GHC.Int.Int32, GHC.Types.Int) -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(U),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Int.Int32, GHC.Types.Int)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Int.Int32
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow2
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
14d76078d3be92f6bec027b23f3d553e
  $fRealFloatCFloat_$s$fShow(,)_$cshowList ::
    [(GHC.Int.Int32, GHC.Types.Int)] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Int.Int32, GHC.Types.Int)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Int.Int32, GHC.Types.Int)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Int.Int32
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow2
                      GHC.Show.shows22)
                   eta
                   eta1) -}
fac00eca9dd35fcfc3f54790381f3c2e
  $fRealFloatCFloat_f ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int)
                   = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               @ Foreign.C.Types.CFloat
                               Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               (Data.Array.Accelerate.AST.PrimCoerce
                                  @ (Foreign.C.Types.CFloat -> GHC.Word.Word32)
                                  @ Foreign.C.Types.CFloat
                                  @ GHC.Word.Word32
                                  @~ <Foreign.C.Types.CFloat -> GHC.Word.Word32>_N
                                  Data.Array.Accelerate.Type.$fIsScalarCFloat_$cscalarType
                                  Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType)
                               w)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                     (Data.Array.Accelerate.Smart.Cond
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ (GHC.Int.Int32, GHC.Types.Int)
                        ww1
                        ww2
                        ww3
                        ww4)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                   GHC.Types.Int)>_N) }
                 } in
                 ((Data.Array.Accelerate.Smart.PrimApp
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Int.Int64
                     @ GHC.Int.Int32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt64
                     (Data.Array.Accelerate.AST.PrimFromIntegral
                        @ (GHC.Int.Int32 -> GHC.Int.Int64)
                        @ GHC.Int.Int32
                        @ GHC.Int.Int64
                        @~ <GHC.Int.Int32 -> GHC.Int.Int64>_N
                        Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType
                        Data.Array.Accelerate.Type.$fIsNumInt64_$cnumType)
                     (Data.Array.Accelerate.Smart.Prj
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ GHC.Int.Int32
                        @ (GHC.Int.Int32, GHC.Types.Int)
                        Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                        Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                        Data.Array.Accelerate.Array.Sugar.$fEltInt32
                        (Data.Array.Accelerate.Smart.tix1
                           @ ()
                           @ GHC.Int.Int32
                           @ GHC.Types.Int)
                          `cast`
                        (Data.Array.Accelerate.Product.TupleIdx
                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                     <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                           <GHC.Int.Int32>_N)_R
                        e)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N),
                  (Data.Array.Accelerate.Smart.Prj
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Types.Int
                     @ (GHC.Int.Int32, GHC.Types.Int)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     (Data.Array.Accelerate.Product.$WZeroTupIdx
                        @ GHC.Types.Int
                        @ ((), GHC.Int.Int32))
                       `cast`
                     (Data.Array.Accelerate.Product.TupleIdx
                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                  <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                        <GHC.Types.Int>_N)_R
                     e)
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
1f9efe73e0160e001715f71bde11efb3
  $fRealFloatCFloat_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CFloat
                   @ Foreign.C.Types.CFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat) -}
f5e8cf15478f24d1f14b798e4faf52f3
  $fRealFloatCFloat_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
       -> Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimAtan2
                   @ ((Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                      -> Foreign.C.Types.CFloat)
                   @ Foreign.C.Types.CFloat
                   @~ <(Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                       -> Foreign.C.Types.CFloat>_N
                   Data.Array.Accelerate.Type.$fIsFloatingCFloat_$cfloatingType) -}
ac07c99ae7e93516fc2783c1322eadad
  $fRealFloatCFloat_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CFloat
                   @ Foreign.C.Types.CFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltCFloat) -}
00ef28e1ee85ae838321e71004da4dc0
  $fRealFloatDouble ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat GHC.Types.Double
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Double
                  Data.Array.Accelerate.Classes.RealFrac.$fRealFracDouble
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cp2RealFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cfloatRadix
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cfloatDigits
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cfloatRange
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cdecodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cencodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cexponent
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$csignificand
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cscaleFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cisNaN
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cisInfinite
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cisDenormalized
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cisNegativeZero
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$cisIEEE
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_$catan2 -}
5c6be8c8fe1fc506fb75352f25b30103
  $fRealFloatDouble1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_lvl196
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
61e335afbdcfcc748a75d49c9d03a599
  $fRealFloatDouble10 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Double
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble11
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
463ebf147d9427f2c8165b52d192d6a5
  $fRealFloatDouble11 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Int.Int64 -> GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimFromIntegral
                   @ (GHC.Int.Int64 -> GHC.Types.Double)
                   @ GHC.Int.Int64
                   @ GHC.Types.Double
                   @~ <GHC.Int.Int64 -> GHC.Types.Double>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType
                   Data.Array.Accelerate.Type.$fIsNumDouble_$cnumType) -}
7bea243ef4daa767547597ef67658c9b
  $fRealFloatDouble12 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Double -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Types.Double -> GHC.Word.Word64)
                   @ GHC.Types.Double
                   @ GHC.Word.Word64
                   @~ <GHC.Types.Double -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
36f2462f86810d23c3816659938b4a75
  $fRealFloatDouble13 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Double -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsInfinite
                   @ (GHC.Types.Double -> GHC.Types.Bool)
                   @ GHC.Types.Double
                   @~ <GHC.Types.Double -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingDouble_$cfloatingType) -}
dd2e9cc84e9bf3b5c3172e74a4d9ff42
  $fRealFloatDouble14 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Double -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsNaN
                   @ (GHC.Types.Double -> GHC.Types.Bool)
                   @ GHC.Types.Double
                   @~ <GHC.Types.Double -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingDouble_$cfloatingType) -}
f50b357a167a1f9da348f68bbea27236
  $fRealFloatDouble15 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Double
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble56) -}
2faf79c1aa562d665526203d7b82fc77
  $fRealFloatDouble16 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Double
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Types.Double) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble8
                   (Data.Array.Accelerate.Smart.Prj
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int64
                      @ (GHC.Int.Int64, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                      (Data.Array.Accelerate.Smart.tix1
                         @ ()
                         @ GHC.Int.Int64
                         @ GHC.Types.Int)
                        `cast`
                      (Data.Array.Accelerate.Product.TupleIdx
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                         <GHC.Int.Int64>_N)_R
                      (case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f64_decode
                              (Data.Array.Accelerate.Smart.PrimApp
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ GHC.Word.Word64
                                 @ GHC.Types.Double
                                 Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                 Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble12
                                 x)
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) of ww { (#,,#) ww1 ww2 ww3 ->
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          ww1
                          ww2
                          ww3)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Types.Int)>_N) }))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble60
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
053de6f386243979003dc66b85326a6a
  $fRealFloatDouble17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble32) -}
9d156dbf25ef1f7c56be638ee3a375a7
  $fRealFloatDouble18 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49) -}
f0961277393da25b54aebf52de82a9f0
  $fRealFloatDouble19 ::
    Data.Array.Accelerate.Classes.Fractional.Fractional
      GHC.Types.Double
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble20,
                  Data.Array.Accelerate.Classes.Fractional.$fFractionalExp1)) -}
01b28704ae1bf8f0578aab3bf912cf96
  $fRealFloatDouble2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble3) -}
4f50fb7d7603b01bb06e5daf7abfa24f
  $fRealFloatDouble20 ::
    Data.Array.Accelerate.Classes.Num.Num GHC.Types.Double
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Array.Sugar.$fEltDouble,
                  Data.Array.Accelerate.Classes.Num.$fNumExp1)) -}
3c5c63eef22558274f4fcebe0832141a
  $fRealFloatDouble3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble5
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word64
                      @ GHC.Types.Double
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltWord64
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (GHC.Types.Double -> GHC.Word.Word64)
                         @ GHC.Types.Double
                         @ GHC.Word.Word64
                         @~ <GHC.Types.Double -> GHC.Word.Word64>_N
                         Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
c4d4e09a7dadce36ad1bad35eb6affd0
  $fRealFloatDouble4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble21
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word64
                      @ GHC.Types.Double
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltWord64
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (GHC.Types.Double -> GHC.Word.Word64)
                         @ GHC.Types.Double
                         @ GHC.Word.Word64
                         @~ <GHC.Types.Double -> GHC.Word.Word64>_N
                         Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
127548995134b638392f6131e9d898eb
  $fRealFloatDouble5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsInfinite
                      @ (GHC.Types.Double -> GHC.Types.Bool)
                      @ GHC.Types.Double
                      @~ <GHC.Types.Double -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingDouble_$cfloatingType)
                   x) -}
a0c35409feba73e90e155609179197a5
  $fRealFloatDouble6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsNaN
                      @ (GHC.Types.Double -> GHC.Types.Bool)
                      @ GHC.Types.Double
                      @~ <GHC.Types.Double -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingDouble_$cfloatingType)
                   x) -}
84b65c83725614e547325e4db465c92b
  $fRealFloatDouble7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cscaleFloat2
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
6924aab84a9be8620a01888bc2d067e6
  $fRealFloatDouble8 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (e :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   @ (GHC.Types.Double, GHC.Types.Double)
                   Data.Array.Accelerate.Classes.Num.$fNumExp1_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.Num.$fNumExp1_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Double, GHC.Types.Double)
                      Data.Array.Accelerate.Classes.Num.$fNumExp1_lvl196
                      Data.Array.Accelerate.Classes.Num.$fNumExp1_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Double), GHC.Types.Double)
                         @ GHC.Types.Double
                         @ ((), GHC.Types.Double)
                         @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Double)
                            @ GHC.Types.Double
                            @ ()
                            @~ <((), GHC.Types.Double)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralInt64Double2
                               x)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Double
                            @ (GHC.Types.Double, GHC.Types.Double)
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp1_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp1_lvl1
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Types.Double, GHC.Types.Double)
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp1_lvl196
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp1_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Types.Double), GHC.Types.Double)
                                  @ GHC.Types.Double
                                  @ ((), GHC.Types.Double)
                                  @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble9
                                  (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralIntDouble2
                                     e)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                          GHC.Types.Double)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Double>_N <GHC.Types.Double>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                 GHC.Types.Double)>_N)) -}
46bb65241dc16d510b842dfd094e3615
  $fRealFloatDouble9 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Double)
                   @ GHC.Types.Double
                   @ ()
                   @~ <((), GHC.Types.Double)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble10
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N)) -}
9fd7c4ab3f754060b6fa66e20fc01037
  $fRealFloatDouble_$catan2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N) -}
fe3a8b8a8da37c7a3c355f651b44f558
  $fRealFloatDouble_$cdecodeFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int64, GHC.Types.Int)
                   = Data.Array.Accelerate.Classes.RealFloat.ieee754_f64_decode
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word64
                          @ GHC.Types.Double
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          (Data.Array.Accelerate.AST.PrimCoerce
                             @ (GHC.Types.Double -> GHC.Word.Word64)
                             @ GHC.Types.Double
                             @ GHC.Word.Word64
                             @~ <GHC.Types.Double -> GHC.Word.Word64>_N
                             Data.Array.Accelerate.Type.$fIsScalarDouble_$cscalarType
                             Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType)
                          x)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                 } in
                 ((Data.Array.Accelerate.Smart.Prj
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Int.Int64
                     @ (GHC.Int.Int64, GHC.Types.Int)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                     Data.Array.Accelerate.Array.Sugar.$fEltInt64
                     (Data.Array.Accelerate.Smart.tix1
                        @ ()
                        @ GHC.Int.Int64
                        @ GHC.Types.Int)
                       `cast`
                     (Data.Array.Accelerate.Product.TupleIdx
                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                  <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                        <GHC.Int.Int64>_N)_R
                     e)
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N),
                  (Data.Array.Accelerate.Smart.Prj
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Types.Int
                     @ (GHC.Int.Int64, GHC.Types.Int)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     (Data.Array.Accelerate.Product.$WZeroTupIdx
                        @ GHC.Types.Int
                        @ ((), GHC.Int.Int64))
                       `cast`
                     (Data.Array.Accelerate.Product.TupleIdx
                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                  <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                        <GHC.Types.Int>_N)_R
                     e)
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
036bcab311a3ea7390a4aae4755c99a4
  $fRealFloatDouble_$cencodeFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble8
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N) -}
6a7404930e8f037d2bca8e32129da92e
  $fRealFloatDouble_$cexponent ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cexponent2
                        w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Types.Int
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) }) -}
6c626254eab64857c1496e15585ac925
  $fRealFloatDouble_$cfloatDigits ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
bac4f3ff00a98cd9ed216cafc1494449
  $fRealFloatDouble_$cfloatRadix ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
bcf6d244084926ce46364d93fcb3d4a7
  $fRealFloatDouble_$cfloatRange ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble63) -}
54c217c68e3d89477120b19f0e7f0de1
  $fRealFloatDouble_$cisDenormalized ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
d36f08871ea168479b4d81302f7afa6b
  $fRealFloatDouble_$cisIEEE ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
545cafc445a60849941465f6da503dc1
  $fRealFloatDouble_$cisInfinite ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
9c6482b6baaf5f8a95c2da9e4f20f383
  $fRealFloatDouble_$cisNaN ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
c59fdcf1a2ecd3c7f4a738bdeaec6797
  $fRealFloatDouble_$cisNegativeZero ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
18a23b661c21c10798578911af3a6e3a
  $fRealFloatDouble_$cp2RealFloat ::
    Data.Array.Accelerate.Classes.Floating.Floating GHC.Types.Double
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble19,
                  Data.Array.Accelerate.Classes.Floating.$fFloatingExp1)) -}
173ac6a1b5413a8bc094ad754c969b42
  $fRealFloatDouble_$cscaleFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N) -}
9147be8767e3ea370bfd4e0e48105c06
  $fRealFloatDouble_$csignificand ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Double>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N) -}
5ab0be0b512ac3530c4015cadc66c975
  $fRealFloatDouble_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Double, GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
1974f94c3100398ee6c2ef379800a840
  $fRealFloatDouble_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimAtan2
                   @ ((GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double)
                   @ GHC.Types.Double
                   @~ <(GHC.Types.Double, GHC.Types.Double) -> GHC.Types.Double>_N
                   Data.Array.Accelerate.Type.$fIsFloatingDouble_$cfloatingType) -}
f2c0c195099c4d71d6517ac40c7c61e1
  $fRealFloatDouble_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Double, GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
ceddaf627edb6c471bb3054b95f6b263
  $fRealFloatExp ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    GHC.Float.RealFloat (Data.Array.Accelerate.Smart.Exp a)
  DFunId
  {- Arity: 1,
     Strictness: <L,U(U(U(U,U,U),U(U,U),U,U,U,U,U),U(U,U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                        a).
                  @ (Data.Array.Accelerate.Smart.Exp a)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cp1RealFloat
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cp2RealFloat
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cfloatRadix
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cfloatDigits
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cfloatRange
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cdecodeFloat
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cencodeFloat
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cexponent
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$csignificand
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cscaleFloat
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cisNaN
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cisInfinite
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cisDenormalized
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cisNegativeZero
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$cisIEEE
                     @ a
                     $dRealFloat)
                  (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp_$catan2
                     @ a
                     $dRealFloat) -}
ac8d6db17f9f2b6da56e76d6083be70f
  $fRealFloatExp1 ::
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
2b18fdb1ec3cf115291409b1fbf71d2b
  $fRealFloatExp10 ::
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Int
  {- Strictness: x -}
d7de3f9f28823faad6a6acfcb3694c12
  $fRealFloatExp11 ::
    Data.Array.Accelerate.Smart.Exp a -> GHC.Integer.Type.Integer
  {- Strictness: x -}
0c0a860003920ff8e0c683b6e058039b
  $fRealFloatExp2 ::
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
5e84876f2b3fb1bfd46df16ef80d1814
  $fRealFloatExp3 ::
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
21a587e1bc01a88ba006eae8067d052f
  $fRealFloatExp4 ::
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
80d5c5fbc4e6c4e170b36f19a5eddec2
  $fRealFloatExp5 ::
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Strictness: x -}
314d531b77128168d21284a196a5bacf
  $fRealFloatExp6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
8a2652970185bcf84586b7894092c778
  $fRealFloatExp7 ::
    GHC.Integer.Type.Integer
    -> GHC.Types.Int -> Data.Array.Accelerate.Smart.Exp a
  {- Strictness: x -}
cd723447e4d03146426960c6789b3641
  $fRealFloatExp8 ::
    Data.Array.Accelerate.Smart.Exp a
    -> (GHC.Integer.Type.Integer, GHC.Types.Int)
  {- Strictness: x -}
faede4794f1de52806627b9250f4f10f
  $fRealFloatExp9 ::
    Data.Array.Accelerate.Smart.Exp a -> (GHC.Types.Int, GHC.Types.Int)
  {- Strictness: x -}
fa6d41c75012de761d992ba30f11ffe0
  $fRealFloatExp_$catan2 ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <S(SLLLLLLLLLLLLLLL),U(U,U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U> -}
9a332545b3d4af5df19ac7f55fc1c6ae
  $fRealFloatExp_$cdecodeFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a
    -> (GHC.Integer.Type.Integer, GHC.Types.Int)
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp8 @ a) -}
27bc7a35bbd39904aeaa3b9400211589
  $fRealFloatExp_$cencodeFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    GHC.Integer.Type.Integer
    -> GHC.Types.Int -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp7 @ a) -}
eb1d80bb513c7fda43a9bec1796d330e
  $fRealFloatExp_$cexponent ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Int
  {- Arity: 2, Strictness: <B,A><B,A>x, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   (w :: Data.Array.Accelerate.Classes.RealFloat.RealFloat a)
                   (w1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$w$cexponent3
                   @ a
                   GHC.Prim.void#) -}
13344976731b634463972ab42e41f387
  $fRealFloatExp_$cfloatDigits ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Int
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp10 @ a) -}
43e078ea84404c14f2030252ace94268
  $fRealFloatExp_$cfloatRadix ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp11 @ a) -}
084206626ca2b1508c42d129b5bde178
  $fRealFloatExp_$cfloatRange ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp9 @ a) -}
e133ff91a8b9fbde69b4ccf3a85eb9b2
  $fRealFloatExp_$cisDenormalized ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp3 @ a) -}
a248b2e5421d47134baf38e68123e269
  $fRealFloatExp_$cisIEEE ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp1 @ a) -}
1ad66191e3581407de65378dcfd8b718
  $fRealFloatExp_$cisInfinite ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp4 @ a) -}
5e02f84715dda12bc4abe7cdb2beb7b5
  $fRealFloatExp_$cisNaN ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp5 @ a) -}
c2ba629a9f735c7268f7fd05ae7d88e6
  $fRealFloatExp_$cisNegativeZero ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a -> GHC.Types.Bool
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp2 @ a) -}
d86b315ead3ed4a206d390dc661ddc13
  $fRealFloatExp_$cp1RealFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    GHC.Real.RealFrac (Data.Array.Accelerate.Smart.Exp a)
  {- Arity: 1,
     Strictness: <L,1*U(1*U(1*U(A,A,1*U),1*U(A,1*U),A,A,A,A,A),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 Data.Array.Accelerate.Classes.RealFrac.$fRealFracExp
                   @ a
                   (Data.Array.Accelerate.Classes.RealFloat.$p1RealFloat
                      @ a
                      $dRealFloat)) -}
5fddbfc92b7deae91356cb313d26ed46
  $fRealFloatExp_$cp2RealFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    GHC.Float.Floating (Data.Array.Accelerate.Smart.Exp a)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(LS)LLLLLLLLLLLLLL),1*U(A,1*U(A,1*U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   ($dRealFloat :: Data.Array.Accelerate.Classes.RealFloat.RealFloat
                                     a) ->
                 GHC.Classes.$p2(%,%)
                   @ (Data.Array.Accelerate.Classes.Fractional.Fractional a)
                   @ (GHC.Float.Floating (Data.Array.Accelerate.Smart.Exp a))
                   (Data.Array.Accelerate.Classes.RealFloat.$p2RealFloat
                      @ a
                      $dRealFloat)) -}
911dc1528a90d2c1ac563d679056bf6b
  $fRealFloatExp_$cscaleFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <L,1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S(S),1*U(1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: Data.Array.Accelerate.Classes.RealFloat.RealFloat a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Array.Accelerate.Smart.Exp a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Data.Array.Accelerate.Classes.RealFloat.$w$cscaleFloat3
                   @ a
                   w
                   ww1
                   w2 }) -}
842c68011d2d844404dd8d2de1c64399
  $fRealFloatExp_$csignificand ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 2, Strictness: <B,A><B,A>x, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   (w :: Data.Array.Accelerate.Classes.RealFloat.RealFloat a)
                   (w1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 Data.Array.Accelerate.Classes.RealFloat.$w$csignificand
                   @ a
                   GHC.Prim.void#) -}
00ef28e1ee85ae838321e71004da4dc0
  $fRealFloatFloat ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat GHC.Types.Float
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Float
                  Data.Array.Accelerate.Classes.RealFrac.$fRealFracFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cp2RealFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cfloatRadix
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cfloatDigits
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cfloatRange
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cdecodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cencodeFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cexponent
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$csignificand
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cscaleFloat
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cisNaN
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cisInfinite
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cisDenormalized
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cisNegativeZero
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$cisIEEE
                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_$catan2 -}
775c072c8bfa70dea5f996cafed53358
  $fRealFloatFloat1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Float
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_lvl196
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
9aa5775445198755fe8921be31bdb00c
  $fRealFloatFloat10 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Float
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Float
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat11
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
99d8aa6fcc0e340ac5c56d53662debb0
  $fRealFloatFloat11 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Int.Int64 -> GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimFromIntegral
                   @ (GHC.Int.Int64 -> GHC.Types.Float)
                   @ GHC.Int.Int64
                   @ GHC.Types.Float
                   @~ <GHC.Int.Int64 -> GHC.Types.Float>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType
                   Data.Array.Accelerate.Type.$fIsNumFloat_$cnumType) -}
ef1564052c14c45592e6e8b533c1d875
  $fRealFloatFloat12 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Float -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Types.Float -> GHC.Word.Word32)
                   @ GHC.Types.Float
                   @ GHC.Word.Word32
                   @~ <GHC.Types.Float -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
e99a2a5a08f274d62457462724854ddf
  $fRealFloatFloat13 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Float -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsInfinite
                   @ (GHC.Types.Float -> GHC.Types.Bool)
                   @ GHC.Types.Float
                   @~ <GHC.Types.Float -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingFloat_$cfloatingType) -}
85f7aff81b14065daa54640ef1fa450d
  $fRealFloatFloat14 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Float -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimIsNaN
                   @ (GHC.Types.Float -> GHC.Types.Bool)
                   @ GHC.Types.Float
                   @~ <GHC.Types.Float -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsFloatingFloat_$cfloatingType) -}
2cab587ba9d9a43eca415a15ccbc52b6
  $fRealFloatFloat15 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Float
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Float
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat47) -}
8c3bef31e5a67209634c3f67ac1bbd8f
  $fRealFloatFloat16 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Float
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Types.Float) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int64
                      @ GHC.Int.Int32
                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat38
                      (Data.Array.Accelerate.Smart.Prj
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Int.Int32
                         @ (GHC.Int.Int32, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Smart.tix1
                            @ ()
                            @ GHC.Int.Int32
                            @ GHC.Types.Int)
                           `cast`
                         (Data.Array.Accelerate.Product.TupleIdx
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                            <GHC.Int.Int32>_N)_R
                         (case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                                 (Data.Array.Accelerate.Smart.PrimApp
                                    @ Data.Array.Accelerate.Smart.Acc
                                    @ Data.Array.Accelerate.Smart.Exp
                                    @ GHC.Word.Word32
                                    @ GHC.Types.Float
                                    Data.Array.Accelerate.Array.Sugar.$fEltFloat
                                    Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                    Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat12
                                    x)
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                          (Data.Array.Accelerate.Smart.Cond
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Int.Int32, GHC.Types.Int)
                             ww1
                             ww2
                             ww3
                             ww4)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                        GHC.Types.Int)>_N) }))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat49
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
8b5598b7a9b66644da370d8c52211c68
  $fRealFloatFloat17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat28) -}
d8b2a4538ad5173ec31b93d7e4db6a57
  $fRealFloatFloat18 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble49) -}
cdcbf4f2d069e3917ff5f0948431b896
  $fRealFloatFloat19 ::
    Data.Array.Accelerate.Classes.Fractional.Fractional GHC.Types.Float
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat20,
                  Data.Array.Accelerate.Classes.Fractional.$fFractionalExp2)) -}
3bb6331007d8b2926da4cb4be9118896
  $fRealFloatFloat2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble3) -}
982a46773ad60980bf777a32876bd110
  $fRealFloatFloat20 ::
    Data.Array.Accelerate.Classes.Num.Num GHC.Types.Float
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Array.Sugar.$fEltFloat,
                  Data.Array.Accelerate.Classes.Num.$fNumExp2)) -}
0d360ff4e4c6763c8eb7d3489eb18578
  $fRealFloatFloat3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat4
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word32
                      @ GHC.Types.Float
                      Data.Array.Accelerate.Array.Sugar.$fEltFloat
                      Data.Array.Accelerate.Array.Sugar.$fEltWord32
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (GHC.Types.Float -> GHC.Word.Word32)
                         @ GHC.Types.Float
                         @ GHC.Word.Word32
                         @~ <GHC.Types.Float -> GHC.Word.Word32>_N
                         Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
f026203ae8d47ef375d166b14cb45597
  $fRealFloatFloat4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat17
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word32
                      @ GHC.Types.Float
                      Data.Array.Accelerate.Array.Sugar.$fEltFloat
                      Data.Array.Accelerate.Array.Sugar.$fEltWord32
                      (Data.Array.Accelerate.AST.PrimCoerce
                         @ (GHC.Types.Float -> GHC.Word.Word32)
                         @ GHC.Types.Float
                         @ GHC.Word.Word32
                         @~ <GHC.Types.Float -> GHC.Word.Word32>_N
                         Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType
                         Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType)
                      x)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
2d82444040b5b34cf786645012a6019e
  $fRealFloatFloat5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ GHC.Types.Float
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsInfinite
                      @ (GHC.Types.Float -> GHC.Types.Bool)
                      @ GHC.Types.Float
                      @~ <GHC.Types.Float -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingFloat_$cfloatingType)
                   x) -}
6477c3851e4b14f38cc467b54a15a5ce
  $fRealFloatFloat6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ GHC.Types.Float
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.AST.PrimIsNaN
                      @ (GHC.Types.Float -> GHC.Types.Bool)
                      @ GHC.Types.Float
                      @~ <GHC.Types.Float -> GHC.Types.Bool>_N
                      Data.Array.Accelerate.Type.$fIsFloatingFloat_$cfloatingType)
                   x) -}
fbb1d739af47535bd8b2d71c9ca2b4c1
  $fRealFloatFloat7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cscaleFloat4
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Float
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
a7b501c66d5963b3cc30437270765d9a
  $fRealFloatFloat8 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (e :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Float
                   @ (GHC.Types.Float, GHC.Types.Float)
                   Data.Array.Accelerate.Classes.Num.$fNumExp2_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Classes.Num.$fNumExp2_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Float, GHC.Types.Float)
                      Data.Array.Accelerate.Classes.Num.$fNumExp2_lvl196
                      Data.Array.Accelerate.Classes.Num.$fNumExp2_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Float), GHC.Types.Float)
                         @ GHC.Types.Float
                         @ ((), GHC.Types.Float)
                         @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltFloat
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Float)
                            @ GHC.Types.Float
                            @ ()
                            @~ <((), GHC.Types.Float)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralInt64Float2
                               x)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N))
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Float
                            @ (GHC.Types.Float, GHC.Types.Float)
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp2_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltFloat
                            Data.Array.Accelerate.Classes.Floating.$fFloatingExp2_lvl1
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Types.Float, GHC.Types.Float)
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp2_lvl196
                               Data.Array.Accelerate.Classes.Floating.$fFloatingExp2_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Types.Float), GHC.Types.Float)
                                  @ GHC.Types.Float
                                  @ ((), GHC.Types.Float)
                                  @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltFloat
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat9
                                  (Data.Array.Accelerate.Classes.FromIntegral.$fFromIntegralIntFloat2
                                     e)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                          GHC.Types.Float)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Float>_N <GHC.Types.Float>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                 GHC.Types.Float)>_N)) -}
9a3e9a331a55f0948de6a748f164e61c
  $fRealFloatFloat9 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Float)
                   @ GHC.Types.Float
                   @ ()
                   @~ <((), GHC.Types.Float)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat10
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N)) -}
aeaca2fff1997812e55434fe85a6eb1d
  $fRealFloatFloat_$catan2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N) -}
76d53243153902190d41fe0d49fe2e76
  $fRealFloatFloat_$cdecodeFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat_f -}
bd6fa294a1d356879f56735135b3d420
  $fRealFloatFloat_$cencodeFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat8
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N) -}
6867e77dc41e8a8a5371e937214b6ab7
  $fRealFloatFloat_$cexponent ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$w$cexponent4
                        w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Types.Int
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) }) -}
80cb1e14e5a87c4034880b484b564da3
  $fRealFloatFloat_$cfloatDigits ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
6461fcd344ca37d1a68fb256693ca281
  $fRealFloatFloat_$cfloatRadix ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
ef24cbbf3a8be5b09d07bb1a9f7c7746
  $fRealFloatFloat_$cfloatRange ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat50) -}
c258bb69bdec32531669a8f7d603c691
  $fRealFloatFloat_$cisDenormalized ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
426ddd380b31d728fd76bb6798beb185
  $fRealFloatFloat_$cisIEEE ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
190e36175f21a9f0a44e0d8dbb985d82
  $fRealFloatFloat_$cisInfinite ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
da751ab7dc5b88720c2de8ab7202639d
  $fRealFloatFloat_$cisNaN ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
5c0f26958e2a145b0a547b395132a2f7
  $fRealFloatFloat_$cisNegativeZero ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
ee644a86c39bf1a3c0e29cbfc584dc01
  $fRealFloatFloat_$cp2RealFloat ::
    Data.Array.Accelerate.Classes.Floating.Floating GHC.Types.Float
  {- Strictness: m,
     Unfolding: ((Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat19,
                  Data.Array.Accelerate.Classes.Floating.$fFloatingExp2)) -}
6cb20a814eca3663b2b7c02f40017cef
  $fRealFloatFloat_$cscaleFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N) -}
1dbc268aa3186fab74a7ded011d57a63
  $fRealFloatFloat_$csignificand ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Float>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N) -}
2cf735a513688275e17162cfc79a4aef
  $fRealFloatFloat_f ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
        Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int)
                   = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               @ GHC.Types.Float
                               Data.Array.Accelerate.Array.Sugar.$fEltFloat
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               (Data.Array.Accelerate.AST.PrimCoerce
                                  @ (GHC.Types.Float -> GHC.Word.Word32)
                                  @ GHC.Types.Float
                                  @ GHC.Word.Word32
                                  @~ <GHC.Types.Float -> GHC.Word.Word32>_N
                                  Data.Array.Accelerate.Type.$fIsScalarFloat_$cscalarType
                                  Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType)
                               w)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                     (Data.Array.Accelerate.Smart.Cond
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ (GHC.Int.Int32, GHC.Types.Int)
                        ww1
                        ww2
                        ww3
                        ww4)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                   GHC.Types.Int)>_N) }
                 } in
                 ((Data.Array.Accelerate.Smart.PrimApp
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Int.Int64
                     @ GHC.Int.Int32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt64
                     (Data.Array.Accelerate.AST.PrimFromIntegral
                        @ (GHC.Int.Int32 -> GHC.Int.Int64)
                        @ GHC.Int.Int32
                        @ GHC.Int.Int64
                        @~ <GHC.Int.Int32 -> GHC.Int.Int64>_N
                        Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType
                        Data.Array.Accelerate.Type.$fIsNumInt64_$cnumType)
                     (Data.Array.Accelerate.Smart.Prj
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ GHC.Int.Int32
                        @ (GHC.Int.Int32, GHC.Types.Int)
                        Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                        Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                        Data.Array.Accelerate.Array.Sugar.$fEltInt32
                        (Data.Array.Accelerate.Smart.tix1
                           @ ()
                           @ GHC.Int.Int32
                           @ GHC.Types.Int)
                          `cast`
                        (Data.Array.Accelerate.Product.TupleIdx
                           (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                     <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                           <GHC.Int.Int32>_N)_R
                        e)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N),
                  (Data.Array.Accelerate.Smart.Prj
                     @ Data.Array.Accelerate.Smart.Acc
                     @ Data.Array.Accelerate.Smart.Exp
                     @ GHC.Types.Int
                     @ (GHC.Int.Int32, GHC.Types.Int)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     (Data.Array.Accelerate.Product.$WZeroTupIdx
                        @ GHC.Types.Int
                        @ ((), GHC.Int.Int32))
                       `cast`
                     (Data.Array.Accelerate.Product.TupleIdx
                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                  <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                        <GHC.Types.Int>_N)_R
                     e)
                    `cast`
                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
2aaa2250223ad7a158de6f715c3fefd4
  $fRealFloatFloat_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat) -}
5634d3eaf1b0792a7163c3d938801b0b
  $fRealFloatFloat_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimAtan2
                   @ ((GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float)
                   @ GHC.Types.Float
                   @~ <(GHC.Types.Float, GHC.Types.Float) -> GHC.Types.Float>_N
                   Data.Array.Accelerate.Type.$fIsFloatingFloat_$cfloatingType) -}
c271428d57c0ffba87a61108a2dda151
  $fRealFloatFloat_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Float, GHC.Types.Float)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Float
                   @ GHC.Types.Float
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat
                   Data.Array.Accelerate.Array.Sugar.$fEltFloat) -}
2522d5bb3b81e6acf6c72561d12c350b
  $s$fElt(,,) ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
                  Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fElt(,,)_$cp1Elt
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,)_$cp2Elt
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,)_$cp3Elt
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,)_$cp4Elt
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,)_$celtType
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,)_$cfromElt
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,)_$ctoElt
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
a14f436275c16e85f3dc8be9ca5dcae5
  $s$fElt(,,)_$dShow :: GHC.Show.Show GHC.Word.Word32
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Word.$fShowWord32 -}
f1316d5545dfd6136909801907dd69da
  $s$fElt(,,)_$s$fElt(,,)_$cp1Elt ::
    GHC.Show.Show (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fShow(,,) -}
84fc292c3a7ffa74cb690f833c9f258b
  $s$fElt(,,)_$s$fShow(,,) ::
    GHC.Show.Show (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
                  (GHC.Show.$fShow(,,)_$cshowsPrec
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$dShow
                     Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$dShow
                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow2)
                  Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fShow(,,)_$cshow
                  Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fShow(,,)_$cshowList -}
054e6f726824847deb728ab35b900800
  $s$fElt(,,)_$s$fShow(,,)_$cshow ::
    (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
    -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(U),U(U),U(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)) ->
                 GHC.Show.$fShow(,,)_$cshowsPrec
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$dShow
                   Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$dShow
                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow2
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1cbd7ce300d304cce6a10cb132a40d81
  $s$fElt(,,)_$s$fShow(,,)_$cshowList ::
    [(GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)]
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
                   (GHC.Show.$fShow(,,)_$cshowsPrec
                      @ GHC.Word.Word32
                      @ GHC.Word.Word32
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$dShow
                      Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$dShow
                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dShow2
                      GHC.Show.shows22)
                   eta
                   eta1) -}
cfc4cbf974a211ba99b4e9467e4a55dc
  $s$fElt(,,,) ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Int, GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Word.Word32, GHC.Word.Word32, GHC.Types.Int)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,,)_$cp1Elt
                     @ GHC.Types.Int
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,,)_$cp2Elt
                     @ GHC.Types.Int
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,,)_$cp3Elt
                     @ GHC.Types.Int
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,,)_$cp4Elt
                     @ GHC.Types.Int
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,,)_$celtType
                     @ GHC.Types.Int
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,,)_$cfromElt
                     @ GHC.Types.Int
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  (Data.Array.Accelerate.Array.Sugar.$fElt(,,,)_$ctoElt
                     @ GHC.Types.Int
                     @ GHC.Word.Word32
                     @ GHC.Word.Word32
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                     Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
99afaa3968a7c1dc28c29a6d37e05757
  $sprintf6 ::
    GHC.Base.String -> [Text.Printf.UPrintf] -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (fmts :: GHC.Base.String)
                   (args :: [Text.Printf.UPrintf]) ->
                 GHC.Base.map
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   Text.Printf.$fIsCharChar_$cfromChar
                   (Text.Printf.uprintfs
                      fmts
                      (GHC.List.reverse1
                         @ Text.Printf.UPrintf
                         args
                         (GHC.Types.[] @ Text.Printf.UPrintf))
                      (GHC.Types.[] @ GHC.Types.Char))) -}
e3aca37cfaf8821c8d571a3262af0280
  $tc'C:RealFloat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4532255353278483440##
                   1864471200327479096##
                   Data.Array.Accelerate.Classes.RealFloat.$trModule
                   Data.Array.Accelerate.Classes.RealFloat.$tc'C:RealFloat1) -}
92dca643f0e3eb42964f499ab693056d
  $tc'C:RealFloat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:RealFloat"#) -}
9d1a38595974bd74a93e4d512e96ac70
  $tcRealFloat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4799569246752956409##
                   2580155198063248525##
                   Data.Array.Accelerate.Classes.RealFloat.$trModule
                   Data.Array.Accelerate.Classes.RealFloat.$tcRealFloat1) -}
f7ac8a59d52f12c2d46f303eac4a496a
  $tcRealFloat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RealFloat"#) -}
c9662cdf43f37614b493110389ca5153
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Classes.RealFloat.$trModule2
                   Data.Array.Accelerate.Classes.RealFloat.$trModule1) -}
efaa16c33fc8485ba0bd421417aa8e57
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Data.Array.Accelerate.Classes.RealFloat"#) -}
cd17e755fc8ba6cf7b8ba6a390f404cc
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
39e76263e57598be0722ad2faacd512c
  $w$cexponent ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CDouble) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int64, GHC.Types.Int)
                   = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f64_decode
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word64
                               @ Foreign.C.Types.CDouble
                               Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                               Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble52
                               w)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) of ww { (#,,#) ww1 ww2 ww3 ->
                     (Data.Array.Accelerate.Smart.Tuple
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ (GHC.Int.Int64, GHC.Types.Int)
                        ww1
                        ww2
                        ww3)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                   GHC.Types.Int)>_N) }
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Int.Int64, GHC.Int.Int64)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Int.Int64)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int64), GHC.Int.Int64)
                             @ GHC.Int.Int64
                             @ ((), GHC.Int.Int64)
                             @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt64
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int64)
                                @ GHC.Int.Int64
                                @ ()
                                @~ <((), GHC.Int.Int64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.Prj
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Int.Int64
                                   @ (GHC.Int.Int64, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                   (Data.Array.Accelerate.Smart.tix1
                                      @ ()
                                      @ GHC.Int.Int64
                                      @ GHC.Types.Int)
                                     `cast`
                                   (Data.Array.Accelerate.Product.TupleIdx
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                                      <GHC.Int.Int64>_N)_R
                                   e)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble61
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Int.Int64)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N),
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.Prj
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Int.Int64, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Product.$WZeroTupIdx
                                      @ GHC.Types.Int
                                      @ ((), GHC.Int.Int64))
                                     `cast`
                                   (Data.Array.Accelerate.Product.TupleIdx
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                                      <GHC.Types.Int>_N)_R
                                   e)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble32
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) #)) -}
ea808e1888f613c67be94374f7f75d05
  $w$cexponent1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CFloat) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int)
                   = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               @ Foreign.C.Types.CFloat
                               Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat43
                               w)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                     (Data.Array.Accelerate.Smart.Cond
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ (GHC.Int.Int32, GHC.Types.Int)
                        ww1
                        ww2
                        ww3
                        ww4)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                   GHC.Types.Int)>_N) }
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Int.Int64, GHC.Int.Int64)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Int.Int64)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int64), GHC.Int.Int64)
                             @ GHC.Int.Int64
                             @ ((), GHC.Int.Int64)
                             @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt64
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int64)
                                @ GHC.Int.Int64
                                @ ()
                                @~ <((), GHC.Int.Int64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Int.Int64
                                   @ GHC.Int.Int32
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat38
                                   (Data.Array.Accelerate.Smart.Prj
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Int.Int32
                                      @ (GHC.Int.Int32, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                      (Data.Array.Accelerate.Smart.tix1
                                         @ ()
                                         @ GHC.Int.Int32
                                         @ GHC.Types.Int)
                                        `cast`
                                      (Data.Array.Accelerate.Product.TupleIdx
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                         <GHC.Int.Int32>_N)_R
                                      e)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble61
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Int.Int64)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N),
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.Prj
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Int.Int32, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Product.$WZeroTupIdx
                                      @ GHC.Types.Int
                                      @ ((), GHC.Int.Int32))
                                     `cast`
                                   (Data.Array.Accelerate.Product.TupleIdx
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                      <GHC.Types.Int>_N)_R
                                   e)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat28
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) #)) -}
2528d7417fb3bd4b0ad3838b2b4b35ac
  $w$cexponent2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Types.Double) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int64, GHC.Types.Int)
                   = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f64_decode
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word64
                               @ GHC.Types.Double
                               Data.Array.Accelerate.Array.Sugar.$fEltDouble
                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                               Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble12
                               w)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) of ww { (#,,#) ww1 ww2 ww3 ->
                     (Data.Array.Accelerate.Smart.Tuple
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ (GHC.Int.Int64, GHC.Types.Int)
                        ww1
                        ww2
                        ww3)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                   GHC.Types.Int)>_N) }
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Int.Int64, GHC.Int.Int64)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Int.Int64)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int64), GHC.Int.Int64)
                             @ GHC.Int.Int64
                             @ ((), GHC.Int.Int64)
                             @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt64
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int64)
                                @ GHC.Int.Int64
                                @ ()
                                @~ <((), GHC.Int.Int64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.Prj
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Int.Int64
                                   @ (GHC.Int.Int64, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                   (Data.Array.Accelerate.Smart.tix1
                                      @ ()
                                      @ GHC.Int.Int64
                                      @ GHC.Types.Int)
                                     `cast`
                                   (Data.Array.Accelerate.Product.TupleIdx
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                                      <GHC.Int.Int64>_N)_R
                                   e)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble61
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Int.Int64)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N),
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.Prj
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Int.Int64, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Product.$WZeroTupIdx
                                      @ GHC.Types.Int
                                      @ ((), GHC.Int.Int64))
                                     `cast`
                                   (Data.Array.Accelerate.Product.TupleIdx
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                                      <GHC.Types.Int>_N)_R
                                   e)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble32
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) #)) -}
06d6f9b909a2bfbd8e55b4f00bed6e6f
  $w$cexponent3 :: GHC.Prim.Void# -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>x, Inline: [0] -}
3b21960d48f3cf6ec747ae958baa09c8
  $w$cexponent4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Types.Float) ->
                 let {
                   e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int)
                   = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               @ GHC.Types.Float
                               Data.Array.Accelerate.Array.Sugar.$fEltFloat
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat12
                               w)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                     (Data.Array.Accelerate.Smart.Cond
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Exp
                        @ (GHC.Int.Int32, GHC.Types.Int)
                        ww1
                        ww2
                        ww3
                        ww4)
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                   GHC.Types.Int)>_N) }
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Int.Int64, GHC.Int.Int64)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Int.Int64)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int64), GHC.Int.Int64)
                             @ GHC.Int.Int64
                             @ ((), GHC.Int.Int64)
                             @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt64
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int64)
                                @ GHC.Int.Int64
                                @ ()
                                @~ <((), GHC.Int.Int64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Int.Int64
                                   @ GHC.Int.Int32
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat38
                                   (Data.Array.Accelerate.Smart.Prj
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Int.Int32
                                      @ (GHC.Int.Int32, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                      (Data.Array.Accelerate.Smart.tix1
                                         @ ()
                                         @ GHC.Int.Int32
                                         @ GHC.Types.Int)
                                        `cast`
                                      (Data.Array.Accelerate.Product.TupleIdx
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                         <GHC.Int.Int32>_N)_R
                                      e)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble61
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Int.Int64)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N),
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.Prj
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Int.Int32, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                                   Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Product.$WZeroTupIdx
                                      @ GHC.Types.Int
                                      @ ((), GHC.Int.Int32))
                                     `cast`
                                   (Data.Array.Accelerate.Product.TupleIdx
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                      <GHC.Types.Int>_N)_R
                                   e)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat28
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) #)) -}
76be7beaabd0dcd2538c2225a326091d
  $w$cscaleFloat ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            Foreign.C.Types.CDouble,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CDouble) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCDouble,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Bool, GHC.Types.Bool)
                       Data.Array.Accelerate.Smart.$s$fElt(,)
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.AST.$WPrimLOr
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Bool, GHC.Types.Bool)
                          Data.Array.Accelerate.Smart.$s$fElt(,)
                          Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Bool), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ((), GHC.Types.Bool)
                             @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Bool)
                                @ GHC.Types.Bool
                                @ ()
                                @~ <((), GHC.Types.Bool)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Bool
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ()
                                            @~ <((), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            w)
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                             (Data.Array.Accelerate.Smart.PrimApp
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ GHC.Types.Bool
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                Data.Array.Accelerate.AST.$WPrimLOr
                                (Data.Array.Accelerate.Smart.Tuple
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (GHC.Types.Bool, GHC.Types.Bool)
                                   Data.Array.Accelerate.Smart.$s$fElt(,)
                                   Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ((), GHC.Types.Bool)
                                      @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ ((), GHC.Types.Bool)
                                         @ GHC.Types.Bool
                                         @ ()
                                         @~ <((), GHC.Types.Bool)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                            @ Data.Array.Accelerate.Smart.Exp)
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Bool
                                            @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                                            Data.Array.Accelerate.Classes.Eq.$fEqCDouble_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                                            Data.Array.Accelerate.Classes.Eq.$fEqCDouble_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (Foreign.C.Types.CDouble, Foreign.C.Types.CDouble)
                                               Data.Array.Accelerate.Classes.Eq.$fEqCDouble_lvl196
                                               Data.Array.Accelerate.Classes.Eq.$fEqCDouble_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), Foreign.C.Types.CDouble),
                                                     Foreign.C.Types.CDouble)
                                                  @ Foreign.C.Types.CDouble
                                                  @ ((), Foreign.C.Types.CDouble)
                                                  @~ <(((), Foreign.C.Types.CDouble),
                                                       Foreign.C.Types.CDouble)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ ((), Foreign.C.Types.CDouble)
                                                     @ Foreign.C.Types.CDouble
                                                     @ ()
                                                     @~ <((), Foreign.C.Types.CDouble)>_N
                                                     Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                        @ Data.Array.Accelerate.Smart.Exp)
                                                     w1)
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble55
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <Foreign.C.Types.CDouble>_N
                                                            <Foreign.C.Types.CDouble>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CDouble,
                                                                                          Foreign.C.Types.CDouble)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                      (Data.Array.Accelerate.Smart.PrimApp
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ GHC.Types.Bool
                                         @ (GHC.Types.Bool, GHC.Types.Bool)
                                         Data.Array.Accelerate.Smart.$s$fElt(,)
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         Data.Array.Accelerate.AST.$WPrimLOr
                                         (Data.Array.Accelerate.Smart.Tuple
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (GHC.Types.Bool, GHC.Types.Bool)
                                            Data.Array.Accelerate.Smart.$s$fElt(,)
                                            Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                               @ GHC.Types.Bool
                                               @ ((), GHC.Types.Bool)
                                               @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltBool
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ ((), GHC.Types.Bool)
                                                  @ GHC.Types.Bool
                                                  @ ()
                                                  @~ <((), GHC.Types.Bool)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                     @ Data.Array.Accelerate.Smart.Exp)
                                                  (Data.Array.Accelerate.Smart.PrimApp
                                                     @ Data.Array.Accelerate.Smart.Acc
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ GHC.Types.Bool
                                                     @ Foreign.C.Types.CDouble
                                                     Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble54
                                                     w1)
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                               (Data.Array.Accelerate.Smart.PrimApp
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ GHC.Types.Bool
                                                  @ Foreign.C.Types.CDouble
                                                  Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble53
                                                  w1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                              `cast`
                                            (Data.Array.Accelerate.Array.Sugar.Tuple
                                               <Data.Array.Accelerate.Smart.Exp>_R
                                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                         <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                                       GHC.Types.Bool)>_N))
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Tuple
                                      <Data.Array.Accelerate.Smart.Exp>_R
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                              GHC.Types.Bool)>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                     GHC.Types.Bool)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w1,
                    let {
                      e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int64, GHC.Types.Int)
                      = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f64_decode
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word64
                                  @ Foreign.C.Types.CDouble
                                  Data.Array.Accelerate.Array.Sugar.$fEltCDouble
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble52
                                  w1)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) of ww { (#,,#) ww1 ww2 ww3 ->
                        (Data.Array.Accelerate.Smart.Tuple
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (GHC.Int.Int64, GHC.Types.Int)
                           ww1
                           ww2
                           ww3)
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                      GHC.Types.Int)>_N) }
                    } in
                    (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble46
                       (Data.Array.Accelerate.Smart.Prj
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int64
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                          Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          (Data.Array.Accelerate.Smart.tix1
                             @ ()
                             @ GHC.Int.Int64
                             @ GHC.Types.Int)
                            `cast`
                          (Data.Array.Accelerate.Product.TupleIdx
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                             <GHC.Int.Int64>_N)_R
                          e)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.Prj
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (GHC.Int.Int64, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Product.$WZeroTupIdx
                                         @ GHC.Types.Int
                                         @ ((), GHC.Int.Int64))
                                        `cast`
                                      (Data.Array.Accelerate.Product.TupleIdx
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                                         <GHC.Types.Int>_N)_R
                                      e)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl198
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble43
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble25
                                                  w)
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CDouble>_N) #)) -}
ef735df5a1836ce727e13ce6214b70cb
  $w$cscaleFloat1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CFloat,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CFloat) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCFloat,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Bool, GHC.Types.Bool)
                       Data.Array.Accelerate.Smart.$s$fElt(,)
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.AST.$WPrimLOr
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Bool, GHC.Types.Bool)
                          Data.Array.Accelerate.Smart.$s$fElt(,)
                          Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Bool), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ((), GHC.Types.Bool)
                             @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Bool)
                                @ GHC.Types.Bool
                                @ ()
                                @~ <((), GHC.Types.Bool)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Bool
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ()
                                            @~ <((), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            w)
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                             (Data.Array.Accelerate.Smart.PrimApp
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ GHC.Types.Bool
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                Data.Array.Accelerate.AST.$WPrimLOr
                                (Data.Array.Accelerate.Smart.Tuple
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (GHC.Types.Bool, GHC.Types.Bool)
                                   Data.Array.Accelerate.Smart.$s$fElt(,)
                                   Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ((), GHC.Types.Bool)
                                      @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ ((), GHC.Types.Bool)
                                         @ GHC.Types.Bool
                                         @ ()
                                         @~ <((), GHC.Types.Bool)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                            @ Data.Array.Accelerate.Smart.Exp)
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Bool
                                            @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                                            Data.Array.Accelerate.Classes.Eq.$fEqCFloat_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                                            Data.Array.Accelerate.Classes.Eq.$fEqCFloat_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (Foreign.C.Types.CFloat, Foreign.C.Types.CFloat)
                                               Data.Array.Accelerate.Classes.Eq.$fEqCFloat_lvl196
                                               Data.Array.Accelerate.Classes.Eq.$fEqCFloat_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), Foreign.C.Types.CFloat),
                                                     Foreign.C.Types.CFloat)
                                                  @ Foreign.C.Types.CFloat
                                                  @ ((), Foreign.C.Types.CFloat)
                                                  @~ <(((), Foreign.C.Types.CFloat),
                                                       Foreign.C.Types.CFloat)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ ((), Foreign.C.Types.CFloat)
                                                     @ Foreign.C.Types.CFloat
                                                     @ ()
                                                     @~ <((), Foreign.C.Types.CFloat)>_N
                                                     Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                        @ Data.Array.Accelerate.Smart.Exp)
                                                     w1)
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat46
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <Foreign.C.Types.CFloat>_N
                                                            <Foreign.C.Types.CFloat>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CFloat,
                                                                                          Foreign.C.Types.CFloat)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                      (Data.Array.Accelerate.Smart.PrimApp
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ GHC.Types.Bool
                                         @ (GHC.Types.Bool, GHC.Types.Bool)
                                         Data.Array.Accelerate.Smart.$s$fElt(,)
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         Data.Array.Accelerate.AST.$WPrimLOr
                                         (Data.Array.Accelerate.Smart.Tuple
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (GHC.Types.Bool, GHC.Types.Bool)
                                            Data.Array.Accelerate.Smart.$s$fElt(,)
                                            Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                               @ GHC.Types.Bool
                                               @ ((), GHC.Types.Bool)
                                               @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltBool
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ ((), GHC.Types.Bool)
                                                  @ GHC.Types.Bool
                                                  @ ()
                                                  @~ <((), GHC.Types.Bool)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                     @ Data.Array.Accelerate.Smart.Exp)
                                                  (Data.Array.Accelerate.Smart.PrimApp
                                                     @ Data.Array.Accelerate.Smart.Acc
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ GHC.Types.Bool
                                                     @ Foreign.C.Types.CFloat
                                                     Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat45
                                                     w1)
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                               (Data.Array.Accelerate.Smart.PrimApp
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ GHC.Types.Bool
                                                  @ Foreign.C.Types.CFloat
                                                  Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat44
                                                  w1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                              `cast`
                                            (Data.Array.Accelerate.Array.Sugar.Tuple
                                               <Data.Array.Accelerate.Smart.Exp>_R
                                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                         <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                                       GHC.Types.Bool)>_N))
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Tuple
                                      <Data.Array.Accelerate.Smart.Exp>_R
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                              GHC.Types.Bool)>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                     GHC.Types.Bool)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w1,
                    let {
                      e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int)
                      = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word32
                                  @ Foreign.C.Types.CFloat
                                  Data.Array.Accelerate.Array.Sugar.$fEltCFloat
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat43
                                  w1)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                        (Data.Array.Accelerate.Smart.Cond
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (GHC.Int.Int32, GHC.Types.Int)
                           ww1
                           ww2
                           ww3
                           ww4)
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                      GHC.Types.Int)>_N) }
                    } in
                    (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat39
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int64
                          @ GHC.Int.Int32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat38
                          (Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Int.Int32
                             @ (GHC.Int.Int32, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                             Data.Array.Accelerate.Array.Sugar.$fEltInt32
                             (Data.Array.Accelerate.Smart.tix1
                                @ ()
                                @ GHC.Int.Int32
                                @ GHC.Types.Int)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                <GHC.Int.Int32>_N)_R
                             e)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.Prj
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (GHC.Int.Int32, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Product.$WZeroTupIdx
                                         @ GHC.Types.Int
                                         @ ((), GHC.Int.Int32))
                                        `cast`
                                      (Data.Array.Accelerate.Product.TupleIdx
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                         <GHC.Types.Int>_N)_R
                                      e)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl198
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat36
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat21
                                                  w)
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CFloat>_N) #)) -}
9cf3073ad9b4b98bd70af31bc9a7928a
  $w$cscaleFloat2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Double
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Double,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Double,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Double #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Double) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltDouble,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Bool, GHC.Types.Bool)
                       Data.Array.Accelerate.Smart.$s$fElt(,)
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.AST.$WPrimLOr
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Bool, GHC.Types.Bool)
                          Data.Array.Accelerate.Smart.$s$fElt(,)
                          Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Bool), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ((), GHC.Types.Bool)
                             @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Bool)
                                @ GHC.Types.Bool
                                @ ()
                                @~ <((), GHC.Types.Bool)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Bool
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ()
                                            @~ <((), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            w)
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                             (Data.Array.Accelerate.Smart.PrimApp
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ GHC.Types.Bool
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                Data.Array.Accelerate.AST.$WPrimLOr
                                (Data.Array.Accelerate.Smart.Tuple
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (GHC.Types.Bool, GHC.Types.Bool)
                                   Data.Array.Accelerate.Smart.$s$fElt(,)
                                   Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ((), GHC.Types.Bool)
                                      @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ ((), GHC.Types.Bool)
                                         @ GHC.Types.Bool
                                         @ ()
                                         @~ <((), GHC.Types.Bool)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                            @ Data.Array.Accelerate.Smart.Exp)
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Bool
                                            @ (GHC.Types.Double, GHC.Types.Double)
                                            Data.Array.Accelerate.Classes.Eq.$fEqDouble_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                                            Data.Array.Accelerate.Classes.Eq.$fEqDouble_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Double, GHC.Types.Double)
                                               Data.Array.Accelerate.Classes.Eq.$fEqDouble_lvl196
                                               Data.Array.Accelerate.Classes.Eq.$fEqDouble_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Double), GHC.Types.Double)
                                                  @ GHC.Types.Double
                                                  @ ((), GHC.Types.Double)
                                                  @~ <(((), GHC.Types.Double), GHC.Types.Double)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ ((), GHC.Types.Double)
                                                     @ GHC.Types.Double
                                                     @ ()
                                                     @~ <((), GHC.Types.Double)>_N
                                                     Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                        @ Data.Array.Accelerate.Smart.Exp)
                                                     w1)
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble15
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Double>_N
                                                            <GHC.Types.Double>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Double,
                                                                                          GHC.Types.Double)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                      (Data.Array.Accelerate.Smart.PrimApp
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ GHC.Types.Bool
                                         @ (GHC.Types.Bool, GHC.Types.Bool)
                                         Data.Array.Accelerate.Smart.$s$fElt(,)
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         Data.Array.Accelerate.AST.$WPrimLOr
                                         (Data.Array.Accelerate.Smart.Tuple
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (GHC.Types.Bool, GHC.Types.Bool)
                                            Data.Array.Accelerate.Smart.$s$fElt(,)
                                            Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                               @ GHC.Types.Bool
                                               @ ((), GHC.Types.Bool)
                                               @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltBool
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ ((), GHC.Types.Bool)
                                                  @ GHC.Types.Bool
                                                  @ ()
                                                  @~ <((), GHC.Types.Bool)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                     @ Data.Array.Accelerate.Smart.Exp)
                                                  (Data.Array.Accelerate.Smart.PrimApp
                                                     @ Data.Array.Accelerate.Smart.Acc
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ GHC.Types.Bool
                                                     @ GHC.Types.Double
                                                     Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble14
                                                     w1)
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                               (Data.Array.Accelerate.Smart.PrimApp
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ GHC.Types.Bool
                                                  @ GHC.Types.Double
                                                  Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble13
                                                  w1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                              `cast`
                                            (Data.Array.Accelerate.Array.Sugar.Tuple
                                               <Data.Array.Accelerate.Smart.Exp>_R
                                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                         <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                                       GHC.Types.Bool)>_N))
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Tuple
                                      <Data.Array.Accelerate.Smart.Exp>_R
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                              GHC.Types.Bool)>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                     GHC.Types.Bool)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w1,
                    let {
                      e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int64, GHC.Types.Int)
                      = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f64_decode
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word64
                                  @ GHC.Types.Double
                                  Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble12
                                  w1)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) of ww { (#,,#) ww1 ww2 ww3 ->
                        (Data.Array.Accelerate.Smart.Tuple
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (GHC.Int.Int64, GHC.Types.Int)
                           ww1
                           ww2
                           ww3)
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                      GHC.Types.Int)>_N) }
                    } in
                    (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble8
                       (Data.Array.Accelerate.Smart.Prj
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int64
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                          Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          (Data.Array.Accelerate.Smart.tix1
                             @ ()
                             @ GHC.Int.Int64
                             @ GHC.Types.Int)
                            `cast`
                          (Data.Array.Accelerate.Product.TupleIdx
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                             <GHC.Int.Int64>_N)_R
                          e)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.Prj
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (GHC.Int.Int64, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dElt2
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble_$dIsProduct
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Product.$WZeroTupIdx
                                         @ GHC.Types.Int
                                         @ ((), GHC.Int.Int64))
                                        `cast`
                                      (Data.Array.Accelerate.Product.TupleIdx
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Int.Int64>_N))
                                         <GHC.Types.Int>_N)_R
                                      e)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl198
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble43
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble25
                                                  w)
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Double>_N) #)) -}
dc9a2b4a1d97e1469d9e1f62c6b43f4f
  $w$cscaleFloat3 ::
    Data.Array.Accelerate.Classes.RealFloat.RealFloat a =>
    GHC.Prim.Int#
    -> Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <L,1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Array.Accelerate.Classes.RealFloat.RealFloat a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Data.Array.Accelerate.Smart.Exp a) ->
                 case ww of ds1 {
                   DEFAULT
                   -> let {
                        $dRealFrac :: Data.Array.Accelerate.Classes.RealFrac.RealFrac a
                        = Data.Array.Accelerate.Classes.RealFloat.$p1RealFloat @ a w
                      } in
                      let {
                        $dReal :: Data.Array.Accelerate.Classes.Real.Real a
                        = Data.Array.Accelerate.Classes.RealFrac.$p1RealFrac @ a $dRealFrac
                      } in
                      let {
                        $dReal1 :: GHC.Real.Real (Data.Array.Accelerate.Smart.Exp a)
                        = GHC.Classes.$p3(%,,%)
                            @ (Data.Array.Accelerate.Classes.Num.Num a)
                            @ (Data.Array.Accelerate.Classes.Ord.Ord a)
                            @ (GHC.Real.Real (Data.Array.Accelerate.Smart.Exp a))
                            $dReal
                      } in
                      case GHC.Classes.==
                             @ (Data.Array.Accelerate.Smart.Exp a)
                             (GHC.Classes.$p1Ord
                                @ (Data.Array.Accelerate.Smart.Exp a)
                                (GHC.Real.$p2Real @ (Data.Array.Accelerate.Smart.Exp a) $dReal1))
                             w1
                             (GHC.Num.fromInteger
                                @ (Data.Array.Accelerate.Smart.Exp a)
                                (GHC.Real.$p1Real @ (Data.Array.Accelerate.Smart.Exp a) $dReal1)
                                Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp6) of wild {
                        GHC.Types.False
                        -> case Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp5
                           ret_ty (Data.Array.Accelerate.Smart.Exp a)
                           of {}
                        GHC.Types.True -> w1 }
                   0# -> w1 }) -}
90d8d2e516d2240ef8b2c23d1d1aef0f
  $w$cscaleFloat4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Float
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Float,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Float,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Float #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Float) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltFloat,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Bool, GHC.Types.Bool)
                       Data.Array.Accelerate.Smart.$s$fElt(,)
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.AST.$WPrimLOr
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Bool, GHC.Types.Bool)
                          Data.Array.Accelerate.Smart.$s$fElt(,)
                          Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Bool), GHC.Types.Bool)
                             @ GHC.Types.Bool
                             @ ((), GHC.Types.Bool)
                             @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Bool)
                                @ GHC.Types.Bool
                                @ ()
                                @~ <((), GHC.Types.Bool)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Bool
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ()
                                            @~ <((), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            w)
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble57
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                             (Data.Array.Accelerate.Smart.PrimApp
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ GHC.Types.Bool
                                @ (GHC.Types.Bool, GHC.Types.Bool)
                                Data.Array.Accelerate.Smart.$s$fElt(,)
                                Data.Array.Accelerate.Array.Sugar.$fEltBool
                                Data.Array.Accelerate.AST.$WPrimLOr
                                (Data.Array.Accelerate.Smart.Tuple
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (GHC.Types.Bool, GHC.Types.Bool)
                                   Data.Array.Accelerate.Smart.$s$fElt(,)
                                   Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                      @ GHC.Types.Bool
                                      @ ((), GHC.Types.Bool)
                                      @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ ((), GHC.Types.Bool)
                                         @ GHC.Types.Bool
                                         @ ()
                                         @~ <((), GHC.Types.Bool)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                            @ Data.Array.Accelerate.Smart.Exp)
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Bool
                                            @ (GHC.Types.Float, GHC.Types.Float)
                                            Data.Array.Accelerate.Classes.Eq.$fEqFloat_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                                            Data.Array.Accelerate.Classes.Eq.$fEqFloat_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Float, GHC.Types.Float)
                                               Data.Array.Accelerate.Classes.Eq.$fEqFloat_lvl196
                                               Data.Array.Accelerate.Classes.Eq.$fEqFloat_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Float), GHC.Types.Float)
                                                  @ GHC.Types.Float
                                                  @ ((), GHC.Types.Float)
                                                  @~ <(((), GHC.Types.Float), GHC.Types.Float)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltFloat
                                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ ((), GHC.Types.Float)
                                                     @ GHC.Types.Float
                                                     @ ()
                                                     @~ <((), GHC.Types.Float)>_N
                                                     Data.Array.Accelerate.Array.Sugar.$fEltFloat
                                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                        @ Data.Array.Accelerate.Smart.Exp)
                                                     w1)
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat15
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Float>_N
                                                            <GHC.Types.Float>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Float,
                                                                                          GHC.Types.Float)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                      (Data.Array.Accelerate.Smart.PrimApp
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ GHC.Types.Bool
                                         @ (GHC.Types.Bool, GHC.Types.Bool)
                                         Data.Array.Accelerate.Smart.$s$fElt(,)
                                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                                         Data.Array.Accelerate.AST.$WPrimLOr
                                         (Data.Array.Accelerate.Smart.Tuple
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (GHC.Types.Bool, GHC.Types.Bool)
                                            Data.Array.Accelerate.Smart.$s$fElt(,)
                                            Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (((), GHC.Types.Bool), GHC.Types.Bool)
                                               @ GHC.Types.Bool
                                               @ ((), GHC.Types.Bool)
                                               @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltBool
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ ((), GHC.Types.Bool)
                                                  @ GHC.Types.Bool
                                                  @ ()
                                                  @~ <((), GHC.Types.Bool)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                     @ Data.Array.Accelerate.Smart.Exp)
                                                  (Data.Array.Accelerate.Smart.PrimApp
                                                     @ Data.Array.Accelerate.Smart.Acc
                                                     @ Data.Array.Accelerate.Smart.Exp
                                                     @ GHC.Types.Bool
                                                     @ GHC.Types.Float
                                                     Data.Array.Accelerate.Array.Sugar.$fEltFloat
                                                     Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                     Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat14
                                                     w1)
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                               (Data.Array.Accelerate.Smart.PrimApp
                                                  @ Data.Array.Accelerate.Smart.Acc
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ GHC.Types.Bool
                                                  @ GHC.Types.Float
                                                  Data.Array.Accelerate.Array.Sugar.$fEltFloat
                                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat13
                                                  w1)
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                              `cast`
                                            (Data.Array.Accelerate.Array.Sugar.Tuple
                                               <Data.Array.Accelerate.Smart.Exp>_R
                                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                         <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                                       GHC.Types.Bool)>_N))
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Tuple
                                      <Data.Array.Accelerate.Smart.Exp>_R
                                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                              GHC.Types.Bool)>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                     GHC.Types.Bool)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w1,
                    let {
                      e :: Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int)
                      = case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f32_decode
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word32
                                  @ GHC.Types.Float
                                  Data.Array.Accelerate.Array.Sugar.$fEltFloat
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat12
                                  w1)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                        (Data.Array.Accelerate.Smart.Cond
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (GHC.Int.Int32, GHC.Types.Int)
                           ww1
                           ww2
                           ww3
                           ww4)
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                      GHC.Types.Int)>_N) }
                    } in
                    (Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat8
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int64
                          @ GHC.Int.Int32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat38
                          (Data.Array.Accelerate.Smart.Prj
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Int.Int32
                             @ (GHC.Int.Int32, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                             Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                             Data.Array.Accelerate.Array.Sugar.$fEltInt32
                             (Data.Array.Accelerate.Smart.tix1
                                @ ()
                                @ GHC.Int.Int32
                                @ GHC.Types.Int)
                               `cast`
                             (Data.Array.Accelerate.Product.TupleIdx
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                <GHC.Int.Int32>_N)_R
                             e)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                             Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.Prj
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (GHC.Int.Int32, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
                                      Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$dIsProduct
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Product.$WZeroTupIdx
                                         @ GHC.Types.Int
                                         @ ((), GHC.Int.Int32))
                                        `cast`
                                      (Data.Array.Accelerate.Product.TupleIdx
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Int.Int32>_N))
                                         <GHC.Types.Int>_N)_R
                                      e)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (GHC.Types.Int, GHC.Types.Int)
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl198
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Int, GHC.Types.Int)
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Int), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Int)
                                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat36
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                               Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat21
                                                  w)
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Float>_N) #)) -}
17013bb80acf53a6ab31f6924b9dc8e5
  $w$csignificand ::
    GHC.Prim.Void# -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 1, Strictness: <L,U>x, Inline: [0] -}
507bfaba603907db0bd29f4b111ce807
  $wieee754_f32_decode ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (GHC.Int.Int32, GHC.Types.Int),
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int),
          Data.Array.Accelerate.Smart.Exp (GHC.Int.Int32, GHC.Types.Int) #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
1c230431a4c3af34a2ef878a8e9c6f79
  $wieee754_f64_decode ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            (GHC.Int.Int64, GHC.Types.Int),
          Data.Array.Accelerate.Array.Sugar.IsTuple
            (GHC.Int.Int64, GHC.Types.Int),
          Data.Array.Accelerate.Array.Sugar.Tuple
            Data.Array.Accelerate.Smart.Exp
            (Data.Array.Accelerate.Array.Sugar.TupleRepr
               (GHC.Int.Int64, GHC.Types.Int)) #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
00ef28e1ee85ae838321e71004da4dc0
  class (Data.Array.Accelerate.Classes.RealFrac.RealFrac a,
         Data.Array.Accelerate.Classes.Floating.Floating a) =>
        RealFloat a where
    floatRadix :: Data.Array.Accelerate.Smart.Exp a
                  -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    default floatRadix :: GHC.Float.RealFloat a =>
                          Data.Array.Accelerate.Smart.Exp a
                          -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    floatDigits :: Data.Array.Accelerate.Smart.Exp a
                   -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    default floatDigits :: GHC.Float.RealFloat a =>
                           Data.Array.Accelerate.Smart.Exp a
                           -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    floatRange :: Data.Array.Accelerate.Smart.Exp a
                  -> (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
                      Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
    default floatRange :: GHC.Float.RealFloat a =>
                          Data.Array.Accelerate.Smart.Exp a
                          -> (Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
                              Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
    decodeFloat :: Data.Array.Accelerate.Smart.Exp a
                   -> (Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
                       Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
    encodeFloat :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
                   -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                   -> Data.Array.Accelerate.Smart.Exp a
    default encodeFloat :: (Data.Array.Accelerate.Classes.FromIntegral.FromIntegral
                              GHC.Types.Int a,
                            Data.Array.Accelerate.Classes.FromIntegral.FromIntegral
                              GHC.Int.Int64 a) =>
                           Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
                           -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                           -> Data.Array.Accelerate.Smart.Exp a
    exponent :: Data.Array.Accelerate.Smart.Exp a
                -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    significand :: Data.Array.Accelerate.Smart.Exp a
                   -> Data.Array.Accelerate.Smart.Exp a
    scaleFloat :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                  -> Data.Array.Accelerate.Smart.Exp a
                  -> Data.Array.Accelerate.Smart.Exp a
    isNaN :: Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    isInfinite :: Data.Array.Accelerate.Smart.Exp a
                  -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    isDenormalized :: Data.Array.Accelerate.Smart.Exp a
                      -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    isNegativeZero :: Data.Array.Accelerate.Smart.Exp a
                      -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    isIEEE :: Data.Array.Accelerate.Smart.Exp a
              -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    default isIEEE :: GHC.Float.RealFloat a =>
                      Data.Array.Accelerate.Smart.Exp a
                      -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    atan2 :: Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp a
    {-# MINIMAL decodeFloat, isNaN, isInfinite, isDenormalized,
                isNegativeZero, atan2 #-}
56aed1d21062f534672121bb25562731
  ieee754_f64_decode ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp (GHC.Int.Int64, GHC.Types.Int)
  {- Arity: 1, Strictness: <L,U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 case Data.Array.Accelerate.Classes.RealFloat.$wieee754_f64_decode
                        w of ww { (#,,#) ww1 ww2 ww3 ->
                 (Data.Array.Accelerate.Smart.Tuple
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ (GHC.Int.Int64, GHC.Types.Int)
                    ww1
                    ww2
                    ww3)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                               GHC.Types.Int)>_N) }) -}
instance Data.Array.Accelerate.Classes.RealFloat.RealFloat [Foreign.C.Types.CDouble]
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCDouble
instance Data.Array.Accelerate.Classes.RealFloat.RealFloat [Foreign.C.Types.CFloat]
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat
instance Data.Array.Accelerate.Classes.RealFloat.RealFloat [GHC.Types.Double]
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatDouble
instance GHC.Float.RealFloat [Data.Array.Accelerate.Smart.Exp]
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatExp
instance Data.Array.Accelerate.Classes.RealFloat.RealFloat [GHC.Types.Float]
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatFloat
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fElt(,) @ Int32 @ Int" [ALWAYS] forall ($dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                   GHC.Types.Int)
                                                                                      ($dElt :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                  GHC.Int.Int32)
  Data.Array.Accelerate.Array.Sugar.$fElt(,) @ GHC.Int.Int32
                                             @ GHC.Types.Int
                                             $dElt
                                             $dElt1
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fElt(,)_$cfromElt @ Int32 @ Int" [ALWAYS] forall ($dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                             GHC.Types.Int)
                                                                                                ($dElt :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                            GHC.Int.Int32)
  Data.Array.Accelerate.Array.Sugar.$fElt(,)_$cfromElt @ GHC.Int.Int32
                                                       @ GHC.Types.Int
                                                       $dElt
                                                       $dElt1
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)_$cfromElt
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fElt(,)_$cp1Elt @ Int32 @ Int" [ALWAYS] forall ($dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                           GHC.Types.Int)
                                                                                              ($dElt :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                          GHC.Int.Int32)
  Data.Array.Accelerate.Array.Sugar.$fElt(,)_$cp1Elt @ GHC.Int.Int32
                                                     @ GHC.Types.Int
                                                     $dElt
                                                     $dElt1
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)_$cp1Elt
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fElt(,)_$ctoElt @ Int32 @ Int" [ALWAYS] forall ($dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                           GHC.Types.Int)
                                                                                              ($dElt :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                          GHC.Int.Int32)
  Data.Array.Accelerate.Array.Sugar.$fElt(,)_$ctoElt @ GHC.Int.Int32
                                                     @ GHC.Types.Int
                                                     $dElt
                                                     $dElt1
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fElt(,)_$ctoElt
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fElt(,,) @ Word32 @ Word32 @ Int" [ALWAYS] forall ($dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                              GHC.Types.Int)
                                                                                                 ($dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                              GHC.Word.Word32)
                                                                                                 ($dElt :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                             GHC.Word.Word32)
  Data.Array.Accelerate.Array.Sugar.$fElt(,,) @ GHC.Word.Word32
                                              @ GHC.Word.Word32
                                              @ GHC.Types.Int
                                              $dElt
                                              $dElt1
                                              $dElt2
  = Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fElt(,,)_$cp1Elt @ Word32 @ Word32 @ Int" [ALWAYS] forall ($dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                                      GHC.Types.Int)
                                                                                                         ($dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                                      GHC.Word.Word32)
                                                                                                         ($dElt :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                                     GHC.Word.Word32)
  Data.Array.Accelerate.Array.Sugar.$fElt(,,)_$cp1Elt @ GHC.Word.Word32
                                                      @ GHC.Word.Word32
                                                      @ GHC.Types.Int
                                                      $dElt
                                                      $dElt1
                                                      $dElt2
  = Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fElt(,,)_$cp1Elt
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fElt(,,,) @ Int @ Word32 @ Word32 @ Int" [ALWAYS] forall ($dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                                     GHC.Types.Int)
                                                                                                        ($dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                                     GHC.Word.Word32)
                                                                                                        ($dElt1 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                                     GHC.Word.Word32)
                                                                                                        ($dElt :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                                                    GHC.Types.Int)
  Data.Array.Accelerate.Array.Sugar.$fElt(,,,) @ GHC.Types.Int
                                               @ GHC.Word.Word32
                                               @ GHC.Word.Word32
                                               @ GHC.Types.Int
                                               $dElt
                                               $dElt1
                                               $dElt2
                                               $dElt3
  = Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,,)
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fShow(,) @ Int32 @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                     GHC.Types.Int)
                                                                                       ($dShow :: GHC.Show.Show
                                                                                                    GHC.Int.Int32)
  GHC.Show.$fShow(,) @ GHC.Int.Int32 @ GHC.Types.Int $dShow $dShow1
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fShow(,)
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fShow(,)_$cshow @ Int32 @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                            GHC.Types.Int)
                                                                                              ($dShow :: GHC.Show.Show
                                                                                                           GHC.Int.Int32)
  GHC.Show.$fShow(,)_$cshow @ GHC.Int.Int32
                            @ GHC.Types.Int
                            $dShow
                            $dShow1
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fShow(,)_$cshow
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fShow(,)_$cshowList @ Int32 @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                                                GHC.Types.Int)
                                                                                                  ($dShow :: GHC.Show.Show
                                                                                                               GHC.Int.Int32)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Int.Int32
                                @ GHC.Types.Int
                                $dShow
                                $dShow1
  = Data.Array.Accelerate.Classes.RealFloat.$fRealFloatCFloat_$s$fShow(,)_$cshowList
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fShow(,,) @ Word32 @ Word32 @ Int" [ALWAYS] forall ($dShow2 :: GHC.Show.Show
                                                                                                                GHC.Types.Int)
                                                                                                  ($dShow1 :: GHC.Show.Show
                                                                                                                GHC.Word.Word32)
                                                                                                  ($dShow :: GHC.Show.Show
                                                                                                               GHC.Word.Word32)
  GHC.Show.$fShow(,,) @ GHC.Word.Word32
                      @ GHC.Word.Word32
                      @ GHC.Types.Int
                      $dShow
                      $dShow1
                      $dShow2
  = Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fShow(,,)
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fShow(,,)_$cshow @ Word32 @ Word32 @ Int" [ALWAYS] forall ($dShow2 :: GHC.Show.Show
                                                                                                                       GHC.Types.Int)
                                                                                                         ($dShow1 :: GHC.Show.Show
                                                                                                                       GHC.Word.Word32)
                                                                                                         ($dShow :: GHC.Show.Show
                                                                                                                      GHC.Word.Word32)
  GHC.Show.$fShow(,,)_$cshow @ GHC.Word.Word32
                             @ GHC.Word.Word32
                             @ GHC.Types.Int
                             $dShow
                             $dShow1
                             $dShow2
  = Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fShow(,,)_$cshow
"SPEC/Data.Array.Accelerate.Classes.RealFloat $fShow(,,)_$cshowList @ Word32 @ Word32 @ Int" [ALWAYS] forall ($dShow2 :: GHC.Show.Show
                                                                                                                           GHC.Types.Int)
                                                                                                             ($dShow1 :: GHC.Show.Show
                                                                                                                           GHC.Word.Word32)
                                                                                                             ($dShow :: GHC.Show.Show
                                                                                                                          GHC.Word.Word32)
  GHC.Show.$fShow(,,)_$cshowList @ GHC.Word.Word32
                                 @ GHC.Word.Word32
                                 @ GHC.Types.Int
                                 $dShow
                                 $dShow1
                                 $dShow2
  = Data.Array.Accelerate.Classes.RealFloat.$s$fElt(,,)_$s$fShow(,,)_$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

