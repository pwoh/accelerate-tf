
==================== FINAL INTERFACE ====================
2017-08-29 05:28:42.968043 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Trafo.Fusion 8002
  interface hash: 64857f2dd6d833d460fde83c082de6c0
  ABI hash: a33567e3a4daf2f7cc132972209a1b75
  export-list hash: bf192eeb0263b08288aae4b15dd53be7
  orphan hash: 95ecf91bf5570b454209140f3b9a5619
  flag hash: 10a6886b3be61533e0ea8f24d89febd9
  sig of: Nothing
  used TH splices: True
  where
exports:
  Data.Array.Accelerate.Trafo.Fusion.convertAcc
  Data.Array.Accelerate.Trafo.Fusion.convertAfun
  Data.Array.Accelerate.Trafo.Base.DelayedAcc
  Data.Array.Accelerate.Trafo.Base.DelayedAfun
  Data.Array.Accelerate.Trafo.Base.DelayedExp
  Data.Array.Accelerate.Trafo.Base.DelayedFun
  Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc{Data.Array.Accelerate.Trafo.Base.Delayed Data.Array.Accelerate.Trafo.Base.Manifest extentD indexD linearIndexD}
  Data.Array.Accelerate.Trafo.Base.DelayedOpenAfun
  Data.Array.Accelerate.Trafo.Base.DelayedOpenExp
  Data.Array.Accelerate.Trafo.Base.DelayedOpenFun
module dependencies: Data.Array.Accelerate.AST
                     Data.Array.Accelerate.Analysis.Hash
                     Data.Array.Accelerate.Analysis.Hash.TH
                     Data.Array.Accelerate.Analysis.Match
                     Data.Array.Accelerate.Analysis.Shape
                     Data.Array.Accelerate.Array.Data
                     Data.Array.Accelerate.Array.Representation
                     Data.Array.Accelerate.Array.Sugar
                     Data.Array.Accelerate.Array.Unique Data.Array.Accelerate.Debug
                     Data.Array.Accelerate.Debug.Flags
                     Data.Array.Accelerate.Debug.Monitoring
                     Data.Array.Accelerate.Debug.Stats Data.Array.Accelerate.Debug.Timed
                     Data.Array.Accelerate.Debug.Trace Data.Array.Accelerate.Error
                     Data.Array.Accelerate.Lifetime
                     Data.Array.Accelerate.Pretty.Graphviz
                     Data.Array.Accelerate.Pretty.Graphviz.Monad
                     Data.Array.Accelerate.Pretty.Graphviz.Type
                     Data.Array.Accelerate.Pretty.Print Data.Array.Accelerate.Product
                     Data.Array.Accelerate.Trafo.Algebra
                     Data.Array.Accelerate.Trafo.Base Data.Array.Accelerate.Trafo.Shrink
                     Data.Array.Accelerate.Trafo.Simplify
                     Data.Array.Accelerate.Trafo.Substitution Data.Array.Accelerate.Type
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3 template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unique-0@unique-0-9CJQKYGbqiDaFUmoekKeA
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt:Data.Label.Point
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Data
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Representation
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Sugar
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Product
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Trafo.Base
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Trafo.Substitution
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Type
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
import  -/  Data.Array.Accelerate.AST 4907563d36aadcb5fe024fe0eaf42ffa
  exports: 14f3cf8c02b472222e546556891c5be1
  Abody ee120ad61e0a5f248fbde7e991e9af28
  Acc a01eea241a2bac92d453216e0d79448e
  Acond 750209431eae401dfff3c860bd1e2fc6
  Aforeign 5214b73c1fba23d3d4e7f85cb199ac1c
  Afun 30d1ccfa7d785b48f1fe2113bd7841b4
  Alam 9e3e3605bc50ad599485b7c0977e13d9
  Alet 0ab0425bc7b0ec829dbc083ffa16825d
  Apply acd8c8af26b0a8b682df360df59fa8be
  Aprj 404b31d0a415df80893151ff13fb0846
  Atuple 902517e36fd9d4d0cfb6191b1c6684eb
  Avar b9746522dbbe78edef452606b6656a87
  Awhile 14384d8a9ba2da72092122c848e2ae32
  Backpermute 4f66d0e89ef4df5962354aa16441f617
  Body 1196576b2aa6a07bc2357625785ef2e5
  Boundary 710a652edeea6147a461e884a9d7e24b
  Clamp c3a43eecdb9882efc038c7b9062cdcb4
  Cond 85b737c39381609050fcedb2a2391a92
  Const d4b278465afaa56210a92bc3030b1c81
  Constant 109db35160e400a315f90946c081dc01
  Fold bb3f680fb271e4fc52befb09d536ab67
  Fold1 81a218046119358257d76f4180b62916
  Fold1Seg e17f7dec7f49bed9b09c5dddc31f075f
  FoldSeg 066501eca698e8d157f1bbd44032854e
  Foreign cd3ba341b3611dd6c5a93df013aa5a0f
  FromIndex 175bd7890f27a032cb2a1e79fa38d269
  Function 303d21de1401dc1e63266aacbd76779e
  Generate 36e058fa32bd3e74acd8e2c33b47dc54
  Idx 9e7661ad7cc1bdaa299ff04fb99275fb
  Index 63200e0b9961802f7b038a2e740789b0
  IndexAny 76a617483a4b1532550fe134ec1b4e43
  IndexCons a015173a5dad6ebd2b8e31b35afb501a
  IndexFull b79f06d91ed5766f10b485089815d3f3
  IndexHead 3f325360371c4024fd7e59caec7726dd
  IndexNil 8331ee2296cdcd4d19411e11e8205177
  IndexSlice 45dcf8fd2ee557f7e6b7acb3cb7bd68d
  IndexTail 08923ce42f0b849d79fabcb6207dc0a4
  Intersect d61777171aa2d140c0046919d45de878
  Lam 158725fe690b603ce6a570d589782162
  Let fb7635520863b39ad81ae4c22c0dfd53
  LinearIndex d5e9e584798a5b18adfd76ceee4f21f3
  Map c186fc6c7cc5f818dedf44e9c7679cfc
  Mirror f990633b0e9d96822dbfd328904ab57b
  OpenAcc 3461fc2319f9b06050cf56128e83b27c
  OpenAcc d85164a68dcedbc8a54813dd240745cc
  OpenAfun d85164a68dcedbc8a54813dd240745cc
  OpenExp d85164a68dcedbc8a54813dd240745cc
  OpenFun d85164a68dcedbc8a54813dd240745cc
  Permute 0d48aeaf25db12c40fda0dfdecef40cf
  PreBoundary f77d583ab18e537cb481471882c136a8
  PreExp e5bbd637882b51cd1da6e290359325bf
  PreFun d3bf8e354493ff12972ab24a46d8ebad
  PreOpenAcc 1c6afba98b6c67e35689096ef2f6efe3
  PreOpenAfun 2e727f8d346dd6a6266c06baf474000a
  PreOpenExp d3bf8e354493ff12972ab24a46d8ebad
  PreOpenFun d3bf8e354493ff12972ab24a46d8ebad
  PrimApp 4153e64d1996ff9e8d5bab83757d04cc
  PrimConst c3e9d3e0be46d673c989e142b6fb53f5
  Prj ea0969c2ebd78e8f97f90fdce0ec5b85
  Replicate b45b307c3ac5834be45157f9b97164b0
  Reshape 47f08dcad6d10e3aa1cb6093ba11dd85
  Scanl 396bf0430f22f20afe3957f5ca59a08b
  Scanl' 1adc9e003ccf30f16828abd0fd78615a
  Scanl1 1276c7f35ce3c67a27dcc2ffd5def021
  Scanr 1a875086cf9a77ee605ee5eb6845fb3d
  Scanr' 93cb828599b9e47e6605e12c5a38e182
  Scanr1 80c7de53ede553c41fe8bb104ed3dbc8
  Shape 188e3cfc394232139edff3a93b6fc738
  ShapeSize f339b41eb7026d658f318c6ff3b1ddbd
  Slice 0f021a8f0af5175920645825ac2450a8
  Stencil 09b6572f0048c550f2782ea5ac548286
  Stencil2 bbe92a77ce856793eceb2afaa356761b
  SuccIdx 076f2d7bd7da8ff1d9570f0dbeb5674a
  ToIndex 1778bb2206e9b9af2bfb73385aa8fcf6
  Transform 3346841e54e9c2cae2cf221c490a757d
  Tuple 286fa31822ac85195775eaca8264e583
  Union a7d3a050ed47fbfc04189bf738e5cbf8
  Unit 6a040b1551bc804afa771300d0236e16
  Use d69e2b4a5c6ddbf9268deeebd8e6f6e2
  Var 316870341ee21060a306c8836bf702a6
  While e1c4381be88ce0fc5eeff6f5cfbbbe14
  Wrap ebef9cf28c72cc8d1ebbffba633ea578
  ZeroIdx 2872af3fb6867732883d5517094bca30
  ZipWith 51d1ce30678f2f98e0a9db1215a02e6e
import  -/  Data.Array.Accelerate.Array.Representation 7ecc085451773e8538fbcc949c8f13b8
  exports: 572b3ca30546aa8fe21350a43e265cdd
  SliceIndex 23dde5ac3819531720383c4ce52892fc
import  -/  Data.Array.Accelerate.Array.Sugar 1095a84a969562bd64b7800341e0d23c
  exports: a6dd551b39ab2a3a217fc8c2a6979cd5
  ArrRepr 48c28c524980b12342608b2cad31d1b9
  Array 78f23e81404aaf1e43268a71a575425c
  Arrays 3cc6db7d6b3c36ee0c840e1566f75d38
  ArraysR 1eac944ac7c8e073edb268e364d17067
  ArraysRarray 7151e2c7198fa93142e66e2d2e06532e
  Atuple 6feaa0161ffad15a746afb867f21f70b
  Elt 78f23e81404aaf1e43268a71a575425c
  EltRepr 78f23e81404aaf1e43268a71a575425c
  IsAtuple 3cc6db7d6b3c36ee0c840e1566f75d38
  NilAtup cc36880f178a7e9e125505f43c8172e2
  NilTup 36796631cb3a95a68e6a4dde7e7b2bbe
  Shape 78f23e81404aaf1e43268a71a575425c
  SnocAtup 8508890a48fc19a3130443094eda67f2
  SnocTup ef3a739bcf04e48a53d49112dce542ea
  Tuple 878418f2d4c18f6518d438b74451ef4e
  TupleRepr 8aa32b8ecd758273647e9e2e97033eb7
  arrays 8f280417dcca648029fd19ae6c13f4f7
import  -/  Data.Array.Accelerate.Debug 48fd217a26d4240434223974d5084c0c
  exports: 7e8587d30c425be122b3b310eb4ec0ea
import  -/  Data.Array.Accelerate.Debug.Stats 233b556167dd26bfa71d8540af4d79bd
  knownBranch 53bbe56a36ff7b30b2054a14e7d6a097
  ruleFired c3be9536bf45c798d855857bd67bd5a1
  substitution 8d30b18fdbea434f732e01539cdc959a
import  -/  Data.Array.Accelerate.Error 9ed2d4a71009d558f562e118e9d36a23
  exports: f46a01ad5e78f9618f7a91c4ba90bc31
  Internal 354d17f13fa8c5b135052bcadc13dc67
  call 95bf4b02947c8c3e282c15050c022fa9
  internalError aa331c50846093a3a39d2946a445c28d
  message 43164dbb4cecc9911948fd9ecaf0a042
import  -/  Data.Array.Accelerate.Product 8b6346e847887a013338cfe4431f2f5a
  exports: aebe828f4ca2c96d5390ff50126a2bd3
  SuccTupIdx 0bc8a098c8f2d27bf7ec36e6968e021b
  TupleIdx 3dd7384d0a4490c82730ecfcb4d16f06
  ZeroTupIdx 807a291e8a84844e2c5f3d7ffa83d357
import  -/  Data.Array.Accelerate.Trafo.Base f39e4dfe1afe26017d51fdc8678d590f
  exports: 945cc7ccce908b35cd85c2d690c34974
  BaseEnv 0f1ab4a18cea79144b2c4c687c910327
  Delayed 9fa83aa3ab98d1ddedaaa13723aa2728
  DelayedAcc 0c76a4cd506faf34a041a1b8f5f9d836
  DelayedAfun ea901cebccdec28ff494c9bb1528b9e2
  DelayedExp 640ae199f0749bb86773d09e18a40802
  DelayedFun 8e2b801989cab3231e48097c7700ac36
  DelayedOpenAcc a9e20bdbb4f848e6fa3f8efaacdaa62d
  DelayedOpenAfun a9e20bdbb4f848e6fa3f8efaacdaa62d
  DelayedOpenExp 515662916d2a7d10916bb7025349cf87
  DelayedOpenFun 6cb2187aa320c413584725d63f29f96a
  Extend 51ee963679e9807db85679bf541b874d
  Kit 7736eeb535c49ebb0bc1fc50dc5eadf9
  Manifest 307ec78d8ea72508f1dd4645a3683725
  PushEnv 24f72ebe2c5eebb0e016a2d9d771e033
  append ee0e7fea82380178dc36888ef2f57369
  avarIn 08abe2702920a5e9ad6913fbe45b69c0
  bind 8db015f87d608e553bb07cf7f0d14526
  extentD cb8a74f4938cc602ee16bb6c1179e8be
  extract 7ce1d849d451d36397a64bdad0b53a87
  indexD 17bac837dd74e9c08d6a37bb7fc5e22d
  inject 937f2e9a44a79e69303905a2505cabf6
  kmap 5a2deb222adb385f71938210bbdc473b
  linearIndexD 900b7ebc5a25cb6c9d0f8d9831474864
  match 34f00e9fb250aca9b5d16a94e2ebf396
  sink b46a1d62c6690f34f388e77060587aa9
  sink1 808daccdcf3a514f1b17721df68e32de
import  -/  Data.Array.Accelerate.Trafo.Shrink 43e16357d55e3a65c98ce3f7cc040f6e
  exports: 1b181afc0b272f930ca63b5acbf2b41a
  UsesOfAcc 94d01bf56757a51bc7093741f15d5b6a
  usesOfPreAcc 36584686432c10701aeb8324efcd42ea
import  -/  Data.Array.Accelerate.Trafo.Simplify 4f833295490d168fbfb0321b4b861f91
  exports: 491ce05269c4660d27ef83f52f983a67
  Simplify dbbfe0d7bfea7a85540595261076cfe7
  simplify bbd8b7293d9946da1ed20d89eafd6515
import  -/  Data.Array.Accelerate.Trafo.Substitution 1ab9162bd3f0f153d1c21a8dd76bc781
  exports: 3e411ea0b6662b69d52e36eb3bfba800
  Sink 0f35c2a1006f7263a649bd2af71efd6f
  compose 57346eea1004cfcf10fbe630964e32c1
  rebuildA 955201f71f306550e8336c5367bfdb03
  subAtop e6bc0c2586c6e7948b537e1127b8779e
  weaken 288497aa259886b1e053b155671c75c5
  weakenE e0056bc04d7bee1f3efab4d6442e0704
import  -/  base-4.9.1.0:Data.Type.Equality e58d97d060ef5a0f7906bf33d6e50df2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
addDependentFile "/home/pwoh/.stack/programs/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
0b9c7e2fb8e6152465fe59bf47cf3415
  $fSimplifyCunctation ::
    Data.Array.Accelerate.Trafo.Base.Kit acc =>
    Data.Array.Accelerate.Trafo.Simplify.Simplify
      (Data.Array.Accelerate.Trafo.Fusion.Cunctation acc aenv a)
  DFunId
  {- Arity: 2,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(U,U(U)),A,A,A,A,C(C1(U)),C(U(U)),A)><S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                Data.Array.Accelerate.Trafo.Fusion.$fSimplifyCunctation_$csimplify
                  `cast`
                (forall (acc :: <* -> * -> *>_N) (aenv :: <*>_N) (a :: <*>_N).
                 <Data.Array.Accelerate.Trafo.Base.Kit acc>_R
                 ->_R Sym (Data.Array.Accelerate.Trafo.Simplify.N:Simplify[0]
                               <Data.Array.Accelerate.Trafo.Fusion.Cunctation acc aenv a>_N)) -}
0b9c7e2fb8e6152465fe59bf47cf3415
  $fSimplifyCunctation_$csimplify ::
    Data.Array.Accelerate.Trafo.Base.Kit acc =>
    Data.Array.Accelerate.Trafo.Fusion.Cunctation acc aenv a
    -> Data.Array.Accelerate.Trafo.Fusion.Cunctation acc aenv a
  {- Arity: 2,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(U,U(U)),A,A,A,A,C(C1(U)),C(U(U)),A)><S,1*U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ aenv
                   @ a
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   (eta :: Data.Array.Accelerate.Trafo.Fusion.Cunctation
                             acc aenv a) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 case eta of wild {
                   Data.Array.Accelerate.Trafo.Fusion.Done $dArrays v -> wild
                   Data.Array.Accelerate.Trafo.Fusion.Yield sh e cobox1 $dShape $dElt sh1 f
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.SliceShape sh)
                             @ Data.Array.Accelerate.Array.Sugar.Z
                             (Data.Array.Accelerate.Array.Sugar.$p6Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.SliceShape
                                                     sh>_N <Data.Array.Accelerate.Array.Sugar.Z>_N) of cobox2 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.CoSliceShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p5Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                     sh>_N <sh>_N) of cobox3 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.FullShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p4Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.FullShape
                                                     sh>_N <sh>_N) of cobox4 { DEFAULT ->
                      (Data.Array.Accelerate.Trafo.Fusion.Yield
                         @ acc
                         @ aenv
                         @ (Data.Array.Accelerate.Array.Sugar.Array sh e)
                         @ sh
                         @ e
                         @~ <Data.Array.Accelerate.Array.Sugar.Array sh e>_N
                         $dShape
                         $dElt
                         (Data.Array.Accelerate.Trafo.Simplify.$fSimplifyPreOpenExp_$csimplify
                            @ acc
                            @ sh
                            @ aenv
                            $dKit
                            (Data.Array.Accelerate.Array.Sugar.$p1Shape @ sh $dShape)
                            sh1)
                         (Data.Array.Accelerate.Trafo.Simplify.$fSimplifyPreOpenFun_$csimplify
                            @ acc
                            @ aenv
                            @ (sh -> e)
                            $dKit
                            f))
                        `cast`
                      (Data.Array.Accelerate.Trafo.Fusion.Cunctation
                         <acc>_R <aenv>_N (Sym cobox1))_R } } }
                   Data.Array.Accelerate.Trafo.Fusion.Step sh sh' a1 b cobox1 $dShape $dShape1 $dElt $dElt1 sh1 p f v
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.SliceShape sh')
                             @ Data.Array.Accelerate.Array.Sugar.Z
                             (Data.Array.Accelerate.Array.Sugar.$p6Shape @ sh' $dShape1)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.SliceShape
                                                     sh'>_N <Data.Array.Accelerate.Array.Sugar.Z>_N) of cobox2 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.CoSliceShape sh')
                             @ sh'
                             (Data.Array.Accelerate.Array.Sugar.$p5Shape @ sh' $dShape1)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                     sh'>_N <sh'>_N) of cobox3 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.FullShape sh')
                             @ sh'
                             (Data.Array.Accelerate.Array.Sugar.$p4Shape @ sh' $dShape1)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.FullShape
                                                     sh'>_N <sh'>_N) of cobox4 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.SliceShape sh)
                             @ Data.Array.Accelerate.Array.Sugar.Z
                             (Data.Array.Accelerate.Array.Sugar.$p6Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.SliceShape
                                                     sh>_N <Data.Array.Accelerate.Array.Sugar.Z>_N) of cobox5 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.CoSliceShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p5Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                     sh>_N <sh>_N) of cobox6 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.FullShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p4Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.FullShape
                                                     sh>_N <sh>_N) of cobox7 { DEFAULT ->
                      (Data.Array.Accelerate.Trafo.Fusion.Step
                         @ acc
                         @ aenv
                         @ (Data.Array.Accelerate.Array.Sugar.Array sh' b)
                         @ sh
                         @ sh'
                         @ a1
                         @ b
                         @~ <Data.Array.Accelerate.Array.Sugar.Array sh' b>_N
                         $dShape
                         $dShape1
                         $dElt
                         $dElt1
                         (Data.Array.Accelerate.Trafo.Simplify.$fSimplifyPreOpenExp_$csimplify
                            @ acc
                            @ sh'
                            @ aenv
                            $dKit
                            (Data.Array.Accelerate.Array.Sugar.$p1Shape @ sh' $dShape1)
                            sh1)
                         (Data.Array.Accelerate.Trafo.Simplify.$fSimplifyPreOpenFun_$csimplify
                            @ acc
                            @ aenv
                            @ (sh' -> sh)
                            $dKit
                            p)
                         (Data.Array.Accelerate.Trafo.Simplify.$fSimplifyPreOpenFun_$csimplify
                            @ acc
                            @ aenv
                            @ (a1 -> b)
                            $dKit
                            f)
                         v)
                        `cast`
                      (Data.Array.Accelerate.Trafo.Fusion.Cunctation
                         <acc>_R <aenv>_N (Sym cobox1))_R } } } } } } } }) -}
0b9c7e2fb8e6152465fe59bf47cf3415
  $fSinkCunctation ::
    Data.Array.Accelerate.Trafo.Base.Kit acc =>
    Data.Array.Accelerate.Trafo.Substitution.Sink
      (Data.Array.Accelerate.Trafo.Fusion.Cunctation acc)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U,A,A,A,A,A,A,A)><L,C(U)><S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (1, False, True)
                Data.Array.Accelerate.Trafo.Fusion.$fSinkCunctation_$cweaken
                  `cast`
                (forall (acc :: <* -> * -> *>_N).
                 <Data.Array.Accelerate.Trafo.Base.Kit acc>_R
                 ->_R Sym (Data.Array.Accelerate.Trafo.Substitution.N:Sink[0]
                               <Data.Array.Accelerate.Trafo.Fusion.Cunctation acc>_N)) -}
0b9c7e2fb8e6152465fe59bf47cf3415
  $fSinkCunctation_$cweaken ::
    Data.Array.Accelerate.Trafo.Base.Kit acc =>
    forall env env' t.
    (env Data.Array.Accelerate.Trafo.Substitution.:> env')
    -> Data.Array.Accelerate.Trafo.Fusion.Cunctation acc env t
    -> Data.Array.Accelerate.Trafo.Fusion.Cunctation acc env' t
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U,A,A,A,A,A,A,A)><L,C(U)><S,1*U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   @ env
                   @ env'
                   @ t
                   (eta :: env Data.Array.Accelerate.Trafo.Substitution.:> env')
                   (eta1 :: Data.Array.Accelerate.Trafo.Fusion.Cunctation
                              acc env t) ->
                 let {
                   $d(%,%)1 :: Data.Array.Accelerate.Trafo.Substitution.RebuildableAcc
                                 acc
                   = Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit
                 } in
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           $d(%,%)1)
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 case eta1 of wild {
                   Data.Array.Accelerate.Trafo.Fusion.Done $dArrays v
                   -> Data.Array.Accelerate.Trafo.Fusion.Done
                        @ acc
                        @ env'
                        @ t
                        $dArrays
                        (eta @ t v)
                   Data.Array.Accelerate.Trafo.Fusion.Yield sh e cobox1 $dShape $dElt sh1 f
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.SliceShape sh)
                             @ Data.Array.Accelerate.Array.Sugar.Z
                             (Data.Array.Accelerate.Array.Sugar.$p6Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.SliceShape
                                                     sh>_N <Data.Array.Accelerate.Array.Sugar.Z>_N) of cobox2 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.CoSliceShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p5Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                     sh>_N <sh>_N) of cobox3 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.FullShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p4Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.FullShape
                                                     sh>_N <sh>_N) of cobox4 { DEFAULT ->
                      (Data.Array.Accelerate.Trafo.Fusion.Yield
                         @ acc
                         @ env'
                         @ (Data.Array.Accelerate.Array.Sugar.Array sh e)
                         @ sh
                         @ e
                         @~ <Data.Array.Accelerate.Array.Sugar.Array sh e>_N
                         $dShape
                         $dElt
                         (Data.Array.Accelerate.Trafo.Substitution.$fSinkPreOpenExp_$cweaken
                            @ acc
                            @ ()
                            $d(%,%)1
                            @ env
                            @ env'
                            @ sh
                            eta
                            sh1)
                         (Data.Array.Accelerate.Trafo.Substitution.$fSinkPreBoundary_$cweaken1
                            @ acc
                            @ ()
                            $d(%,%)1
                            @ env
                            @ env'
                            @ (sh -> e)
                            eta
                            f))
                        `cast`
                      (Data.Array.Accelerate.Trafo.Fusion.Cunctation
                         <acc>_R <env'>_N (Sym cobox1))_R } } }
                   Data.Array.Accelerate.Trafo.Fusion.Step sh sh' a b cobox1 $dShape $dShape1 $dElt $dElt1 sh1 p f v
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.SliceShape sh')
                             @ Data.Array.Accelerate.Array.Sugar.Z
                             (Data.Array.Accelerate.Array.Sugar.$p6Shape @ sh' $dShape1)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.SliceShape
                                                     sh'>_N <Data.Array.Accelerate.Array.Sugar.Z>_N) of cobox2 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.CoSliceShape sh')
                             @ sh'
                             (Data.Array.Accelerate.Array.Sugar.$p5Shape @ sh' $dShape1)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                     sh'>_N <sh'>_N) of cobox3 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.FullShape sh')
                             @ sh'
                             (Data.Array.Accelerate.Array.Sugar.$p4Shape @ sh' $dShape1)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.FullShape
                                                     sh'>_N <sh'>_N) of cobox4 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.SliceShape sh)
                             @ Data.Array.Accelerate.Array.Sugar.Z
                             (Data.Array.Accelerate.Array.Sugar.$p6Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.SliceShape
                                                     sh>_N <Data.Array.Accelerate.Array.Sugar.Z>_N) of cobox5 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.CoSliceShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p5Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                     sh>_N <sh>_N) of cobox6 { DEFAULT ->
                      case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ (Data.Array.Accelerate.Array.Sugar.FullShape sh)
                             @ sh
                             (Data.Array.Accelerate.Array.Sugar.$p4Shape @ sh $dShape)
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <Data.Array.Accelerate.Array.Sugar.FullShape
                                                     sh>_N <sh>_N) of cobox7 { DEFAULT ->
                      (Data.Array.Accelerate.Trafo.Fusion.Step
                         @ acc
                         @ env'
                         @ (Data.Array.Accelerate.Array.Sugar.Array sh' b)
                         @ sh
                         @ sh'
                         @ a
                         @ b
                         @~ <Data.Array.Accelerate.Array.Sugar.Array sh' b>_N
                         $dShape
                         $dShape1
                         $dElt
                         $dElt1
                         (Data.Array.Accelerate.Trafo.Substitution.$fSinkPreOpenExp_$cweaken
                            @ acc
                            @ ()
                            $d(%,%)1
                            @ env
                            @ env'
                            @ sh'
                            eta
                            sh1)
                         (Data.Array.Accelerate.Trafo.Substitution.$fSinkPreBoundary_$cweaken1
                            @ acc
                            @ ()
                            $d(%,%)1
                            @ env
                            @ env'
                            @ (sh' -> sh)
                            eta
                            p)
                         (Data.Array.Accelerate.Trafo.Substitution.$fSinkPreBoundary_$cweaken1
                            @ acc
                            @ ()
                            $d(%,%)1
                            @ env
                            @ env'
                            @ (a -> b)
                            eta
                            f)
                         (eta @ (Data.Array.Accelerate.Array.Sugar.Array sh a) v))
                        `cast`
                      (Data.Array.Accelerate.Trafo.Fusion.Cunctation
                         <acc>_R <env'>_N (Sym cobox1))_R } } } } } } } }) -}
be8100b2c0999ae80baeabafc2c4c246
  $s$fShape:. ::
    Data.Array.Accelerate.Array.Sugar.Shape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cp1Shape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cp2Shape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cp3Shape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cp4Shape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cp5Shape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cp6Shape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$crank
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  Data.Array.Accelerate.Array.Sugar.$fShape:._$s$csize
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cempty
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cignore
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cintersect
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cunion
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$ctoIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cfromIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$citer
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$citer1
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$crangeToShape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cshapeToRange
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cshapeToList
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$clistToShape
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$csliceAnyIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$csliceNoneIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ) -}
6d0e4e3db5fa49977ecc08498982c4a0
  $tc'Done :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6264825822115695314##
                   1780592326608425956##
                   Data.Array.Accelerate.Trafo.Fusion.$trModule
                   Data.Array.Accelerate.Trafo.Fusion.$tc'Done1) -}
f2e3df5f2a9e1b17b205b0e58bd33f9f
  $tc'Done1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Done"#) -}
07cb74392042c49aeb48cdf78f95c050
  $tc'Embed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8974659265908346425##
                   2196117153518507391##
                   Data.Array.Accelerate.Trafo.Fusion.$trModule
                   Data.Array.Accelerate.Trafo.Fusion.$tc'Embed1) -}
d97966c42cc5b472167b4df0d73d55a1
  $tc'Embed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Embed"#) -}
46942c5d88d7c65d2ac24a1bffeaf510
  $tc'Step :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1647960938260561483##
                   5397403263848492094##
                   Data.Array.Accelerate.Trafo.Fusion.$trModule
                   Data.Array.Accelerate.Trafo.Fusion.$tc'Step1) -}
feee58bad27064aac5e3166f888e43c3
  $tc'Step1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Step"#) -}
1108523fc203982bde35ced506d07c59
  $tc'Yield :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16918757509740452913##
                   17588352832801196601##
                   Data.Array.Accelerate.Trafo.Fusion.$trModule
                   Data.Array.Accelerate.Trafo.Fusion.$tc'Yield1) -}
5d28d2f6d566ba6592ef5dbdbbe408fb
  $tc'Yield1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Yield"#) -}
7e1e8425cbe76e439058fdbc967b9e7b
  $tcCunctation :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10632950678695778642##
                   7541579398414250224##
                   Data.Array.Accelerate.Trafo.Fusion.$trModule
                   Data.Array.Accelerate.Trafo.Fusion.$tcCunctation1) -}
e48902fd603d7cee4b0d1880ddda8190
  $tcCunctation1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Cunctation"#) -}
cb4ddd4e4def97267b645c123853e655
  $tcEmbed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3648875636616421601##
                   11752082875445312567##
                   Data.Array.Accelerate.Trafo.Fusion.$trModule
                   Data.Array.Accelerate.Trafo.Fusion.$tcEmbed1) -}
e354cde0d6f3e555492f703ad065353a
  $tcEmbed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Embed"#) -}
7661ccbaa4b4d0ffab478aff6ee338c7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Trafo.Fusion.$trModule2
                   Data.Array.Accelerate.Trafo.Fusion.$trModule1) -}
a765ae7ed2e8ec71bc9d76bde2317e5b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Data.Array.Accelerate.Trafo.Fusion"#) -}
c83635b833ea982e6cdb85d314329f96
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
4d1de4e7a35f85c28233ec9443a93412
  $wconvertOpenAcc ::
    Data.Array.Accelerate.Array.Sugar.Arrays arrs =>
    GHC.Types.Bool
    -> Data.Array.Accelerate.AST.OpenAcc aenv arrs
    -> (# Data.Array.Accelerate.AST.PreOpenAcc
            Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv arrs #)
  {- Arity: 3, Strictness: <L,U><L,U><L,1*U>, Inline: [0],
     Unfolding: (\ @ arrs
                   @ aenv
                   (w :: Data.Array.Accelerate.Array.Sugar.Arrays arrs)
                   (w1 :: GHC.Types.Bool)
                   (w2 :: Data.Array.Accelerate.AST.OpenAcc aenv arrs) ->
                 Data.Array.Accelerate.Trafo.Fusion.$wmanifest
                   @ aenv
                   @ arrs
                   w1
                   (Data.Array.Accelerate.Trafo.Fusion.compute
                      @ Data.Array.Accelerate.AST.OpenAcc
                      @ arrs
                      @ aenv
                      Data.Array.Accelerate.Trafo.Base.$fKitOpenAcc
                      w
                      (Data.Array.Accelerate.Trafo.Fusion.embedOpenAcc
                         @ arrs
                         @ aenv
                         w
                         w1
                         w2))
                     `cast`
                   (Sym (Data.Array.Accelerate.AST.N:OpenAcc[0]) <aenv>_N <arrs>_N)) -}
23b82a7e31972743cbe41fc30884fcf4
  $wmanifest ::
    GHC.Types.Bool
    -> Data.Array.Accelerate.AST.OpenAcc aenv a
    -> (# Data.Array.Accelerate.AST.PreOpenAcc
            Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv a #)
  {- Arity: 2, Strictness: <L,U><L,1*U>, Inline: [0] -}
0b9c7e2fb8e6152465fe59bf47cf3415
  type role Cunctation representational nominal nominal
  data Cunctation (acc :: GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                  aenv
                  a where
    Done :: Data.Array.Accelerate.Array.Sugar.Arrays a =>
            (Data.Array.Accelerate.AST.Idx aenv a) -> Cunctation acc aenv a
    Yield :: (Data.Array.Accelerate.Array.Sugar.Shape sh,
              Data.Array.Accelerate.Array.Sugar.Elt e) =>
             (Data.Array.Accelerate.AST.PreExp acc aenv sh)
             -> (Data.Array.Accelerate.AST.PreFun acc aenv (sh -> e))
             -> Cunctation acc
                           aenv
                           (Data.Array.Accelerate.Array.Sugar.Array sh e)
    Step :: (Data.Array.Accelerate.Array.Sugar.Shape sh,
             Data.Array.Accelerate.Array.Sugar.Shape sh',
             Data.Array.Accelerate.Array.Sugar.Elt a1,
             Data.Array.Accelerate.Array.Sugar.Elt b) =>
            (Data.Array.Accelerate.AST.PreExp acc aenv sh')
            -> (Data.Array.Accelerate.AST.PreFun acc aenv (sh' -> sh))
            -> (Data.Array.Accelerate.AST.PreFun acc aenv (a1 -> b))
            -> (Data.Array.Accelerate.AST.Idx
                  aenv (Data.Array.Accelerate.Array.Sugar.Array sh a1))
            -> Cunctation acc
                          aenv
                          (Data.Array.Accelerate.Array.Sugar.Array sh' b)
03a2fcf5b34708780b437fbaed94a6ac
  type ElimAcc (acc :: * -> * -> *) =
    forall aenv s t. acc aenv s -> acc (aenv, s) t -> GHC.Types.Bool
54c4e52bfae1800157da3e98b6786a84
  type role Embed representational nominal nominal
  data Embed (acc :: * -> * -> *) aenv a where
    Embed :: (Data.Array.Accelerate.Trafo.Base.Extend acc aenv aenv')
             -> (Data.Array.Accelerate.Trafo.Fusion.Cunctation acc aenv' a)
             -> Embed acc aenv a
7952c01ae79a7336cdebf6fe316140c9
  type EmbedAcc (acc :: * -> * -> *) =
    forall aenv arrs.
    Data.Array.Accelerate.Array.Sugar.Arrays arrs =>
    acc aenv arrs
    -> Data.Array.Accelerate.Trafo.Fusion.Embed acc aenv arrs
8c43f9c2f08144abe1cab46d060f4c15
  compute ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Array.Sugar.Arrays arrs) =>
    Data.Array.Accelerate.Trafo.Fusion.Embed acc aenv arrs
    -> Data.Array.Accelerate.AST.PreOpenAcc acc aenv arrs
  {- Arity: 3,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(U,U(U)),A,C(U),A,A,C(C1(U)),C(U(U)),A)><L,U><S,1*U>,
     Unfolding: (\ @ (acc :: * -> * -> *)
                   @ arrs
                   @ aenv
                   ($dKit :: Data.Array.Accelerate.Trafo.Base.Kit acc)
                   ($dArrays :: Data.Array.Accelerate.Array.Sugar.Arrays arrs)
                   (eta :: Data.Array.Accelerate.Trafo.Fusion.Embed acc aenv arrs) ->
                 case GHC.Types.HEq_sc
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (GHC.Types.* -> GHC.Types.* -> GHC.Types.*)
                        @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc)
                        @ acc
                        (GHC.Classes.$p2(%,%)
                           @ (Data.Array.Accelerate.Trafo.Substitution.Rebuildable acc)
                           @ (Data.Array.Accelerate.Trafo.Substitution.AccClo acc
                              Data.Type.Equality.~ acc)
                           (Data.Array.Accelerate.Trafo.Base.$p1Kit @ acc $dKit))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <GHC.Types.*
                              -> GHC.Types.*
                              -> GHC.Types.*>_N <Data.Array.Accelerate.Trafo.Substitution.AccClo
                                                   acc>_N <acc>_N) of cobox0 { DEFAULT ->
                 case eta of wild { Data.Array.Accelerate.Trafo.Fusion.Embed aenv' env cc ->
                 Data.Array.Accelerate.Trafo.Base.bind
                   @ acc
                   @ arrs
                   @ aenv
                   @ aenv'
                   $dKit
                   $dArrays
                   env
                   (Data.Array.Accelerate.Trafo.Fusion.compute'
                      @ acc
                      @ arrs
                      @ aenv'
                      $dKit
                      $dArrays
                      cc) } }) -}
8ef6de98afed4217798e98fb473f3b71
  compute' ::
    (Data.Array.Accelerate.Trafo.Base.Kit acc,
     Data.Array.Accelerate.Array.Sugar.Arrays arrs) =>
    Data.Array.Accelerate.Trafo.Fusion.Cunctation acc aenv arrs
    -> Data.Array.Accelerate.AST.PreOpenAcc acc aenv arrs
  {- Arity: 3,
     Strictness: <S(S(LS(S))LLLLLLL),U(U(U,U(U)),A,C(U),A,A,C(C1(U)),C(U(U)),A)><L,U><S,1*U> -}
683b82b56e11cd2694cf404a7c30a793
  convertAcc ::
    Data.Array.Accelerate.Array.Sugar.Arrays arrs =>
    GHC.Types.Bool
    -> Data.Array.Accelerate.AST.Acc arrs
    -> Data.Array.Accelerate.Trafo.Base.DelayedAcc arrs
  {- Arity: 3, Strictness: <L,U><L,U><L,1*U>m1,
     Unfolding: InlineRule (3, True, True)
                (\ @ arrs
                   ($dArrays :: Data.Array.Accelerate.Array.Sugar.Arrays arrs)
                   (fuseAcc :: GHC.Types.Bool)
                   (eta :: Data.Array.Accelerate.AST.OpenAcc () arrs) ->
                 Data.Array.Accelerate.Trafo.Fusion.convertOpenAcc
                   @ arrs
                   @ ()
                   $dArrays
                   fuseAcc
                   eta) -}
6a426c4b118e526a3301ce7b87d2cf39
  convertAfun ::
    GHC.Types.Bool
    -> Data.Array.Accelerate.AST.Afun f
    -> Data.Array.Accelerate.Trafo.Base.DelayedAfun f
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ f
                   (fuseAcc :: GHC.Types.Bool)
                   (eta :: Data.Array.Accelerate.AST.OpenAfun () f) ->
                 Data.Array.Accelerate.Trafo.Fusion.convertOpenAfun
                   @ ()
                   @ f
                   fuseAcc
                   eta) -}
237c639155fd114a9425c5c06cf592b0
  convertOpenAcc ::
    Data.Array.Accelerate.Array.Sugar.Arrays arrs =>
    GHC.Types.Bool
    -> Data.Array.Accelerate.AST.OpenAcc aenv arrs
    -> Data.Array.Accelerate.Trafo.Base.DelayedOpenAcc aenv arrs
  {- Arity: 3, Strictness: <L,U><L,U><L,1*U>m1, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ arrs
                   @ aenv
                   (w :: Data.Array.Accelerate.Array.Sugar.Arrays arrs)
                   (w1 :: GHC.Types.Bool)
                   (w2 :: Data.Array.Accelerate.AST.OpenAcc aenv arrs) ->
                 case Data.Array.Accelerate.Trafo.Fusion.$wconvertOpenAcc
                        @ arrs
                        @ aenv
                        w
                        w1
                        w2 of ww { Unit# ww1 ->
                 Data.Array.Accelerate.Trafo.Base.Manifest @ aenv @ arrs ww1 }) -}
e3853735d60fde3037aea1c969ae7250
  convertOpenAfun ::
    GHC.Types.Bool
    -> Data.Array.Accelerate.AST.OpenAfun aenv f
    -> Data.Array.Accelerate.Trafo.Base.DelayedOpenAfun aenv f
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
551257e5056dfaea0ed45646926b50b9
  embedOpenAcc ::
    Data.Array.Accelerate.Array.Sugar.Arrays arrs =>
    GHC.Types.Bool
    -> Data.Array.Accelerate.AST.OpenAcc aenv arrs
    -> Data.Array.Accelerate.Trafo.Fusion.Embed
         Data.Array.Accelerate.AST.OpenAcc aenv arrs
  {- Arity: 3, Strictness: <L,U><S,U><S,1*U> -}
instance [incoherent] Data.Array.Accelerate.Trafo.Simplify.Simplify [Data.Array.Accelerate.Trafo.Fusion.Cunctation]
  = Data.Array.Accelerate.Trafo.Fusion.$fSimplifyCunctation
instance [incoherent] Data.Array.Accelerate.Trafo.Substitution.Sink [Data.Array.Accelerate.Trafo.Fusion.Cunctation]
  = Data.Array.Accelerate.Trafo.Fusion.$fSinkCunctation
"SPEC/Data.Array.Accelerate.Trafo.Fusion $fShape:. @ Z" [ALWAYS] forall ($dShape :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                      Data.Array.Accelerate.Array.Sugar.Z)
  Data.Array.Accelerate.Array.Sugar.$fShape:. @ Data.Array.Accelerate.Array.Sugar.Z
                                              $dShape
  = Data.Array.Accelerate.Trafo.Fusion.$s$fShape:.
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

