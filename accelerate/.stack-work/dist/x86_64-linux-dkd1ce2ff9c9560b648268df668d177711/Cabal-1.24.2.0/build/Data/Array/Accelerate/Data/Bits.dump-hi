
==================== FINAL INTERFACE ====================
2017-08-29 05:27:50.151113 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Data.Bits 8002
  interface hash: 1604cfbb59ac58e7f0ce74a81e0744a1
  ABI hash: 555bc4d2947ea186b9f9abd621c5aabb
  export-list hash: 1237bf55563f9cc07ee899455862cfd7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6f410d941e23737010a4724371553fb9
  sig of: Nothing
  used TH splices: True
  where
exports:
  Data.Array.Accelerate.Data.Bits.Bits{Data.Array.Accelerate.Data.Bits..&. Data.Array.Accelerate.Data.Bits..|. Data.Array.Accelerate.Data.Bits.bit Data.Array.Accelerate.Data.Bits.clearBit Data.Array.Accelerate.Data.Bits.complement Data.Array.Accelerate.Data.Bits.complementBit Data.Array.Accelerate.Data.Bits.isSigned Data.Array.Accelerate.Data.Bits.popCount Data.Array.Accelerate.Data.Bits.rotate Data.Array.Accelerate.Data.Bits.rotateL Data.Array.Accelerate.Data.Bits.rotateR Data.Array.Accelerate.Data.Bits.setBit Data.Array.Accelerate.Data.Bits.shift Data.Array.Accelerate.Data.Bits.shiftL Data.Array.Accelerate.Data.Bits.shiftR Data.Array.Accelerate.Data.Bits.testBit Data.Array.Accelerate.Data.Bits.unsafeShiftL Data.Array.Accelerate.Data.Bits.unsafeShiftR Data.Array.Accelerate.Data.Bits.xor Data.Array.Accelerate.Data.Bits.zeroBits}
  Data.Array.Accelerate.Data.Bits.FiniteBits{Data.Array.Accelerate.Data.Bits.countLeadingZeros Data.Array.Accelerate.Data.Bits.countTrailingZeros Data.Array.Accelerate.Data.Bits.finiteBitSize}
module dependencies: Data.Array.Accelerate.AST
                     Data.Array.Accelerate.Array.Data
                     Data.Array.Accelerate.Array.Representation
                     Data.Array.Accelerate.Array.Sugar
                     Data.Array.Accelerate.Array.Unique
                     Data.Array.Accelerate.Classes.Enum Data.Array.Accelerate.Classes.Eq
                     Data.Array.Accelerate.Classes.Fractional
                     Data.Array.Accelerate.Classes.Integral
                     Data.Array.Accelerate.Classes.Num Data.Array.Accelerate.Classes.Ord
                     Data.Array.Accelerate.Classes.Real
                     Data.Array.Accelerate.Debug.Flags
                     Data.Array.Accelerate.Debug.Monitoring
                     Data.Array.Accelerate.Debug.Trace Data.Array.Accelerate.Error
                     Data.Array.Accelerate.Language Data.Array.Accelerate.Lifetime
                     Data.Array.Accelerate.Product Data.Array.Accelerate.Smart
                     Data.Array.Accelerate.Type
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      unique-0@unique-0-9CJQKYGbqiDaFUmoekKeA
orphans: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Enum
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Eq
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Fractional
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Integral
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Num
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Ord
         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Classes.Real
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt:Data.Label.Point
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Data
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Representation
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Sugar
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Product
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Smart
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Type
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  Data.Array.Accelerate.Array.Sugar 1095a84a969562bd64b7800341e0d23c
  exports: a6dd551b39ab2a3a217fc8c2a6979cd5
  Elt 78f23e81404aaf1e43268a71a575425c
import  -/  Data.Array.Accelerate.Classes.Eq b5abcb6d2b1b2f77926ba32e74c56bfd
  exports: 6d08b503170f674ec3fef36c5a59035f
  && fd3fbc575278d01240f55b5285c81d9c
  /= bfd246b5fc13bff4fe92c8890493d0d4
  == 373f16d63bf36dcf6c5be36579a78740
  Eq 52ed39f384f936d7cab795259d55d4b0
  not a442d284a248c70a10c21df510baefef
  || 385cac0096364cd1168d80272fce6db4
import  -/  Data.Array.Accelerate.Classes.Integral a60aaecd6e207deee19ca96483ccfae0
  exports: bc100fffba1159ea81ec5fb738bd1c61
import  -/  Data.Array.Accelerate.Classes.Num 5830cb8ce2e6617e88ff07c7f188117f
  exports: 00b7c9e56019df3c44ef51ed8ebd4236
  Num 13b6af1dd60ee5505ca10fef83916e95
import  -/  Data.Array.Accelerate.Classes.Ord 838718467444fc3520e0ce057ae54e2a
  exports: 73bb94b1a06727c01aa4a74d6dab52ae
  < fb7363126baf54c55879edf3cf13ee03
  > 8fb49bee9fb9940140f724b1400aa939
  >= 32c65a49eff2528ed35f750a60be2b01
import  -/  Data.Array.Accelerate.Language 524bed6c61291389f36fc32a525eca39
  exports: a284cd1d10aeff227064b59c0864f9a0
  cond 1ad22d0d07dca5cab36a411c4b5a6965
  while 73674a4115b985e1fe5c850a62a18ce3
import  -/  Data.Array.Accelerate.Smart c6a471aeed497009ce791e94dc05d100
  exports: 1e3a20050ce25466608a82a26d24d5f0
  Exp dff601899922d9e86e5ab6941dfbac5f
  constant 8196d527ad9044191643ad6b39858685
  mkBAnd 6f800db08d4215cc9801227a63e69b87
  mkBNot c7e962409c3ba1e49696fcaedb84d8a0
  mkBOr 52883c3fdc3ca0ee375f7d397f52b17e
  mkBRotateL b7b1eeed16628f8775a53908b2cb9757
  mkBRotateR d64758713698248f7476ebc968f172ad
  mkBShiftL 517aa916682c28b4f3c74af9577f8655
  mkBShiftR b24d3d2734845e5eca9a335087dbd305
  mkBXor 6595fcb7d9c6d80d0600b7b2a2d2dabc
  mkBitcast 4acd76684d80054c2819dda281e05aef
  mkBoolToInt 0d2c56676cef32112943caf6c8229e79
  mkCountLeadingZeros 099736702fddb8b02436e4e304aa4610
  mkCountTrailingZeros c742cc6f17a7cfcd439e8fcee63f4891
  mkFromIntegral 9472e060a988175e76d3fbde1665edf7
  mkLt 14ffaf62f1fcb1b7a5036ae42859b6f7
  mkPopCount fa02ebe7d7f810dce9d0aba87f9d6337
  mkUnsafeCoerce c7ecef85b962969ccc756d5581e1700a
  tup2 c501dd227fe5d3d61a446c8db6829c7a
  untup2 751a423afd0ba14775d3a5cf0fe0a975
import  -/  Data.Array.Accelerate.Type a1c7885f4a79193eaa1f192a9acbec78
  exports: 7aad7ca015788892b1349ebab929b71f
  BitSizeEq 08b339c5e1c2596f47bb59a6ee6c7358
  IntegralType 0b35b82481c40d13579644883a8a096c
  IsIntegral b2c4f7b6108c37809735ca127f59a1fe
  IsScalar b39315a91b81ff18413f7fb7d8fed68c
  TypeCInt b6349458bf73f9e04a963fba43c8a4d6
  TypeCLLong 33b03515a1a093672a02bc779cfa60f8
  TypeCLong 9bd106819d4d4586b15989faab06ad81
  TypeCShort 905c217b42ce4961bbe5770e8a51a6a6
  TypeCUInt df97b3c962975fceb1050e11551f9921
  TypeCULLong 8bb25863be8dca3f1096f5f470ff7b2d
  TypeCULong ab27c5dbc4568a247fbca1a1e6da3774
  TypeCUShort dcea2f64ab2a5965655f1ce4a40ef199
  TypeInt eebcf3c3db4634ed209d6f68b06877dc
  TypeInt16 3a78f4eaa4284e8719bbc7be8da476c2
  TypeInt32 d1351c98fe8fcc82aff8a942258b2c12
  TypeInt64 500b8b4cc6a97c5fc614c61d863fc564
  TypeInt8 bf1a53d8abc4a8ca480159039ee69da1
  TypeWord 5359dd23681f476fe936c71fd3f8598c
  TypeWord16 afa669343400204f262f57ed078412a9
  TypeWord32 f9fe9175129161c6ba7cb696d1a965cb
  TypeWord64 cf469b63ffd5668e82cbcf284388ee45
  TypeWord8 ca821325ecab9fadd2e3041f41f21003
  integralType a1a461d2ad76605e805cab71949dc557
import  -/  base-4.9.1.0:Data.Bits d707ac81dd0124c7a7fb3234df2c8548
import  -/  base-4.9.1.0:Foreign.C.Types bf568ee9a3ec4aa42333a0da5f4345de
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Word 2f8cb4e909eeef2f95e1563807dd9268
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
fixities infixl 7 .&., infixl 5 .|., infixl 8 rotate,
         infixl 8 rotateL, infixl 8 rotateR, infixl 8 shift,
         infixl 8 shiftL, infixl 8 shiftR, infixl 6 xor
f32911fcd0bb7b5f67bac0dfcfc7e7e0
  $dmclearBit ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLLLLLLLLLLLLLLL),U(A,1*C1(C1(U)),A,A,1*C1(U),A,A,A,1*C1(U),A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits..&.
                   @ a
                   $dBits
                   x
                   (Data.Array.Accelerate.Data.Bits.complement
                      @ a
                      $dBits
                      (Data.Array.Accelerate.Data.Bits.bit @ a $dBits i))) -}
8c6f1cf9dfb652be6db0695a46a2d8da
  $dmcomplementBit ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLC(C(S))LLLLLLLLLLLLLLLLL),U(A,A,A,1*C1(C1(U)),A,A,A,A,1*C1(U),A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.xor
                   @ a
                   $dBits
                   x
                   (Data.Array.Accelerate.Data.Bits.bit @ a $dBits i)) -}
a10f02bb38b497cb6b304dbe7c5f887e
  $dmrotate ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <L,U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*C1(C1(U)),1*C1(C1(U)),A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (eta :: Data.Array.Accelerate.Smart.Exp a)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                   = Data.Array.Accelerate.Data.Bits.$p1Bits @ a $dBits
                 } in
                 let {
                   $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                   = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                 } in
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   (Data.Array.Accelerate.Language.cond
                      @ a
                      $dElt
                      (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c<
                         eta1
                         (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0))
                      (Data.Array.Accelerate.Data.Bits.rotateR
                         @ a
                         $dBits
                         eta
                         (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cnegate eta1)))
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.Array.Accelerate.Smart.Exp a)
                      @ (Data.Array.Accelerate.Smart.Exp a)
                      (Data.Array.Accelerate.Language.cond
                         @ a
                         $dElt
                         (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c>
                            eta1
                            (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0))
                         (Data.Array.Accelerate.Data.Bits.rotateL @ a $dBits eta eta1))
                      eta)) -}
e763a5222fefba4648d250e01b90fc61
  $dmrotateL ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLLLC(C(S))LLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*C1(C1(U)),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.rotate @ a $dBits x i) -}
280db3f20015ab96304aa86c9f3e87e7
  $dmrotateR ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))LLLLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*C1(C1(U)),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.rotate
                   @ a
                   $dBits
                   x
                   (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cnegate i)) -}
9a97636fce02fb08642f4cdc8a43cfc1
  $dmsetBit ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLC(C(S))LLLLLLLLLLLLLLLLLL),U(A,A,1*C1(C1(U)),A,A,A,A,A,1*C1(U),A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits..|.
                   @ a
                   $dBits
                   x
                   (Data.Array.Accelerate.Data.Bits.bit @ a $dBits i)) -}
95bec7dc005268f02b8302a2d9995694
  $dmshift ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <L,U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,1*C1(C1(U)),A,1*C1(C1(U)),A,A,A,A)><L,U><L,U>m12,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (eta :: Data.Array.Accelerate.Smart.Exp a)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   $dEq :: Data.Array.Accelerate.Classes.Eq.Eq a
                   = Data.Array.Accelerate.Data.Bits.$p1Bits @ a $dBits
                 } in
                 let {
                   $dElt :: Data.Array.Accelerate.Array.Sugar.Elt a
                   = Data.Array.Accelerate.Classes.Eq.$p1Eq @ a $dEq
                 } in
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   @ (Data.Array.Accelerate.Smart.Exp a)
                   (Data.Array.Accelerate.Language.cond
                      @ a
                      $dElt
                      (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c<
                         eta1
                         (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0))
                      (Data.Array.Accelerate.Data.Bits.shiftR
                         @ a
                         $dBits
                         eta
                         (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cnegate eta1)))
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.Array.Accelerate.Smart.Exp a)
                      @ (Data.Array.Accelerate.Smart.Exp a)
                      (Data.Array.Accelerate.Language.cond
                         @ a
                         $dElt
                         (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c>
                            eta1
                            (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0))
                         (Data.Array.Accelerate.Data.Bits.shiftL @ a $dBits eta eta1))
                      eta)) -}
11359ddd62d339c9577dbc0037e47590
  $dmshiftL ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLLC(C(S))LLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*C1(C1(U)),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.shift @ a $dBits x i) -}
1ca5516d2756c5802ebdfeae599e2910
  $dmshiftR ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 3,
     Strictness: <S(LLLLLC(C(S))LLLLLLLLLLLLLLL),1*U(A,A,A,A,A,1*C1(C1(U)),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a)
                   (x :: Data.Array.Accelerate.Smart.Exp a)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.shift
                   @ a
                   $dBits
                   x
                   (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cnegate i)) -}
b01954d000baac0a7586e1fdc459656a
  $dmunsafeShiftL ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLLLLL),U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.shiftL -}
f6ff2741a9e0de37d0a666ef368aadd2
  $dmunsafeShiftR ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSLLLL),U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,U,A,A,A,A)>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.shiftR -}
d4dec1de2d2b906140d65ff5ee2d2ea1
  $dmzeroBits ::
    Data.Array.Accelerate.Data.Bits.Bits a =>
    Data.Array.Accelerate.Smart.Exp a
  {- Arity: 1,
     Strictness: <S(LLLLLLLLLLC(C(S))LLLLLLLLLL),U(A,A,A,A,A,A,A,A,1*C1(U),A,1*C1(C1(U)),A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a ($dBits :: Data.Array.Accelerate.Data.Bits.Bits a) ->
                 Data.Array.Accelerate.Data.Bits.clearBit
                   @ a
                   $dBits
                   (Data.Array.Accelerate.Data.Bits.bit
                      @ a
                      $dBits
                      (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0))
                   (Data.Array.Accelerate.Classes.Num.$fNumExp20_$cfromInteger 0)) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsBool :: Data.Array.Accelerate.Data.Bits.Bits GHC.Types.Bool
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Bool
                  Data.Array.Accelerate.Classes.Eq.$fEqBool
                  Data.Array.Accelerate.Classes.Eq.&&
                  Data.Array.Accelerate.Classes.Eq.||
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cxor
                  Data.Array.Accelerate.Classes.Eq.not
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsBool_$crotate
                  Data.Array.Accelerate.Smart.mkBoolToInt -}
5a37b985d581733ae3c1a4ff10b93860
  $fBitsBool1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               (Data.Array.Accelerate.Classes.Num.$fNumExp123 i)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   x
                   Data.Array.Accelerate.Data.Bits.$fBitsBool2
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)) -}
f18cb2eb7bd6926fc7512af495021bb9
  $fBitsBool10 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLAnd
                   Data.Array.Accelerate.Data.Bits.$fBitsBool11
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
2f5223fbb71da44b12fa58c7c5c20ad4
  $fBitsBool11 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Bool, GHC.Types.Bool)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                   Data.Array.Accelerate.Data.Bits.$fBitsBool12
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R) -}
c69c60943700ac8a1c5cec3db5b9bca0
  $fBitsBool12 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Bool), GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Bool), GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @ ((), GHC.Types.Bool)
                   @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Data.Bits.$fBitsBool18
                   Data.Array.Accelerate.Data.Bits.$fBitsBool13
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)) -}
2a9b3d467a23bea2cc2ef2bf2a383560
  $fBitsBool13 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLNot
                   Data.Array.Accelerate.Data.Bits.$fBitsBool14
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)) -}
b2c7be03b06559d3a1c820ec9963a551
  $fBitsBool14 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsBool15
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
2c11b499f1c0f63862fd87c03b204895
  $fBitsBool15 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsBool16
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
887e206a0e8f0fe428eb16fea99dc9c1
  $fBitsBool16 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
16a9baad11bcb2131da425e4f0221904
  $fBitsBool17 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
3a546377575c87e03af2e6de63b22ac5
  $fBitsBool18 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Bool)
                   @ GHC.Types.Bool
                   @ ()
                   @~ <((), GHC.Types.Bool)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsBool14
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)) -}
f9a05243c09ef3210b16eac86b3c809e
  $fBitsBool19 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               i)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   x
                   Data.Array.Accelerate.Data.Bits.$fBitsBool2
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)) -}
cca58f188926b25f05719c4079be516b
  $fBitsBool2 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   GHC.Types.False) -}
c7e285f65d0d8a280b466753990be600
  $fBitsBool3 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool4) -}
3f8dc07ba002ec234ddb29b628de6f53
  $fBitsBool4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
c1641f2bfcefdea9df61a3ade2902d95
  $fBitsBool5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
40f3926fd5a7c21ec1117ba1ef164629
  $fBitsBool6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Classes.Eq.$fEqBool_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqBool_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Classes.Eq.$fEqBool_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqBool_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Bool
                            @ (GHC.Types.Int, GHC.Types.Int)
                            Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Types.Int, GHC.Types.Int)
                               Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                               Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                  @ GHC.Types.Int
                                  @ ((), GHC.Types.Int)
                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ ((), GHC.Types.Int)
                                     @ GHC.Types.Int
                                     @ ()
                                     @~ <((), GHC.Types.Int)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                        @ Data.Array.Accelerate.Smart.Exp)
                                     i)
                                  Data.Array.Accelerate.Data.Bits.$fBitsBool3
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                          GHC.Types.Int)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
46ae9f5d865fd524c680b7ea12639bd7
  $fBitsBool7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLAnd
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Bool
                            @ GHC.Types.Bool
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.AST.$WPrimLNot
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Bool
                               @ (GHC.Types.Int, GHC.Types.Int)
                               Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                               Data.Array.Accelerate.Array.Sugar.$fEltBool
                               Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                                  Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Types.Int), GHC.Types.Int)
                                     @ GHC.Types.Int
                                     @ ((), GHC.Types.Int)
                                     @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ()
                                        @~ <((), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        i)
                                     Data.Array.Accelerate.Data.Bits.$fBitsBool3
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                             GHC.Types.Int)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
c45232f42f45e2c586d94dc2c47b9151
  $fBitsBool8 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool, GHC.Types.Bool)
                   Data.Array.Accelerate.Smart.$s$fElt(,)
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.AST.$WPrimLOr
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Bool, GHC.Types.Bool)
                      Data.Array.Accelerate.Smart.$s$fElt(,)
                      Data.Array.Accelerate.Smart.$s$fIsProductcst(,)
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Bool), GHC.Types.Bool)
                         @ GHC.Types.Bool
                         @ ((), GHC.Types.Bool)
                         @~ <(((), GHC.Types.Bool), GHC.Types.Bool)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Bool)
                            @ GHC.Types.Bool
                            @ ()
                            @~ <((), GHC.Types.Bool)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Bool
                            @ (GHC.Types.Int, GHC.Types.Int)
                            Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                            Data.Array.Accelerate.Array.Sugar.$fEltBool
                            Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                            (Data.Array.Accelerate.Smart.Tuple
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (GHC.Types.Int, GHC.Types.Int)
                               Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                               Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                  @ GHC.Types.Int
                                  @ ((), GHC.Types.Int)
                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ ((), GHC.Types.Int)
                                     @ GHC.Types.Int
                                     @ ()
                                     @~ <((), GHC.Types.Int)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                                     (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                        @ Data.Array.Accelerate.Smart.Exp)
                                     i)
                                  Data.Array.Accelerate.Data.Bits.$fBitsBool3
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                  <Data.Array.Accelerate.Smart.Exp>_R
                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                            <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                          GHC.Types.Int)>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Bool>_N <GHC.Types.Bool>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Bool,
                                                                 GHC.Types.Bool)>_N)) -}
814ec0784b973e61900eeb066f67ec87
  $fBitsBool9 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            i)
                         Data.Array.Accelerate.Data.Bits.$fBitsBool3
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
838664504fab4cefd64ea2cda36a7cc6
  $fBitsBool_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
0ad1245eff281e18b1ad1efa9425ed23
  $fBitsBool_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
5fd0fc4861b867cc32c44fc36a3692be
  $fBitsBool_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
ca93bbc537a430a51f4a66b279397812
  $fBitsBool_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
6a837ab821eb4c8eb68da86dfa10f110
  $fBitsBool_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool)
                   (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 x) -}
e2c86f2900176f6f273fbdf7f3c5832c
  $fBitsBool_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool_$crotate -}
36bf851b18a05bbcb1eb580cbd7bb6f9
  $fBitsBool_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool8
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2ba7d7aaadeef6d987721497b20aa8f3
  $fBitsBool_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1fdb5fb8bfc895013c732fecf80356ed
  $fBitsBool_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
efd9f1962bf4253dd8371a36df491d02
  $fBitsBool_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Classes.Eq.$fEqBool1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2fe21d586d2a36f838d2022aa6731ff1
  $fBitsBool_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsBool10
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCInt ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CInt
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CInt
                  Data.Array.Accelerate.Classes.Eq.$fEqCInt
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_$cpopCount -}
35fd36454c1b0003ace783e9f3e2154f
  $fBitsCInt1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CInt -> GHC.Types.Int)
                      @ Foreign.C.Types.CInt
                      @~ <Foreign.C.Types.CInt -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType)
                   x) -}
d3a816cbc2166936c48d69ffe710578c
  $fBitsCInt10 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt) -> GHC.Types.Bool)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
4cb9b9f8772a9f309349d1ab5aa6aea7
  $fBitsCInt11 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Int.$fBitsInt3) -}
3b1febfe54cc75cc3ca1137c807ad0d2
  $fBitsCInt12 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 GHC.Types.Int)>_N)) -}
c71963133725e8594008a8bb9f402d96
  $fBitsCInt13 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CInt, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CInt
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CInt
                       @ (Foreign.C.Types.CInt, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCInt
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CInt, GHC.Types.Int) -> Foreign.C.Types.CInt)
                          @ Foreign.C.Types.CInt
                          @~ <(Foreign.C.Types.CInt, GHC.Types.Int)
                              -> Foreign.C.Types.CInt>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CInt, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CInt
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CInt)
                             @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CInt)
                                @ Foreign.C.Types.CInt
                                @ ()
                                @~ <((), Foreign.C.Types.CInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))) -}
06ea13eb8dfe446cb0f29c6c188cd806
  $fBitsCInt14 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
7f50150650b46041552b91b7d929f36d
  $fBitsCInt15 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   GHC.Types.True) -}
510e52b6dc9f81acd57c1a764e3e939c
  $fBitsCInt16 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CInt)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Classes.Eq.$fEqCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Classes.Eq.$fEqCInt_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CInt
                               @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                               Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltCInt
                               Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                                     @ Foreign.C.Types.CInt
                                     @ ((), Foreign.C.Types.CInt)
                                     @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CInt)
                                        @ Foreign.C.Types.CInt
                                        @ ()
                                        @~ <((), Foreign.C.Types.CInt)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ Foreign.C.Types.CInt
                                        Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Foreign.C.Types.CInt
                                           @ (Foreign.C.Types.CInt, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                           Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (Foreign.C.Types.CInt, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), Foreign.C.Types.CInt)
                                                 @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCInt17
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <Foreign.C.Types.CInt>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CInt>_N
                                               <Foreign.C.Types.CInt>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                             Foreign.C.Types.CInt)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
839215eb1881ed4563614daad9711cba
  $fBitsCInt17 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @ ()
                   @~ <((), Foreign.C.Types.CInt)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt18
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)) -}
909395d8b73379396092d1fc959df9dd
  $fBitsCInt18 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CInt
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt19
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))) -}
928161048c994cc24fcc814cc9f736d6
  $fBitsCInt19 :: GHC.Int.Int32
  {- HasNoCafRefs, Unfolding: (GHC.Int.I32# 1#) -}
cf0b1fc0532d268a5611031ea45936af
  $fBitsCInt2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CInt, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CInt
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CInt
                       @ (Foreign.C.Types.CInt, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCInt
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CInt, GHC.Types.Int) -> Foreign.C.Types.CInt)
                          @ Foreign.C.Types.CInt
                          @~ <(Foreign.C.Types.CInt, GHC.Types.Int)
                              -> Foreign.C.Types.CInt>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CInt, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CInt
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CInt)
                             @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CInt)
                                @ Foreign.C.Types.CInt
                                @ ()
                                @~ <((), Foreign.C.Types.CInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))) -}
d13d28881484bdc5391084dbb02edf47
  $fBitsCInt20 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCInt13
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CInt
                               Data.Array.Accelerate.Array.Sugar.$fEltCInt
                               (GHC.Int.I32# 1#) `cast` (Sym (Foreign.C.Types.N:CInt[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
e661df5b3f4e5f3b67dcbb4a2194eb96
  $fBitsCInt21 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CInt
                            @ Foreign.C.Types.CInt
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt22
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CInt
                               Data.Array.Accelerate.Array.Sugar.$fEltCInt
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ Foreign.C.Types.CInt
                                  @ (Foreign.C.Types.CInt, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (Foreign.C.Types.CInt, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), Foreign.C.Types.CInt)
                                        @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsCInt17
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
c8126fb8a9c72e11d43a1003dda5a93e
  $fBitsCInt22 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CInt -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CInt -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <Foreign.C.Types.CInt -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType) -}
4dd74e7fde71af586ac4e4f320b05903
  $fBitsCInt23 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCInt13
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CInt
                               Data.Array.Accelerate.Array.Sugar.$fEltCInt
                               (GHC.Int.I32# 1#) `cast` (Sym (Foreign.C.Types.N:CInt[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
cd4d7ed1240e778f77d7cb251ec2ac7f
  $fBitsCInt24 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt13
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CInt
                      Data.Array.Accelerate.Array.Sugar.$fEltCInt
                      (GHC.Int.I32# 1#) `cast` (Sym (Foreign.C.Types.N:CInt[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                   eta) -}
8803b6c1b7eaed0ba185a14dcc4be431
  $fBitsCInt25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CInt
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
2cc46b15c3d621ab628e28257f880141
  $fBitsCInt26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt27
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R) -}
4773f307ea9a47b6761c43a27ce96e73
  $fBitsCInt27 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @ ((), Foreign.C.Types.CInt)
                   @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt36
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)) -}
1a60769ea89dbddb236b498acf9cab7f
  $fBitsCInt28 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CInt
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt22
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)) -}
7eccdb1117d52eaa502505b29d78f633
  $fBitsCInt29 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CInt
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt33
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)) -}
bff91339bd27a06486306dabc9316ad5
  $fBitsCInt3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CInt, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CInt
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CInt
                       @ (Foreign.C.Types.CInt, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCInt
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CInt, GHC.Types.Int) -> Foreign.C.Types.CInt)
                          @ Foreign.C.Types.CInt
                          @~ <(Foreign.C.Types.CInt, GHC.Types.Int)
                              -> Foreign.C.Types.CInt>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CInt, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CInt
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CInt)
                             @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CInt)
                                @ Foreign.C.Types.CInt
                                @ ()
                                @~ <((), Foreign.C.Types.CInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))) -}
ef76af0bcba9cda3cb16abf92704f0e9
  $fBitsCInt30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CInt
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt31
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 GHC.Types.Int)>_N)) -}
3279d4fdecb386dc4793ff53d11be95d
  $fBitsCInt31 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CInt, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt32
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R) -}
06e9cdae50608f1de33f98574cc682a6
  $fBitsCInt32 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CInt), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CInt)
                   @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt17
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
5ffe82f94496ad8762f9d2aabeea65dd
  $fBitsCInt33 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt34
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
03c489956c16e54c086c9a06ab1cc804
  $fBitsCInt34 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt35
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
3e1e23a74aa225f9c7b02c6dba71e9bf
  $fBitsCInt35 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
9f130ae4ce53df2d150b24e73447542f
  $fBitsCInt36 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @ ()
                   @~ <((), Foreign.C.Types.CInt)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)) -}
33b3af737abe580d3b4933bd499196e3
  $fBitsCInt37 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
e32029348d5442b604614ee32cdd5f4b
  $fBitsCInt38 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CUInt -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CUInt -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CInt
                   @~ <Foreign.C.Types.CUInt -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType) -}
d6cee7ab4ad7e0f419c7a563531ab91a
  $fBitsCInt39 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CInt -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CInt -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CInt
                   @ Foreign.C.Types.CUInt
                   @~ <Foreign.C.Types.CInt -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsScalarCInt_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
35aefb9b452bab7f59f4c5eac0748712
  $fBitsCInt4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 GHC.Types.Int)>_N)) -}
de7f67c5dbb0ff56a8eb778d298f5026
  $fBitsCInt40 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt41
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
b7f65f83030caf4c0f99c9a180980ad4
  $fBitsCInt41 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt42
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
9a203b1d2c0c21f947dc52f91847c0d8
  $fBitsCInt42 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt37
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
ad302af98325c821038fa7ec76a571a1
  $fBitsCInt43 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt44) -}
2e39e8f7e23ec3abbde351848ddacb91
  $fBitsCInt44 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
c8b083209e4192730b4ce4a3cabefba6
  $fBitsCInt45 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsCInt13 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCInt
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CInt
                          Data.Array.Accelerate.Array.Sugar.$fEltCInt
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt10
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                                Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                                   @ Foreign.C.Types.CInt
                                   @ ((), Foreign.C.Types.CInt)
                                   @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), Foreign.C.Types.CInt)
                                      @ Foreign.C.Types.CInt
                                      @ ()
                                      @~ <((), Foreign.C.Types.CInt)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                           Foreign.C.Types.CInt)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt6
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CInt
                          @ (Foreign.C.Types.CInt, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltCInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CInt, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CInt)
                                @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CInt)
                                   @ Foreign.C.Types.CInt
                                   @ ()
                                   @~ <((), Foreign.C.Types.CInt)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))) -}
63069ad49e2c51f6adcb9994cc018120
  $fBitsCInt46 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CInt -> Foreign.C.Types.CInt)
                      @ Foreign.C.Types.CInt
                      @~ <Foreign.C.Types.CInt -> Foreign.C.Types.CInt>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType)
                   x) -}
4b10b413192d65414f6394eb4c4a7b34
  $fBitsCInt47 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
5fa4811b0f66396302490a928d26a221
  $fBitsCInt48 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
9cb3d125f43a86c817132604d1b331ce
  $fBitsCInt49 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                         @ Foreign.C.Types.CInt
                         @ ((), Foreign.C.Types.CInt)
                         @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CInt)
                            @ Foreign.C.Types.CInt
                            @ ()
                            @~ <((), Foreign.C.Types.CInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                 Foreign.C.Types.CInt)>_N)) -}
c5219a93558c0dec5609e22058d48123
  $fBitsCInt5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CInt
                      Data.Array.Accelerate.Array.Sugar.$fEltCInt
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt10
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)
                               @ Foreign.C.Types.CInt
                               @ ((), Foreign.C.Types.CInt)
                               @~ <(((), Foreign.C.Types.CInt), Foreign.C.Types.CInt)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCInt
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), Foreign.C.Types.CInt)
                                  @ Foreign.C.Types.CInt
                                  @ ()
                                  @~ <((), Foreign.C.Types.CInt)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltCInt
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <Foreign.C.Types.CInt>_N <Foreign.C.Types.CInt>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                       Foreign.C.Types.CInt)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt6
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt8
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CInt
                      @ (Foreign.C.Types.CInt, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltCInt
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (Foreign.C.Types.CInt, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), Foreign.C.Types.CInt), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), Foreign.C.Types.CInt)
                            @~ <(((), Foreign.C.Types.CInt), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), Foreign.C.Types.CInt)
                               @ Foreign.C.Types.CInt
                               @ ()
                               @~ <((), Foreign.C.Types.CInt)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <Foreign.C.Types.CInt>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CInt,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N)) -}
d191902bd9cc961287c98e04b293817b
  $fBitsCInt6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CInt
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt7
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))) -}
d9ad7ede2d35291d3b3d2aa13b02ba5e
  $fBitsCInt7 :: GHC.Int.Int32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I32# -1#) -}
2465e0e07ff527c4797244a171242d38
  $fBitsCInt8 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CInt
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt9
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))) -}
06acde412666ec63b9443b695760a570
  $fBitsCInt9 :: GHC.Int.Int32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I32# 0#) -}
19f2283b4d0faf8b5cca7b6c21334ae8
  $fBitsCInt_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt49
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
05b0e1b63eb9a6082fa65f3cb4e2284d
  $fBitsCInt_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt48
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
829c3d0a7662f8ec38c903f2ffa16c33
  $fBitsCInt_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt24
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
f4bd75bb9c4dbf31d1accaeeb31e076b
  $fBitsCInt_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt21
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
5297c2fba93de6fbfe7feb8b2a38272c
  $fBitsCInt_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt46
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
d6032a8fede2139dab4afae01d302a7c
  $fBitsCInt_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
c746c28f1945fffb5403d99129dfbf50
  $fBitsCInt_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
85214a9bbe5fba4d33bfe2db6c373621
  $fBitsCInt_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
70168b8d4937a487ab80dc687c1ff86a
  $fBitsCInt_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CInt
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) }) -}
85bf6d9abc08855c56b2d76bd0e2ef7a
  $fBitsCInt_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
5645090c780f6fd8365c7be07796a88f
  $fBitsCInt_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
a49fb3441bcddfda234d65101b554dde
  $fBitsCInt_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt23
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
7561e725301dcbc752abf7dcb931710f
  $fBitsCInt_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt45
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
593b9558818192f5211a5a679b060870
  $fBitsCInt_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
5f85174b122ded38307c9eed478c1f33
  $fBitsCInt_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
6fd598820b48f7602ea4ef3409179f48
  $fBitsCInt_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
b3575400f16019a570057ff9da7e19f3
  $fBitsCInt_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
62730dfb9cd01700a8fed833e8142b74
  $fBitsCInt_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
5d1655ead288144958b8252d7f3da67b
  $fBitsCInt_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt47
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
d652f0c4f71ffdc53d99c2efbb587d5d
  $fBitsCInt_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt25
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) -}
95136ebaf03e8c13aa94a539a731c175
  $fBitsCInt_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CInt
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt) -}
5febc90d57bc115566f6e08d1ea65210
  $fBitsCInt_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUInt, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CUInt
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
38cb1c8d782f22e38790548b01010647
  $fBitsCInt_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt) -}
93d2835912f9d492a77a03c9d2966e66
  $fBitsCInt_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
       -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType) -}
2d96b072c6ab46f466c3c3f01d0f8e32
  $fBitsCInt_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt) -}
4730deb3e5245c63c9422d0ab8e998dd
  $fBitsCInt_lvl14 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType) -}
174130254f7e51d1951fc26c5c9ced7e
  $fBitsCInt_lvl15 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
80d0316e0c3d7e3fe28538ea5d277513
  $fBitsCInt_lvl16 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
b2514975fbea88b8407f580b366b5dfd
  $fBitsCInt_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CInt, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CInt
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
f88ce5d04cdafb0811591ef5690da430
  $fBitsCInt_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, GHC.Types.Int) -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CInt, GHC.Types.Int) -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, GHC.Types.Int)
                       -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType) -}
6b7beff79569f6afbe84a3fd1d0df31b
  $fBitsCInt_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CInt, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CInt
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
ef2d70c7fcdae1645eb1d70fb32924db
  $fBitsCInt_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CInt, Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CInt
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt) -}
b2a9c8516d4d7618eb5aa3cd4f687905
  $fBitsCInt_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, GHC.Types.Int) -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CInt, GHC.Types.Int) -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, GHC.Types.Int)
                       -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType) -}
cad17f21a56096c14c382b3886797bfc
  $fBitsCInt_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
       -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType) -}
ed551ebe8b3b15a538c33e845359d8dd
  $fBitsCInt_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
       -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType) -}
0e75ae54a19b6310f08c1a71cc2da347
  $fBitsCInt_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
       -> Foreign.C.Types.CInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                      -> Foreign.C.Types.CInt)
                   @ Foreign.C.Types.CInt
                   @~ <(Foreign.C.Types.CInt, Foreign.C.Types.CInt)
                       -> Foreign.C.Types.CInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType) -}
dc34648a261c14c12fc994e9906b2232
  $fBitsCInt_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, GHC.Types.Int)
                       -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType) -}
2d2b2d8fcd90c5f87dd5e7cb2bdcccf7
  $fBitsCInt_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUInt, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CUInt
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
a4788bc93bf2103c861026c354602617
  $fBitsCInt_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, GHC.Types.Int)
                       -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCLLong ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CLLong
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CLLong
                  Data.Array.Accelerate.Classes.Eq.$fEqCLLong
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_$cpopCount -}
f0ff9bf1236d4c303a18c33abf403df6
  $fBitsCLLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CLLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CLLong
                      @~ <Foreign.C.Types.CLLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType)
                   x) -}
52f58e8beeb8802e579908f5f54918d0
  $fBitsCLLong10 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
de7d23f14f5ef95f9495c058f9922937
  $fBitsCLLong11 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Int.$fBitsInt5) -}
fbb1c08838e4375d863c17a0a431280a
  $fBitsCLLong12 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 GHC.Types.Int)>_N)) -}
4c0e949d1e2edd1deaa9230c0aa457d4
  $fBitsCLLong13 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CLLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CLLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLLong
                       @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CLLong, GHC.Types.Int)
                             -> Foreign.C.Types.CLLong)
                          @ Foreign.C.Types.CLLong
                          @~ <(Foreign.C.Types.CLLong, GHC.Types.Int)
                              -> Foreign.C.Types.CLLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CLLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CLLong)
                             @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CLLong)
                                @ Foreign.C.Types.CLLong
                                @ ()
                                @~ <((), Foreign.C.Types.CLLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))) -}
46697e7d79401cd6d2c27a145e9808c8
  $fBitsCLLong14 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
76579bbc71985aaa5481a91a9495d3a1
  $fBitsCLLong15 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CLLong)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Classes.Eq.$fEqCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCLLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Classes.Eq.$fEqCLLong_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLLong
                               @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                               Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                                     @ Foreign.C.Types.CLLong
                                     @ ((), Foreign.C.Types.CLLong)
                                     @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CLLong)
                                        @ Foreign.C.Types.CLLong
                                        @ ()
                                        @~ <((), Foreign.C.Types.CLLong)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ Foreign.C.Types.CLLong
                                        Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Foreign.C.Types.CLLong
                                           @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), Foreign.C.Types.CLLong)
                                                 @~ <(((), Foreign.C.Types.CLLong),
                                                      GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong16
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <Foreign.C.Types.CLLong>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CLLong>_N
                                               <Foreign.C.Types.CLLong>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                             Foreign.C.Types.CLLong)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
7b3bf180a5f080192721587ee137a8de
  $fBitsCLLong16 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @ ()
                   @~ <((), Foreign.C.Types.CLLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong17
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)) -}
224b8a25e06d8b271d399c2c98f04fef
  $fBitsCLLong17 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLLong
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong18
                     `cast`
                   (Sym (Foreign.C.Types.N:CLLong[0]))) -}
c9fc99856e9b75d45490c5a8d5c8e776
  $fBitsCLLong18 :: GHC.Int.Int64
  {- HasNoCafRefs, Unfolding: (GHC.Int.I64# 1#) -}
0b53e112fbe3a5387ac25435ec8035ba
  $fBitsCLLong19 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCLLong13
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                               (GHC.Int.I64# 1#) `cast` (Sym (Foreign.C.Types.N:CLLong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
97ae2dc6d3e6cbb4cef7539db169b2a8
  $fBitsCLLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CLLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CLLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLLong
                       @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CLLong, GHC.Types.Int)
                             -> Foreign.C.Types.CLLong)
                          @ Foreign.C.Types.CLLong
                          @~ <(Foreign.C.Types.CLLong, GHC.Types.Int)
                              -> Foreign.C.Types.CLLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CLLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CLLong)
                             @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CLLong)
                                @ Foreign.C.Types.CLLong
                                @ ()
                                @~ <((), Foreign.C.Types.CLLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))) -}
edbd1b64cab48df9b763d487f3ea6ca0
  $fBitsCLLong20 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CLLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CLLong
                            @ Foreign.C.Types.CLLong
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong21
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ Foreign.C.Types.CLLong
                                  @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), Foreign.C.Types.CLLong)
                                        @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsCLLong16
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
c7fe1386a0c59596d00940c79371c4bd
  $fBitsCLLong21 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CLLong -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CLLong -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <Foreign.C.Types.CLLong -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType) -}
39c925ea210763002bd19db81b4b124c
  $fBitsCLLong22 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCLLong13
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                               (GHC.Int.I64# 1#) `cast` (Sym (Foreign.C.Types.N:CLLong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
9481ed19e47e44742bb8698074aec1d0
  $fBitsCLLong23 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong13
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CLLong
                      Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                      (GHC.Int.I64# 1#) `cast` (Sym (Foreign.C.Types.N:CLLong[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                   eta) -}
4913e4aad2bdf4e52948d4d9ffce7f75
  $fBitsCLLong24 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
7c8d70b69488d4883da2e5884fa46404
  $fBitsCLLong25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong26
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R) -}
2f06ca8917ef55624ad65b167f726f9d
  $fBitsCLLong26 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @ ((), Foreign.C.Types.CLLong)
                   @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong35
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong27
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)) -}
262ce2c44bcb32036459cdda827b2cad
  $fBitsCLLong27 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong21
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)) -}
a0ea88d32ac2acfd16fdb0cb01a885a2
  $fBitsCLLong28 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLLong
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong32
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)) -}
c5da1186f07043315f975d85bbe592b2
  $fBitsCLLong29 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 GHC.Types.Int)>_N)) -}
239a417c7515f9f9319088aa726930c8
  $fBitsCLLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CLLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CLLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLLong
                       @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CLLong, GHC.Types.Int)
                             -> Foreign.C.Types.CLLong)
                          @ Foreign.C.Types.CLLong
                          @~ <(Foreign.C.Types.CLLong, GHC.Types.Int)
                              -> Foreign.C.Types.CLLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CLLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CLLong)
                             @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CLLong)
                                @ Foreign.C.Types.CLLong
                                @ ()
                                @~ <((), Foreign.C.Types.CLLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))) -}
cde9bd2666d91a7ba8662f6933be251c
  $fBitsCLLong30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CLLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong31
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R) -}
f4a75394d1017bcc37848b67ff653a26
  $fBitsCLLong31 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CLLong), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CLLong)
                   @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong16
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
f8d2d7c76a4609114be5506a390e7a50
  $fBitsCLLong32 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong33
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
d34bb2e40f9ca1b20168405ceece7487
  $fBitsCLLong33 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong34
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
a1458310408835916936747c48cb4115
  $fBitsCLLong34 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
382b22ca1fbfe34b1c30426438080503
  $fBitsCLLong35 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @ ()
                   @~ <((), Foreign.C.Types.CLLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)) -}
bbcf94fe6c9494a8ba8e56dc886554b0
  $fBitsCLLong36 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
9ff79f458401d869818f960688a7c9f3
  $fBitsCLLong37 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CULLong -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CULLong -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CLLong
                   @~ <Foreign.C.Types.CULLong -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType) -}
45393d72363554008e2ae04772329332
  $fBitsCLLong38 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CLLong -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CLLong -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CLLong
                   @ Foreign.C.Types.CULLong
                   @~ <Foreign.C.Types.CLLong -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLLong_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
4b70fd1bbdb824386da70851d17e0732
  $fBitsCLLong39 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong40
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
1849077479e9574ae218e431880a8a71
  $fBitsCLLong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 GHC.Types.Int)>_N)) -}
90de4b5b0855f2617c8bee02f56841a6
  $fBitsCLLong40 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong41
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
d980f5fca661336ceed6ac99868e98c7
  $fBitsCLLong41 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong36
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
4ab21c7cf154a781dc84f79ae780199c
  $fBitsCLLong42 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsCLLong13 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CLLong
                          Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong10
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                                Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                                   @ Foreign.C.Types.CLLong
                                   @ ((), Foreign.C.Types.CLLong)
                                   @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), Foreign.C.Types.CLLong)
                                      @ Foreign.C.Types.CLLong
                                      @ ()
                                      @~ <((), Foreign.C.Types.CLLong)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <Foreign.C.Types.CLLong>_N
                                             <Foreign.C.Types.CLLong>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                           Foreign.C.Types.CLLong)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong6
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CLLong
                          @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CLLong)
                                @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CLLong)
                                   @ Foreign.C.Types.CLLong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CLLong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))) -}
14b13cc26eb3447ce124dd616261b118
  $fBitsCLLong43 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CLLong -> Foreign.C.Types.CLLong)
                      @ Foreign.C.Types.CLLong
                      @~ <Foreign.C.Types.CLLong -> Foreign.C.Types.CLLong>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType)
                   x) -}
de5ceeb27b68cf107ed623b20a35efd4
  $fBitsCLLong44 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
19786f7e15b30129d20d15d05ba16f74
  $fBitsCLLong45 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
04d1adad83e448f47891b49ba7d3591b
  $fBitsCLLong46 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                         @ Foreign.C.Types.CLLong
                         @ ((), Foreign.C.Types.CLLong)
                         @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLLong)
                            @ Foreign.C.Types.CLLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                 Foreign.C.Types.CLLong)>_N)) -}
396cb7d1d5e6cc0968adc590f73c08ce
  $fBitsCLLong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CLLong
                      Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong10
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)
                               @ Foreign.C.Types.CLLong
                               @ ((), Foreign.C.Types.CLLong)
                               @~ <(((), Foreign.C.Types.CLLong), Foreign.C.Types.CLLong)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), Foreign.C.Types.CLLong)
                                  @ Foreign.C.Types.CLLong
                                  @ ()
                                  @~ <((), Foreign.C.Types.CLLong)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <Foreign.C.Types.CLLong>_N <Foreign.C.Types.CLLong>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                       Foreign.C.Types.CLLong)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong6
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong8
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CLLong
                      @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (Foreign.C.Types.CLLong, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), Foreign.C.Types.CLLong), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), Foreign.C.Types.CLLong)
                            @~ <(((), Foreign.C.Types.CLLong), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), Foreign.C.Types.CLLong)
                               @ Foreign.C.Types.CLLong
                               @ ()
                               @~ <((), Foreign.C.Types.CLLong)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <Foreign.C.Types.CLLong>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLLong,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N)) -}
ddaa5ebf84d881e0e7d9580e5bb6aa1a
  $fBitsCLLong6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLLong
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong7
                     `cast`
                   (Sym (Foreign.C.Types.N:CLLong[0]))) -}
1572e290704eb7e3d26216e46853572f
  $fBitsCLLong7 :: GHC.Int.Int64
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I64# -1#) -}
0917b6639ed3b32e5d6d918d934eea9e
  $fBitsCLLong8 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLLong
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong9
                     `cast`
                   (Sym (Foreign.C.Types.N:CLLong[0]))) -}
4d6dcd690e880874952a61c3cc752776
  $fBitsCLLong9 :: GHC.Int.Int64
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I64# 0#) -}
e2087fb437477445acf5bd660d103b20
  $fBitsCLLong_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong46
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
be570a669e763ab5da0a242d02cdb2bc
  $fBitsCLLong_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong45
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
5aeed97cff7b14fe2c29392cac32aa18
  $fBitsCLLong_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong23
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
6f6ee3474258a25913b3577c1f1fe369
  $fBitsCLLong_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
091ff1a6d869769da5a6a7a4f7eb475d
  $fBitsCLLong_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong43
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
7b30eab2ceb500906add3d7be9187448
  $fBitsCLLong_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
ee8a670628932906b5abf680e33f1415
  $fBitsCLLong_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
8a095ab778afcdd265de4a921e9be157
  $fBitsCLLong_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
12e5c9d50fc183c1f1b9d737d7960673
  $fBitsCLLong_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate1
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CLLong
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) }) -}
f011b8b5f2cafd951d0c9e3dda5febc6
  $fBitsCLLong_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
35628c3916699a38787cfa09c5cf7e89
  $fBitsCLLong_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
cca7f782f68ba5f389d1f2ad1649d185
  $fBitsCLLong_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong22
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
7c475f5ec90add7e7d991f8d53048947
  $fBitsCLLong_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong42
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
06c75d721cc45b5a8944bc1fcf2ba62b
  $fBitsCLLong_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
60751a2c01b1f89c49cc2a8645ca0ff1
  $fBitsCLLong_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
1d6bd46c76f009fc3d84e46052dc866d
  $fBitsCLLong_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
9772c7887777aa7484b7453cfe01b8df
  $fBitsCLLong_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
24d98dac79348730eb130caa4a9353cc
  $fBitsCLLong_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
205b442d9948d2a09cd5b99019d1fbd8
  $fBitsCLLong_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong44
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
a3a944740545a307777ed98569ec2c9c
  $fBitsCLLong_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong24
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) -}
df65eff1bf7ed55eaebb38c721a28e8f
  $fBitsCLLong_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CLLong
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong) -}
f5dbf8b0b9578b072607101fa93bf7ce
  $fBitsCLLong_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CULLong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
813bd47d9f6503eba3c617913d6ec169
  $fBitsCLLong_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong) -}
bcf5db054c06735dfe1c25f395f6bdf8
  $fBitsCLLong_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType) -}
13d0760178f7c8e5f46a1c539c53256f
  $fBitsCLLong_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong) -}
0a6ef78b8baad75274148f69a5d968ad
  $fBitsCLLong_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CLLong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
2cb1217bbda5ca29bcd94905706124bf
  $fBitsCLLong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, GHC.Types.Int) -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CLLong, GHC.Types.Int)
                      -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, GHC.Types.Int)
                       -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType) -}
c2f92750c4faef2f693b46923dac013e
  $fBitsCLLong_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CLLong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
e63adb7bd1a54478155bc39c5e22a104
  $fBitsCLLong_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CLLong
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong) -}
4acffa6aa0d1fca19cab08c82b0959e3
  $fBitsCLLong_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, GHC.Types.Int) -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CLLong, GHC.Types.Int)
                      -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, GHC.Types.Int)
                       -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType) -}
b4dcc22910319a20017eecf8955a874d
  $fBitsCLLong_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType) -}
4f757a6a2dc2174fe33e392d37c84ac5
  $fBitsCLLong_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType) -}
aa87a4fd882be30712fd6eeaa1be9070
  $fBitsCLLong_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
       -> Foreign.C.Types.CLLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                      -> Foreign.C.Types.CLLong)
                   @ Foreign.C.Types.CLLong
                   @~ <(Foreign.C.Types.CLLong, Foreign.C.Types.CLLong)
                       -> Foreign.C.Types.CLLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType) -}
80ab24ea4c06385be88df1eab184e862
  $fBitsCLLong_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, GHC.Types.Int)
       -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CULLong, GHC.Types.Int)
                      -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, GHC.Types.Int)
                       -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType) -}
d96bfc286c42624bde311973a0b0177b
  $fBitsCLLong_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CULLong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
8221508818f36d790fd40a59a2aa30ce
  $fBitsCLLong_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, GHC.Types.Int)
       -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CULLong, GHC.Types.Int)
                      -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, GHC.Types.Int)
                       -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCLong ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CLong
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CLong
                  Data.Array.Accelerate.Classes.Eq.$fEqCLong
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_$cpopCount -}
42da57b6c69eba8a3eaec41145f85d6a
  $fBitsCLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CLong
                      @~ <Foreign.C.Types.CLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType)
                   x) -}
6600034630cb79f5177a3f3862d65553
  $fBitsCLong10 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLong
                       @ (Foreign.C.Types.CLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCLong
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CLong, GHC.Types.Int) -> Foreign.C.Types.CLong)
                          @ Foreign.C.Types.CLong
                          @~ <(Foreign.C.Types.CLong, GHC.Types.Int)
                              -> Foreign.C.Types.CLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CLong)
                             @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CLong)
                                @ Foreign.C.Types.CLong
                                @ ()
                                @~ <((), Foreign.C.Types.CLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))) -}
9a384f2a4df34d10052ed7742f7de416
  $fBitsCLong11 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
3a9ade8891d7a11c6c252feeb444d494
  $fBitsCLong12 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CLong)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Classes.Eq.$fEqCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Classes.Eq.$fEqCLong_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLong
                               @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltCLong
                               Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                                     @ Foreign.C.Types.CLong
                                     @ ((), Foreign.C.Types.CLong)
                                     @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CLong)
                                        @ Foreign.C.Types.CLong
                                        @ ()
                                        @~ <((), Foreign.C.Types.CLong)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ Foreign.C.Types.CLong
                                        Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Foreign.C.Types.CLong
                                           @ (Foreign.C.Types.CLong, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (Foreign.C.Types.CLong, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), Foreign.C.Types.CLong)
                                                 @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCLong13
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <Foreign.C.Types.CLong>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CLong>_N
                                               <Foreign.C.Types.CLong>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                             Foreign.C.Types.CLong)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
61236c7e8f7709725f3cd156acc06b28
  $fBitsCLong13 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @ ()
                   @~ <((), Foreign.C.Types.CLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong14
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)) -}
a45f15ba3e17512213beee234a6cefe5
  $fBitsCLong14 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLong
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong18
                     `cast`
                   (Sym (Foreign.C.Types.N:CLong[0]))) -}
90ef9c2858c8b24a87bd9c2de4c28ca1
  $fBitsCLong15 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCLong10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCLong
                               (GHC.Int.I64# 1#) `cast` (Sym (Foreign.C.Types.N:CLong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
5ed311683e8775abaf06b0634d915f30
  $fBitsCLong16 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CLong
                            @ Foreign.C.Types.CLong
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            Data.Array.Accelerate.Data.Bits.$fBitsCLong17
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCLong
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ Foreign.C.Types.CLong
                                  @ (Foreign.C.Types.CLong, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (Foreign.C.Types.CLong, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), Foreign.C.Types.CLong)
                                        @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsCLong13
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
2f3a9a8bcfbac3090c11940cc07115df
  $fBitsCLong17 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CLong -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CLong -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <Foreign.C.Types.CLong -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType) -}
1a73a7a1594f85483171450068ae0aca
  $fBitsCLong18 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCLong10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCLong
                               (GHC.Int.I64# 1#) `cast` (Sym (Foreign.C.Types.N:CLong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
fd90dd2a7b7a369f0dee4535d18a249e
  $fBitsCLong19 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCLong10
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CLong
                      Data.Array.Accelerate.Array.Sugar.$fEltCLong
                      (GHC.Int.I64# 1#) `cast` (Sym (Foreign.C.Types.N:CLong[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                   eta) -}
6bbdcada4d0e175524ea98ea7485dff1
  $fBitsCLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLong
                       @ (Foreign.C.Types.CLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCLong
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CLong, GHC.Types.Int) -> Foreign.C.Types.CLong)
                          @ Foreign.C.Types.CLong
                          @~ <(Foreign.C.Types.CLong, GHC.Types.Int)
                              -> Foreign.C.Types.CLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CLong)
                             @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CLong)
                                @ Foreign.C.Types.CLong
                                @ ()
                                @~ <((), Foreign.C.Types.CLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))) -}
c4adcab6acd4c25f47ab1b0d90a6640d
  $fBitsCLong20 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong21
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
5b1624f8f749de760fb1a3e0cc14651c
  $fBitsCLong21 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong22
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R) -}
dd1a4ceaa0957904be43deafb9f776e8
  $fBitsCLong22 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @ ((), Foreign.C.Types.CLong)
                   @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong28
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong23
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)) -}
131df0d6d88f757ccda147a47d836dad
  $fBitsCLong23 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong17
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong24
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)) -}
daaecfc30d538673f6c516a347f494db
  $fBitsCLong24 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLong
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong32
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)) -}
2e758d46d1105f03b88d0eab4d22add3
  $fBitsCLong25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 GHC.Types.Int)>_N)) -}
62917f63f80bacab3fd3987eda37db70
  $fBitsCLong26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong27
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R) -}
7609ff1d00c18706cefbcbb4912332c7
  $fBitsCLong27 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CLong), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CLong)
                   @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong13
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
88464a4db9ba02270e7090ccbcb0001b
  $fBitsCLong28 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @ ()
                   @~ <((), Foreign.C.Types.CLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong24
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)) -}
da34b94d1270b187f4dc18bca9816e85
  $fBitsCLong29 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CULong -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CULong -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CLong
                   @~ <Foreign.C.Types.CULong -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
f71c0537fae20ed010c0d5decb396ee6
  $fBitsCLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLong
                       @ (Foreign.C.Types.CLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCLong
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CLong, GHC.Types.Int) -> Foreign.C.Types.CLong)
                          @ Foreign.C.Types.CLong
                          @~ <(Foreign.C.Types.CLong, GHC.Types.Int)
                              -> Foreign.C.Types.CLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CLong)
                             @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CLong)
                                @ Foreign.C.Types.CLong
                                @ ()
                                @~ <((), Foreign.C.Types.CLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))) -}
a54b38fb446604578112a2e730d2001a
  $fBitsCLong30 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CLong -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CLong -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CLong
                   @ Foreign.C.Types.CULong
                   @~ <Foreign.C.Types.CLong -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
d2ad14f0cfdc34217b9a009465bf92b9
  $fBitsCLong31 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsCLong10 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCLong
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CLong
                          Data.Array.Accelerate.Array.Sugar.$fEltCLong
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong8
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                                Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                                   @ Foreign.C.Types.CLong
                                   @ ((), Foreign.C.Types.CLong)
                                   @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), Foreign.C.Types.CLong)
                                      @ Foreign.C.Types.CLong
                                      @ ()
                                      @~ <((), Foreign.C.Types.CLong)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <Foreign.C.Types.CLong>_N
                                             <Foreign.C.Types.CLong>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                           Foreign.C.Types.CLong)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong6
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CLong
                          @ (Foreign.C.Types.CLong, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltCLong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CLong, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CLong)
                                @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CLong)
                                   @ Foreign.C.Types.CLong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CLong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))) -}
466678988ad7c4f5a95de0da22a25b31
  $fBitsCLong32 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CLong -> Foreign.C.Types.CLong)
                      @ Foreign.C.Types.CLong
                      @~ <Foreign.C.Types.CLong -> Foreign.C.Types.CLong>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType)
                   x) -}
4786644dcf0abc47093d48f4c5df6b74
  $fBitsCLong33 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
6d317cbbd580db4a1af0e02a6a5e90b2
  $fBitsCLong34 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
91e28a2efcc5ffeb919fe80c6f196d16
  $fBitsCLong35 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                         @ Foreign.C.Types.CLong
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 Foreign.C.Types.CLong)>_N)) -}
a897b5577ba3fd2ecdeeb0df80fb31f9
  $fBitsCLong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 GHC.Types.Int)>_N)) -}
a8a17455b9b71000a0f9c069df15c97d
  $fBitsCLong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CLong
                      Data.Array.Accelerate.Array.Sugar.$fEltCLong
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                         Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsCLong8
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)
                               @ Foreign.C.Types.CLong
                               @ ((), Foreign.C.Types.CLong)
                               @~ <(((), Foreign.C.Types.CLong), Foreign.C.Types.CLong)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCLong
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), Foreign.C.Types.CLong)
                                  @ Foreign.C.Types.CLong
                                  @ ()
                                  @~ <((), Foreign.C.Types.CLong)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltCLong
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <Foreign.C.Types.CLong>_N <Foreign.C.Types.CLong>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                       Foreign.C.Types.CLong)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong6
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong7
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CLong
                      @ (Foreign.C.Types.CLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltCLong
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (Foreign.C.Types.CLong, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), Foreign.C.Types.CLong)
                            @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), Foreign.C.Types.CLong)
                               @ Foreign.C.Types.CLong
                               @ ()
                               @~ <((), Foreign.C.Types.CLong)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCLong
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N)) -}
95b9132b585c56eef01fc28fffd23125
  $fBitsCLong6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLong
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong7
                     `cast`
                   (Sym (Foreign.C.Types.N:CLong[0]))) -}
caa1de237c4e7d8d286a21ce1bd038c5
  $fBitsCLong7 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CLong
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong9
                     `cast`
                   (Sym (Foreign.C.Types.N:CLong[0]))) -}
05b7bc382b549f04ebe0b3f2d5af84b5
  $fBitsCLong8 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCLong_$cscalarType) -}
eda61b0c2d683d614d690b9d693bc992
  $fBitsCLong9 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CLong
                   @ (Foreign.C.Types.CLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CLong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CLong)
                         @~ <(((), Foreign.C.Types.CLong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CLong)
                            @ Foreign.C.Types.CLong
                            @ ()
                            @~ <((), Foreign.C.Types.CLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CLong,
                                                                 GHC.Types.Int)>_N)) -}
24b240da7f105a4d060c5ad9a9639435
  $fBitsCLong_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong35
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
976135d1e2a3822acaa7ad39ec385d01
  $fBitsCLong_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong34
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
2ed8d0ca60ccc7e30d2306ce40ccad9c
  $fBitsCLong_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
22bdc60255aaa370abf75eade4f5fa31
  $fBitsCLong_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
0ec9fba35138f7898e2b1c2bc9b911fc
  $fBitsCLong_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong32
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
4a878405b1de9432bcf4f0829081bed1
  $fBitsCLong_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
4e730bad03a9dff678ff771489dc9f84
  $fBitsCLong_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
a2dc56c6e393033e6ca1c9aba916d50b
  $fBitsCLong_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
0b1fd5789f6e16a25a174811ff57f512
  $fBitsCLong_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate2
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CLong
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) }) -}
72aca08cbdd0d39b03c4b88dd2783a2d
  $fBitsCLong_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
0723c574fd7eb2cf525d5091057c06b9
  $fBitsCLong_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
3d4e4d8fda0c8df6cb5c1b140bedd314
  $fBitsCLong_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
3847ecfdb34344742e56906183d8ee12
  $fBitsCLong_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong31
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
c73615b265c69b3513b7e1b74921cb3f
  $fBitsCLong_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
682b251e59ca0d7cad1e3a6917974792
  $fBitsCLong_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
d3bde1f7f1a63bd0f973bfd1852c8373
  $fBitsCLong_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
9e8f2a2d478821fed7f61b88ade63800
  $fBitsCLong_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
71d37172956b807d69b6fa15a1e9f54c
  $fBitsCLong_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
630df12b80c8220eb60abd5b4208903c
  $fBitsCLong_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong33
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
05b8a729c925522d6c94eaeea31496a1
  $fBitsCLong_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong20
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) -}
80ac2b4036a09d841f67fe8d1889185d
  $fBitsCLong_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CLong
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong) -}
54d50b841f7790b140f57a76164fe225
  $fBitsCLong_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CULong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
15c3779556555ce2aaea95204de2912d
  $fBitsCLong_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong) -}
64260320e0962d05311188b2f6816214
  $fBitsCLong_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType) -}
e2cb45354f75454dddcb8609604dfce3
  $fBitsCLong_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong) -}
fb88a6f0825b27d21af2c1fff8755531
  $fBitsCLong_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CLong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
2ffead7042e54eb8616da6e917a6e355
  $fBitsCLong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, GHC.Types.Int) -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CLong, GHC.Types.Int) -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, GHC.Types.Int)
                       -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType) -}
85b66e5ef3a84fa13fe3f5252605d7d3
  $fBitsCLong_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CLong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
34d80a9b93d69e1f82cb9175a5d94de0
  $fBitsCLong_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CLong, Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CLong
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong) -}
6fa8588b41ab9f54fc55314ee66e46b4
  $fBitsCLong_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, GHC.Types.Int) -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CLong, GHC.Types.Int) -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, GHC.Types.Int)
                       -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType) -}
5091db04ece88ffdcaea544edb321efb
  $fBitsCLong_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
       -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType) -}
f4db5635d1bd9b56ccf8a390f4ecf0a0
  $fBitsCLong_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
       -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType) -}
c0ee15f7027516d49c9331d8c3c2ee9f
  $fBitsCLong_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
       -> Foreign.C.Types.CLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                      -> Foreign.C.Types.CLong)
                   @ Foreign.C.Types.CLong
                   @~ <(Foreign.C.Types.CLong, Foreign.C.Types.CLong)
                       -> Foreign.C.Types.CLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType) -}
f7fba6d834b30c835d931a1a06f20775
  $fBitsCLong_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, GHC.Types.Int) -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CULong, GHC.Types.Int)
                      -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, GHC.Types.Int)
                       -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType) -}
1cb1ee0d14afda48e998237c17ad26b3
  $fBitsCLong_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CULong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CULong
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
b323cab746ebe24d99a6b4096d7792bf
  $fBitsCLong_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, GHC.Types.Int) -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CULong, GHC.Types.Int)
                      -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, GHC.Types.Int)
                       -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCShort ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CShort
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CShort
                  Data.Array.Accelerate.Classes.Eq.$fEqCShort
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_$cpopCount -}
a8f607f15b481dd198a3c40c5c03eff6
  $fBitsCShort1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CShort -> GHC.Types.Int)
                      @ Foreign.C.Types.CShort
                      @~ <Foreign.C.Types.CShort -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType)
                   x) -}
35eda9279a48c545157a0280b224d19c
  $fBitsCShort10 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> GHC.Types.Bool)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
294120ed9283542677a39ea28ab407c2
  $fBitsCShort11 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Int.$fBitsInt1) -}
0ab1c69bd3c7bbee31e00c96b4030043
  $fBitsCShort12 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 GHC.Types.Int)>_N)) -}
35f43c319efb6f3d253fd45052617a90
  $fBitsCShort13 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CShort, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CShort
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCShort
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CShort
                       @ (Foreign.C.Types.CShort, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCShort
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CShort, GHC.Types.Int)
                             -> Foreign.C.Types.CShort)
                          @ Foreign.C.Types.CShort
                          @~ <(Foreign.C.Types.CShort, GHC.Types.Int)
                              -> Foreign.C.Types.CShort>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CShort, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CShort
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCShort
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CShort)
                             @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CShort)
                                @ Foreign.C.Types.CShort
                                @ ()
                                @~ <((), Foreign.C.Types.CShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))) -}
e7f508797ea2e20300d1d2cce720d1fc
  $fBitsCShort14 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
2214f133ae6cf8c42d50a628ff57aefc
  $fBitsCShort15 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CShort)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Classes.Eq.$fEqCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCShort_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Classes.Eq.$fEqCShort_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CShort
                               @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                               Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltCShort
                               Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                                     @ Foreign.C.Types.CShort
                                     @ ((), Foreign.C.Types.CShort)
                                     @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CShort)
                                        @ Foreign.C.Types.CShort
                                        @ ()
                                        @~ <((), Foreign.C.Types.CShort)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ Foreign.C.Types.CShort
                                        Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Foreign.C.Types.CShort
                                           @ (Foreign.C.Types.CShort, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                           Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (Foreign.C.Types.CShort, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), Foreign.C.Types.CShort)
                                                 @~ <(((), Foreign.C.Types.CShort),
                                                      GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCShort16
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <Foreign.C.Types.CShort>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CShort>_N
                                               <Foreign.C.Types.CShort>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                             Foreign.C.Types.CShort)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
349e65a1f3f0376ccbb636a003bdf555
  $fBitsCShort16 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @ ()
                   @~ <((), Foreign.C.Types.CShort)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort17
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)) -}
4377fedf1dc98f0b5cc7e17b16d9fea5
  $fBitsCShort17 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CShort
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort18
                     `cast`
                   (Sym (Foreign.C.Types.N:CShort[0]))) -}
224d3e3d305dd0d25370112a6134925b
  $fBitsCShort18 :: GHC.Int.Int16
  {- HasNoCafRefs, Unfolding: (GHC.Int.I16# 1#) -}
1c5cfff72966fc959fdb2ee584bcfea5
  $fBitsCShort19 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCShort13
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CShort
                               Data.Array.Accelerate.Array.Sugar.$fEltCShort
                               (GHC.Int.I16# 1#) `cast` (Sym (Foreign.C.Types.N:CShort[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
e5f71bd3639b77e4066edee65390669c
  $fBitsCShort2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CShort, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CShort
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCShort
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CShort
                       @ (Foreign.C.Types.CShort, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCShort
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CShort, GHC.Types.Int)
                             -> Foreign.C.Types.CShort)
                          @ Foreign.C.Types.CShort
                          @~ <(Foreign.C.Types.CShort, GHC.Types.Int)
                              -> Foreign.C.Types.CShort>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CShort, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CShort
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCShort
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CShort)
                             @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CShort)
                                @ Foreign.C.Types.CShort
                                @ ()
                                @~ <((), Foreign.C.Types.CShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))) -}
3fa884edf099c7b06c0709bd3d93690f
  $fBitsCShort20 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CShort
                            @ Foreign.C.Types.CShort
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            Data.Array.Accelerate.Data.Bits.$fBitsCShort21
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CShort
                               Data.Array.Accelerate.Array.Sugar.$fEltCShort
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ Foreign.C.Types.CShort
                                  @ (Foreign.C.Types.CShort, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (Foreign.C.Types.CShort, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), Foreign.C.Types.CShort)
                                        @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsCShort16
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
1c851f76777d13a4de0eeeaf5bc71144
  $fBitsCShort21 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CShort -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CShort -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <Foreign.C.Types.CShort -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType) -}
d17837f15f00c0ecfb58cdc33762a8b2
  $fBitsCShort22 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCShort13
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CShort
                               Data.Array.Accelerate.Array.Sugar.$fEltCShort
                               (GHC.Int.I16# 1#) `cast` (Sym (Foreign.C.Types.N:CShort[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
0ae5f49f88023921ca7e20e4c8fb9a43
  $fBitsCShort23 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCShort13
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CShort
                      Data.Array.Accelerate.Array.Sugar.$fEltCShort
                      (GHC.Int.I16# 1#) `cast` (Sym (Foreign.C.Types.N:CShort[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                   eta) -}
267df30de77dc20162bc5e73ec977dca
  $fBitsCShort24 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CShort
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
40f755d657619a3e3338615c3d6537c9
  $fBitsCShort25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort26
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R) -}
ef760d8de856eaebb43b47a9176e8ec2
  $fBitsCShort26 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @ ((), Foreign.C.Types.CShort)
                   @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort35
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort27
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)) -}
15368cccb92c3d2355968af7b02b560b
  $fBitsCShort27 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CShort
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort21
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)) -}
79ba02cece7505e3ca9c679f22da306c
  $fBitsCShort28 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CShort
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort32
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)) -}
074aee8678289fe6262cdb17abac0ea2
  $fBitsCShort29 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CShort
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 GHC.Types.Int)>_N)) -}
2faa1d2d18afa8dac70d704b76dfc2ee
  $fBitsCShort3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CShort, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CShort
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCShort
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CShort
                       @ (Foreign.C.Types.CShort, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCShort
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CShort, GHC.Types.Int)
                             -> Foreign.C.Types.CShort)
                          @ Foreign.C.Types.CShort
                          @~ <(Foreign.C.Types.CShort, GHC.Types.Int)
                              -> Foreign.C.Types.CShort>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CShort, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CShort
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCShort
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CShort)
                             @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CShort)
                                @ Foreign.C.Types.CShort
                                @ ()
                                @~ <((), Foreign.C.Types.CShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))) -}
78f5c96213e2b09572497fcc0d77f47b
  $fBitsCShort30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CShort, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort31
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R) -}
5a0cc15a98332df033fa12cf438db682
  $fBitsCShort31 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CShort), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CShort)
                   @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort16
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
3b433378ad38b394e978e350f8390956
  $fBitsCShort32 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort33
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
bf6f96090cc8777482aae560d9d8e351
  $fBitsCShort33 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort34
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
6b7ad114803ad6b5d5c2867414b1f20a
  $fBitsCShort34 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
a3910cac079f8f0bf2754cffc11d014d
  $fBitsCShort35 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @ ()
                   @~ <((), Foreign.C.Types.CShort)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)) -}
910e3beda72ce325938f58e235a392ab
  $fBitsCShort36 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
0fedc1fb190faf2e985c22ca5d655fb6
  $fBitsCShort37 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CUShort -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CUShort -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CShort
                   @~ <Foreign.C.Types.CUShort -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType) -}
77a38b900847561baaf1408ed68f439d
  $fBitsCShort38 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CShort -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CShort -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CShort
                   @ Foreign.C.Types.CUShort
                   @~ <Foreign.C.Types.CShort -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsScalarCShort_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
c19f4e25090b791869cdec35643303cc
  $fBitsCShort39 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort40
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
395187acd51fa8e01495a0d66cccba15
  $fBitsCShort4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 GHC.Types.Int)>_N)) -}
3168f66ba239cef2370366bded12fbfd
  $fBitsCShort40 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort41
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
71a3afcb6c08c2a8ae7da6bb1ba07fd4
  $fBitsCShort41 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort36
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
e1ca06915f3f7eb50e7e757270eb2537
  $fBitsCShort42 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsCShort13 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCShort
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CShort
                          Data.Array.Accelerate.Array.Sugar.$fEltCShort
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort10
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                                Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                                   @ Foreign.C.Types.CShort
                                   @ ((), Foreign.C.Types.CShort)
                                   @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), Foreign.C.Types.CShort)
                                      @ Foreign.C.Types.CShort
                                      @ ()
                                      @~ <((), Foreign.C.Types.CShort)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <Foreign.C.Types.CShort>_N
                                             <Foreign.C.Types.CShort>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                           Foreign.C.Types.CShort)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort6
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CShort
                          @ (Foreign.C.Types.CShort, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltCShort
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CShort, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CShort)
                                @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CShort)
                                   @ Foreign.C.Types.CShort
                                   @ ()
                                   @~ <((), Foreign.C.Types.CShort)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))) -}
9047aa9514f1772844fb7f8336c70653
  $fBitsCShort43 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CShort -> Foreign.C.Types.CShort)
                      @ Foreign.C.Types.CShort
                      @~ <Foreign.C.Types.CShort -> Foreign.C.Types.CShort>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType)
                   x) -}
577e45cb231ff165b05f2e106c520911
  $fBitsCShort44 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
592a9f190216c639dbb3c3f7867f82d0
  $fBitsCShort45 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
85d04bdd6113415c90a935e24686da0b
  $fBitsCShort46 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                         @ Foreign.C.Types.CShort
                         @ ((), Foreign.C.Types.CShort)
                         @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CShort)
                            @ Foreign.C.Types.CShort
                            @ ()
                            @~ <((), Foreign.C.Types.CShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                 Foreign.C.Types.CShort)>_N)) -}
359d0f9046d799bc5784d7235f5fbacb
  $fBitsCShort5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CShort
                      Data.Array.Accelerate.Array.Sugar.$fEltCShort
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                         Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsCShort10
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                            Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)
                               @ Foreign.C.Types.CShort
                               @ ((), Foreign.C.Types.CShort)
                               @~ <(((), Foreign.C.Types.CShort), Foreign.C.Types.CShort)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCShort
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), Foreign.C.Types.CShort)
                                  @ Foreign.C.Types.CShort
                                  @ ()
                                  @~ <((), Foreign.C.Types.CShort)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltCShort
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <Foreign.C.Types.CShort>_N <Foreign.C.Types.CShort>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                       Foreign.C.Types.CShort)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort6
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort8
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CShort
                      @ (Foreign.C.Types.CShort, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltCShort
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (Foreign.C.Types.CShort, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), Foreign.C.Types.CShort), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), Foreign.C.Types.CShort)
                            @~ <(((), Foreign.C.Types.CShort), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), Foreign.C.Types.CShort)
                               @ Foreign.C.Types.CShort
                               @ ()
                               @~ <((), Foreign.C.Types.CShort)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltCShort
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <Foreign.C.Types.CShort>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CShort,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N)) -}
ede36c3e8f302b9e1058910979edc9f3
  $fBitsCShort6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CShort
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort7
                     `cast`
                   (Sym (Foreign.C.Types.N:CShort[0]))) -}
bcc43d901bf7804c7dbe009d35918ee8
  $fBitsCShort7 :: GHC.Int.Int16
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I16# -1#) -}
b21e505e1507093b7430f72721bfe3b9
  $fBitsCShort8 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CShort
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort9
                     `cast`
                   (Sym (Foreign.C.Types.N:CShort[0]))) -}
6bd0df9845aba79c815ca5a350ae2abd
  $fBitsCShort9 :: GHC.Int.Int16
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I16# 0#) -}
d2e891cc9a1f70c5ac26ccabaa46d59b
  $fBitsCShort_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort46
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
1cc970ef2cfe80ddbc546a5af2e93089
  $fBitsCShort_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort45
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
b4e4a7a418b9def80d32e38b24c6a501
  $fBitsCShort_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort23
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
9862dcd0f4cf95ac2b51b30f979da977
  $fBitsCShort_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
42d75cc2ba53f4fcb0e0972b1a760ce7
  $fBitsCShort_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort43
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
99f502eebc9c8e2407e6e8cf5307c9b0
  $fBitsCShort_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
789ac19e953476b64767f5afc7977c37
  $fBitsCShort_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
8dab9c7a7b364d62ada7c5a1fad2f959
  $fBitsCShort_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
1a27b4db9d241789f9f553e385880830
  $fBitsCShort_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate3
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CShort
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) }) -}
c969df55ead0f63e10d4601cb65b2ec5
  $fBitsCShort_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
cac001da6e6e89342765cf6adb9e56e4
  $fBitsCShort_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
072f57d886a098800c2f11c8265789d8
  $fBitsCShort_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort22
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
1ed4548c0a69f56e2a1af77cc9a5c6fa
  $fBitsCShort_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort42
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
eded114b4bc6dfa4c8c580834379382e
  $fBitsCShort_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
b6beb0f50ebdec2993aba88df4858078
  $fBitsCShort_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
dd933d666343a24d3279a10915757edc
  $fBitsCShort_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
24b193334332b5b30118940a6ec09b43
  $fBitsCShort_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
d7e34cdcacbdd2b421a4900e38473719
  $fBitsCShort_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
c6e7e5918f5ae6446fd80869e4384197
  $fBitsCShort_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort44
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
d0688ce0b1f1a25d85bc5035a841c4f8
  $fBitsCShort_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort24
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) -}
6de15938db336eaa3a0224e504af7305
  $fBitsCShort_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CShort
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort) -}
e23c26193f7521bceb00955ed2cde459
  $fBitsCShort_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUShort, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CUShort
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
d9c3f4428c59b32c1c1bbf116da663ae
  $fBitsCShort_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort) -}
1ed86f5c697efc08c374fc5c126b0a08
  $fBitsCShort_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType) -}
3a3b1f273fcd04f4be0f97e0b03cd2e7
  $fBitsCShort_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort) -}
0202bbd0b9ee2b776afb2d51d277d758
  $fBitsCShort_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CShort, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CShort
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
e1bd817d0458b0f18289030a4041feef
  $fBitsCShort_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, GHC.Types.Int) -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CShort, GHC.Types.Int)
                      -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, GHC.Types.Int)
                       -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType) -}
4efd4a471555f882c745ef2953979249
  $fBitsCShort_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CShort, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CShort
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
9fe3bd09c21c83024e093c9324e9dcb2
  $fBitsCShort_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CShort, Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ Foreign.C.Types.CShort
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort) -}
3c4cc1a902790ffc5cb046c337c15eb1
  $fBitsCShort_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, GHC.Types.Int) -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CShort, GHC.Types.Int)
                      -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, GHC.Types.Int)
                       -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType) -}
5d2026356dfb8104df2b9600133026fb
  $fBitsCShort_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType) -}
a1772dc5ad9079a26a9df1becb4ba91a
  $fBitsCShort_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType) -}
d3e6f9094e8bd60cf192f432069517d9
  $fBitsCShort_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
       -> Foreign.C.Types.CShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                      -> Foreign.C.Types.CShort)
                   @ Foreign.C.Types.CShort
                   @~ <(Foreign.C.Types.CShort, Foreign.C.Types.CShort)
                       -> Foreign.C.Types.CShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType) -}
c6268f6afd59db8508978b5f5b8b7e61
  $fBitsCShort_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, GHC.Types.Int)
       -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((Foreign.C.Types.CUShort, GHC.Types.Int)
                      -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, GHC.Types.Int)
                       -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType) -}
d9170d5ae55f70c3bbaa1ae9e6cae200
  $fBitsCShort_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (Foreign.C.Types.CUShort, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ Foreign.C.Types.CUShort
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
7e81f2df67c9aea0476dcb9ba481f39a
  $fBitsCShort_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, GHC.Types.Int)
       -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((Foreign.C.Types.CUShort, GHC.Types.Int)
                      -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, GHC.Types.Int)
                       -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCUInt ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CUInt
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CUInt
                  Data.Array.Accelerate.Classes.Eq.$fEqCUInt
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt_$cpopCount -}
c22cd37fb6896496f270fd1b434ffbd8
  $fBitsCUInt1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CUInt -> GHC.Types.Int)
                      @ Foreign.C.Types.CUInt
                      @~ <Foreign.C.Types.CUInt -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                   x) -}
18d637946b2941803620c6f2d8cea702
  $fBitsCUInt10 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUInt, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUInt
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
                          @ Foreign.C.Types.CUInt
                          @~ <(Foreign.C.Types.CUInt, GHC.Types.Int)
                              -> Foreign.C.Types.CUInt>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUInt
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUInt)
                             @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUInt)
                                @ Foreign.C.Types.CUInt
                                @ ()
                                @~ <((), Foreign.C.Types.CUInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))) -}
647c4dce90a50758213d69f9ed5c6ac2
  $fBitsCUInt11 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
ed837e113c9491bbe29297302fb53838
  $fBitsCUInt12 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CUInt)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Classes.Eq.$fEqCUInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCUInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Classes.Eq.$fEqCUInt_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCUInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CUInt
                               @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                               Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                               Data.Array.Accelerate.Data.Bits.$fBitsCUInt_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                                     @ Foreign.C.Types.CUInt
                                     @ ((), Foreign.C.Types.CUInt)
                                     @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CUInt)
                                        @ Foreign.C.Types.CUInt
                                        @ ()
                                        @~ <((), Foreign.C.Types.CUInt)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ Foreign.C.Types.CUInt
                                        Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCUInt6
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Foreign.C.Types.CUInt
                                           @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                           Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl9
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), Foreign.C.Types.CUInt)
                                                 @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCUInt13
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <Foreign.C.Types.CUInt>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CUInt>_N
                                               <Foreign.C.Types.CUInt>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                             Foreign.C.Types.CUInt)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCUInt6
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
0f199431fb3c18c6590ed22f7d972340
  $fBitsCUInt13 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @ ()
                   @~ <((), Foreign.C.Types.CUInt)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt14
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)) -}
9c1827d8274ed7cd0e43d6fdab62a025
  $fBitsCUInt14 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUInt
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt15
                     `cast`
                   (Sym (Foreign.C.Types.N:CUInt[0]))) -}
e4dab00fa34140067d35ee0e59e5dced
  $fBitsCUInt15 :: GHC.Word.Word32
  {- HasNoCafRefs, Unfolding: (GHC.Word.W32# 1##) -}
8076ad16a8f783369a56445161b7bd9b
  $fBitsCUInt16 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCUInt10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CUInt
                               Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                               (GHC.Word.W32# 1##) `cast` (Sym (Foreign.C.Types.N:CUInt[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
303501881867027edfaa581e2c2d2464
  $fBitsCUInt17 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CUInt
                            @ Foreign.C.Types.CUInt
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            Data.Array.Accelerate.Data.Bits.$fBitsCUInt18
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CUInt
                               Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsCUInt6
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ Foreign.C.Types.CUInt
                                  @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl9
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), Foreign.C.Types.CUInt)
                                        @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsCUInt13
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
dd590585f898e2de1b2db549252e3557
  $fBitsCUInt18 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType) -}
983ba78f7cdcf4e1bee69d9ee86e3f3b
  $fBitsCUInt19 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCUInt10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CUInt
                               Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                               (GHC.Word.W32# 1##) `cast` (Sym (Foreign.C.Types.N:CUInt[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
0c10aaea6797add3e72ab22be325591f
  $fBitsCUInt2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUInt, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUInt
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
                          @ Foreign.C.Types.CUInt
                          @~ <(Foreign.C.Types.CUInt, GHC.Types.Int)
                              -> Foreign.C.Types.CUInt>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUInt
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUInt)
                             @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUInt)
                                @ Foreign.C.Types.CUInt
                                @ ()
                                @~ <((), Foreign.C.Types.CUInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))) -}
f2f548236310ce9a9b5a468ea787068b
  $fBitsCUInt20 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCUInt10
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CUInt
                      Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                      (GHC.Word.W32# 1##) `cast` (Sym (Foreign.C.Types.N:CUInt[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                   eta) -}
cf052fb816ca146efaef40dd87465f49
  $fBitsCUInt21 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUInt
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt22
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
a09614c436ee146e79cdd9adad3b9662
  $fBitsCUInt22 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt23
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R) -}
21bfd51d8200849245dc3750255c179f
  $fBitsCUInt23 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @ ((), Foreign.C.Types.CUInt)
                   @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt24
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)) -}
51cc5ae8ab07f6c145cec37337099d58
  $fBitsCUInt24 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUInt
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt18
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)) -}
91d7f3fc747a293ee6285a8ea6cf6d07
  $fBitsCUInt25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUInt
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)) -}
3d813e8e50d6fef0d693a1b695faafc2
  $fBitsCUInt26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUInt
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt27
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 GHC.Types.Int)>_N)) -}
9f0e1e28a80ebcf507241f42888803f8
  $fBitsCUInt27 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CUInt, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt28
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R) -}
19b56242848bfe880aa865d5cf431714
  $fBitsCUInt28 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CUInt), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CUInt)
                   @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt13
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
b1b70c6fe4bd172c0994da7beb1e4841
  $fBitsCUInt29 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
27f10743b7dfbc46dd52ddd3a6826c92
  $fBitsCUInt3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUInt, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUInt
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
                          @ Foreign.C.Types.CUInt
                          @~ <(Foreign.C.Types.CUInt, GHC.Types.Int)
                              -> Foreign.C.Types.CUInt>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUInt
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUInt)
                             @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUInt)
                                @ Foreign.C.Types.CUInt
                                @ ()
                                @~ <((), Foreign.C.Types.CUInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))) -}
b0aa460d174b024b829d64042a06f223
  $fBitsCUInt30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt31
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
de21e7e7e77fc7b231ba10058fdfbfaf
  $fBitsCUInt31 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
7ac6fc6124fc73ec98d938cca7ead9ec
  $fBitsCUInt32 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @ ()
                   @~ <((), Foreign.C.Types.CUInt)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)) -}
c9e66e7450478b8b14de25520006564b
  $fBitsCUInt33 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
e41343e7a5900af19718f16ae91914a2
  $fBitsCUInt34 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CUInt
                   @~ <Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCUInt_$cscalarType) -}
0755ac7ad07645f33e379050a6907485
  $fBitsCUInt35 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt36
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
5fd3afc1802ade9b436b7264b0567a30
  $fBitsCUInt36 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt37
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
0a4d753d2059743778b30e25f6bb364d
  $fBitsCUInt37 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt33
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
f044ef72261c7fa710d98617b359620b
  $fBitsCUInt38 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
b7deb8fdc17d77839e5029811858ec2e
  $fBitsCUInt39 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Types.Int -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimNeg
                   @ (GHC.Types.Int -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <GHC.Types.Int -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsNumInt_$cnumType) -}
55df57f5aa1b6d9392de0c3dcf76bee1
  $fBitsCUInt4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 GHC.Types.Int)>_N)) -}
b5cb4d3b5398acd9c1abc4a92f8192c1
  $fBitsCUInt40 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt)
                      @ Foreign.C.Types.CUInt
                      @~ <Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                   x) -}
d23a85bb6e0f8fd8201bedbe01ab6882
  $fBitsCUInt41 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
2507dddbc3d540b6cf9d459e6e23ee56
  $fBitsCUInt42 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
4b3dc14564ec9b04757ae0c684be7b67
  $fBitsCUInt43 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                         @ Foreign.C.Types.CUInt
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 Foreign.C.Types.CUInt)>_N)) -}
c0f84832e8019ffd71561506705c5549
  $fBitsCUInt5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUInt, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUInt
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((Foreign.C.Types.CUInt, GHC.Types.Int) -> Foreign.C.Types.CUInt)
                          @ Foreign.C.Types.CUInt
                          @~ <(Foreign.C.Types.CUInt, GHC.Types.Int)
                              -> Foreign.C.Types.CUInt>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUInt
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUInt)
                             @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUInt)
                                @ Foreign.C.Types.CUInt
                                @ ()
                                @~ <((), Foreign.C.Types.CUInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))) -}
33363aab5629c8d24df7bbffe9e8def8
  $fBitsCUInt6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUInt
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt7
                     `cast`
                   (Sym (Foreign.C.Types.N:CUInt[0]))) -}
8aa2899015900b90104a23582d32a8a7
  $fBitsCUInt7 :: GHC.Word.Word32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W32# 0##) -}
23221b0750c05f066d46899d2fe76584
  $fBitsCUInt8 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Word.$fBitsWord3) -}
2ddb047d9879b60c77e40915fcfafc5c
  $fBitsCUInt9 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUInt
                   @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CUInt)
                         @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUInt)
                            @ Foreign.C.Types.CUInt
                            @ ()
                            @~ <((), Foreign.C.Types.CUInt)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                 GHC.Types.Int)>_N)) -}
7332099f324227c2d2e8193e4c174000
  $fBitsCUInt_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt43
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
bf677d1ca183170a926ac1cc8e3eefd2
  $fBitsCUInt_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt42
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
0135a058129dfea5384b58e362d1e96e
  $fBitsCUInt_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
0d4b6724d43f78c47cf65401d847967f
  $fBitsCUInt_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
9b9d8bc6f8f5ae5722a9efc5dbdd5393
  $fBitsCUInt_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt40
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
469b746a52fa99237bc709a4c8eb0e42
  $fBitsCUInt_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
2208184a35830a995170a9bc60d97730
  $fBitsCUInt_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1d525f8977f379f241029f01b8c1f937
  $fBitsCUInt_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
84335a086a0348a4b33ab6054d8a126b
  $fBitsCUInt_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate4
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CUInt
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) }) -}
744c37d834fdbce3e10568dab10ebc4f
  $fBitsCUInt_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
67d586b7efe3ed811eb784ef8562c44a
  $fBitsCUInt_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
690baac97994f9fe1c86afe96ea1e966
  $fBitsCUInt_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
617dfcc1e74731e2ecd43410499ab054
  $fBitsCUInt_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt38
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
509deffdfa85eb243070fdcc3fb5fe42
  $fBitsCUInt_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
a86c4a6505b194bf2a6397d82b1c7cd9
  $fBitsCUInt_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
479d33321e696b9bf54a56b622cf003e
  $fBitsCUInt_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
63cdca27d578e58b5cd184854c730bd9
  $fBitsCUInt_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
f0a909164f33444e9d2517c3ec2eee49
  $fBitsCUInt_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
9fa1e67318bee8a3233bf79f88abe609
  $fBitsCUInt_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt41
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
84d09182c8a6ccdc1c37e914ce07e8f9
  $fBitsCUInt_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt21
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) -}
2a5dc8e3cb83dc6d1a577022904b59e0
  $fBitsCUInt_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
       -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType) -}
d41d9ac2225e25c1ce07fafd16151e96
  $fBitsCUInt_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
       -> Foreign.C.Types.CUInt)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                      -> Foreign.C.Types.CUInt)
                   @ Foreign.C.Types.CUInt
                   @~ <(Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                       -> Foreign.C.Types.CUInt>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCULLong ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CULLong
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CULLong
                  Data.Array.Accelerate.Classes.Eq.$fEqCULLong
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong_$cpopCount -}
dfede17983daca56b5152a9a41d3c620
  $fBitsCULLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CULLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CULLong
                      @~ <Foreign.C.Types.CULLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                   x) -}
8d5558f69f07a67771c572bf138524d2
  $fBitsCULLong10 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CULLong, GHC.Types.Int)
                             -> Foreign.C.Types.CULLong)
                          @ Foreign.C.Types.CULLong
                          @~ <(Foreign.C.Types.CULLong, GHC.Types.Int)
                              -> Foreign.C.Types.CULLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULLong)
                             @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULLong)
                                @ Foreign.C.Types.CULLong
                                @ ()
                                @~ <((), Foreign.C.Types.CULLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))) -}
1c050a4b21bc501c9c931b9a95091639
  $fBitsCULLong11 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
2352e7f90338f69e7257d29d4f5bf6ff
  $fBitsCULLong12 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CULLong)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Classes.Eq.$fEqCULLong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCULLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Classes.Eq.$fEqCULLong_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCULLong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULLong
                               @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                               Data.Array.Accelerate.Data.Bits.$fBitsCULLong_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                                     @ Foreign.C.Types.CULLong
                                     @ ((), Foreign.C.Types.CULLong)
                                     @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CULLong)
                                        @ Foreign.C.Types.CULLong
                                        @ ()
                                        @~ <((), Foreign.C.Types.CULLong)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ Foreign.C.Types.CULLong
                                        Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCULLong6
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Foreign.C.Types.CULLong
                                           @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl9
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), Foreign.C.Types.CULLong)
                                                 @~ <(((), Foreign.C.Types.CULLong),
                                                      GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong13
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <Foreign.C.Types.CULLong>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CULLong>_N
                                               <Foreign.C.Types.CULLong>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                             Foreign.C.Types.CULLong)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCULLong6
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
4a1ad14fdf05e85107c0f1c58dc2e00c
  $fBitsCULLong13 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @ ()
                   @~ <((), Foreign.C.Types.CULLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong14
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)) -}
c23bacc7eedda452f344815e6db3450b
  $fBitsCULLong14 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULLong
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong15
                     `cast`
                   (Sym (Foreign.C.Types.N:CULLong[0]))) -}
30a1123b238a12b5faff8a6c23e8a0f0
  $fBitsCULLong15 :: GHC.Word.Word64
  {- HasNoCafRefs, Unfolding: (GHC.Word.W64# 1##) -}
40f0795475407912f6833215849801ac
  $fBitsCULLong16 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCULLong10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                               (GHC.Word.W64# 1##) `cast` (Sym (Foreign.C.Types.N:CULLong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
ea17a8586fe1fa7ac53d023a9b62ea17
  $fBitsCULLong17 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CULLong
                            @ Foreign.C.Types.CULLong
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            Data.Array.Accelerate.Data.Bits.$fBitsCULLong18
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsCULLong6
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ Foreign.C.Types.CULLong
                                  @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl9
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), Foreign.C.Types.CULLong)
                                        @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsCULLong13
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N
                                                  <Foreign.C.Types.CULLong>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
a7f83f8caa3c7b279f4245f26077559f
  $fBitsCULLong18 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType) -}
095eb0c0f3d8f631f097082f32f67b12
  $fBitsCULLong19 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCULLong10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULLong
                               Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                               (GHC.Word.W64# 1##) `cast` (Sym (Foreign.C.Types.N:CULLong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
b49461ef6e19d81959e13918b0a7bf65
  $fBitsCULLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CULLong, GHC.Types.Int)
                             -> Foreign.C.Types.CULLong)
                          @ Foreign.C.Types.CULLong
                          @~ <(Foreign.C.Types.CULLong, GHC.Types.Int)
                              -> Foreign.C.Types.CULLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULLong)
                             @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULLong)
                                @ Foreign.C.Types.CULLong
                                @ ()
                                @~ <((), Foreign.C.Types.CULLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))) -}
d5c12682bed2f5c01d407a81a7f08e9a
  $fBitsCULLong20 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong10
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CULLong
                      Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                      (GHC.Word.W64# 1##) `cast` (Sym (Foreign.C.Types.N:CULLong[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                   eta) -}
93d74791d9fe89e894b8b8642a8b1101
  $fBitsCULLong21 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong22
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
7b7a5eceb8be56d3ebce726a144cc494
  $fBitsCULLong22 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong23
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R) -}
380987aab4ae1052016a2c4c67dc16de
  $fBitsCULLong23 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @ ((), Foreign.C.Types.CULLong)
                   @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong32
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong24
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)) -}
3406cb7168078d6a4de3401c7e6a73b8
  $fBitsCULLong24 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong18
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)) -}
edc40ae425a136f7425b1a7790fd44b1
  $fBitsCULLong25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULLong
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)) -}
8b117bd067dd718d0ea6c1e8b7b9d967
  $fBitsCULLong26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULLong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong27
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 GHC.Types.Int)>_N)) -}
cf78cec13482ed82408a41ca51e23421
  $fBitsCULLong27 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CULLong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong28
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R) -}
51d83e23ccd21253ef83dbfc6adec099
  $fBitsCULLong28 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CULLong), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CULLong)
                   @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong13
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
1dc57c3552ca1f5b4b269888048a6d66
  $fBitsCULLong29 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
08173ce606cc938ae3827e4c2a5db045
  $fBitsCULLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CULLong, GHC.Types.Int)
                             -> Foreign.C.Types.CULLong)
                          @ Foreign.C.Types.CULLong
                          @~ <(Foreign.C.Types.CULLong, GHC.Types.Int)
                              -> Foreign.C.Types.CULLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULLong)
                             @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULLong)
                                @ Foreign.C.Types.CULLong
                                @ ()
                                @~ <((), Foreign.C.Types.CULLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))) -}
432f0bce39e36ebe0c8aec50179bd5af
  $fBitsCULLong30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong31
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
b1d9ea9f26d504c31b5b69f8b9f599df
  $fBitsCULLong31 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
927d1180f17e8945c8b48494adb1c106
  $fBitsCULLong32 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @ ()
                   @~ <((), Foreign.C.Types.CULLong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)) -}
8f91bee053263705e22487b87ded32b2
  $fBitsCULLong33 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
2804fae24d9008b9e660b615dee92cb6
  $fBitsCULLong34 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CULLong
                   @~ <Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCULLong_$cscalarType) -}
00e409e0bc8d0e24f163eddb123674bc
  $fBitsCULLong35 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong36
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
86a9e4fbdc38ed84fac92111a46938bb
  $fBitsCULLong36 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong37
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
38ad40f8f09d815b53ca801193dec157
  $fBitsCULLong37 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong33
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
31fea9f707b7187879c4aa24cda0f6ef
  $fBitsCULLong38 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault1
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
fac7af3d4cd18b8b09bce12caf2edaf6
  $fBitsCULLong39 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong)
                      @ Foreign.C.Types.CULLong
                      @~ <Foreign.C.Types.CULLong -> Foreign.C.Types.CULLong>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                   x) -}
44cfa954fd6be95d46b6537f7a96fa41
  $fBitsCULLong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 GHC.Types.Int)>_N)) -}
1cacec25a01b14e0de0b53432a301a78
  $fBitsCULLong40 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
6c7d70d7e0b8d5d3a49521669dd2ded5
  $fBitsCULLong41 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
a7aec3170f4de53926b4e351e4009bcb
  $fBitsCULLong42 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                         @ Foreign.C.Types.CULLong
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULLong>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 Foreign.C.Types.CULLong)>_N)) -}
291c98db3ccfa70fa3629aa46b5dc19c
  $fBitsCULLong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULLong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULLong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((Foreign.C.Types.CULLong, GHC.Types.Int)
                             -> Foreign.C.Types.CULLong)
                          @ Foreign.C.Types.CULLong
                          @~ <(Foreign.C.Types.CULLong, GHC.Types.Int)
                              -> Foreign.C.Types.CULLong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULLong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULLong)
                             @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULLong)
                                @ Foreign.C.Types.CULLong
                                @ ()
                                @~ <((), Foreign.C.Types.CULLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))) -}
fde35f1a3bf95652317d1460b0d0b18d
  $fBitsCULLong6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULLong
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong7
                     `cast`
                   (Sym (Foreign.C.Types.N:CULLong[0]))) -}
e1776a4e54db24d116763037264405d6
  $fBitsCULLong7 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W64# 0##) -}
770308efb3790cf5877b0144e3c94dc7
  $fBitsCULLong8 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Word.$fBitsWord5) -}
10cbda8a1b1fa2e6566156f10b67ce7b
  $fBitsCULLong9 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULLong
                   @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CULLong)
                         @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULLong)
                            @ Foreign.C.Types.CULLong
                            @ ()
                            @~ <((), Foreign.C.Types.CULLong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                 GHC.Types.Int)>_N)) -}
7e5e0bd095c5ccd477e79d2a7c401e2a
  $fBitsCULLong_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong42
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
b4d832c0f8790539df9405d4f14c28e8
  $fBitsCULLong_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong41
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
15767d7e6ad5a4b32e4844e3a04cdc65
  $fBitsCULLong_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
18f567316f8d50d4b3c03ef928e76b83
  $fBitsCULLong_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
ce685df3c7a02ca6d512e3f5209b5173
  $fBitsCULLong_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong39
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
ae8bfd235966697dfba9c91db0da6818
  $fBitsCULLong_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
d9cdf4003a1e17095b2d88cab427e36c
  $fBitsCULLong_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
4f5a8d51d28ee18d8e1a0dc1970504e2
  $fBitsCULLong_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
61b107f9704d1fb14e0ad9a4a46c8451
  $fBitsCULLong_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate5
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CULLong
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) }) -}
69cafe67efc57f08cd560b15b3058c6d
  $fBitsCULLong_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
3950d45d69e6887b0c6b187f4f2ff13a
  $fBitsCULLong_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
d3a526ea227d9677b4de308074868b83
  $fBitsCULLong_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong19
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
a39b63c12861fa0f78e95524556c1884
  $fBitsCULLong_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong38
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
c7b30c55638cdf2c9d967c3115007651
  $fBitsCULLong_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
0609eca0cf34eb4038ee61f8f41b9b27
  $fBitsCULLong_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
b5cf8d5a6ee95e8b92f66eb7b5bb5da0
  $fBitsCULLong_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
e2e4709beebc9e375cad09da46d50780
  $fBitsCULLong_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
b546720cc7d9bea1631d8c430fd97cb4
  $fBitsCULLong_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
9d6498a78d1a745c77f8f06623e21fa7
  $fBitsCULLong_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong40
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
16db9c2d686bb786893e3bfea63068bc
  $fBitsCULLong_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong21
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) -}
db6e4af8202edc11aa1d7fb8e43a37ce
  $fBitsCULLong_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType) -}
306128aad1c15722dc08fe7885e18c75
  $fBitsCULLong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
       -> Foreign.C.Types.CULLong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                      -> Foreign.C.Types.CULLong)
                   @ Foreign.C.Types.CULLong
                   @~ <(Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                       -> Foreign.C.Types.CULLong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCULong ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CULong
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CULong
                  Data.Array.Accelerate.Classes.Eq.$fEqCULong
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCULong_$cpopCount -}
cfbe3cfda62522fb0a0cbb4f62e9bdf1
  $fBitsCULong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CULong -> GHC.Types.Int)
                      @ Foreign.C.Types.CULong
                      @~ <Foreign.C.Types.CULong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                   x) -}
c984ab6b034748ef03786f09ec6344d1
  $fBitsCULong10 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CULong)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Classes.Eq.$fEqCULong_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCULong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Classes.Eq.$fEqCULong_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCULong_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULong
                               @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                               Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltCULong
                               Data.Array.Accelerate.Data.Bits.$fBitsCULong_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                                     @ Foreign.C.Types.CULong
                                     @ ((), Foreign.C.Types.CULong)
                                     @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CULong)
                                        @ Foreign.C.Types.CULong
                                        @ ()
                                        @~ <((), Foreign.C.Types.CULong)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ Foreign.C.Types.CULong
                                        Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCULong6
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Foreign.C.Types.CULong
                                           @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                           Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl9
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), Foreign.C.Types.CULong)
                                                 @~ <(((), Foreign.C.Types.CULong),
                                                      GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCULong11
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <Foreign.C.Types.CULong>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CULong>_N
                                               <Foreign.C.Types.CULong>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                             Foreign.C.Types.CULong)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCULong6
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
dc2064c449601adda1e8ca6ad61e2d46
  $fBitsCULong11 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @ ()
                   @~ <((), Foreign.C.Types.CULong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong12
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)) -}
f8cbb04e483b99f79d57c95fe03bd66b
  $fBitsCULong12 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULong
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong15
                     `cast`
                   (Sym (Foreign.C.Types.N:CULong[0]))) -}
8a40fddf51bdded8f2e65bb1a649ed20
  $fBitsCULong13 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCULong8
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULong
                               Data.Array.Accelerate.Array.Sugar.$fEltCULong
                               (GHC.Word.W64# 1##) `cast` (Sym (Foreign.C.Types.N:CULong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
cc5cf5c0825686be01d072ee9e78f9ea
  $fBitsCULong14 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CULong
                            @ Foreign.C.Types.CULong
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            Data.Array.Accelerate.Data.Bits.$fBitsCULong15
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULong
                               Data.Array.Accelerate.Array.Sugar.$fEltCULong
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsCULong6
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ Foreign.C.Types.CULong
                                  @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                  Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl9
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), Foreign.C.Types.CULong)
                                        @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsCULong11
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
201fd7465bfae23aff046166b348fde2
  $fBitsCULong15 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CULong -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CULong -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <Foreign.C.Types.CULong -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType) -}
84a3278846b95024f3c203c923b95d92
  $fBitsCULong16 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCULong8
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CULong
                               Data.Array.Accelerate.Array.Sugar.$fEltCULong
                               (GHC.Word.W64# 1##) `cast` (Sym (Foreign.C.Types.N:CULong[0])))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
854c292b7c67e4a4b97f6d051045cf22
  $fBitsCULong17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCULong8
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CULong
                      Data.Array.Accelerate.Array.Sugar.$fEltCULong
                      (GHC.Word.W64# 1##) `cast` (Sym (Foreign.C.Types.N:CULong[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                   eta) -}
271020633ddc529f5fa639720bcded67
  $fBitsCULong18 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong19
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
432164e016b98ba6f1c39d6b55cec11e
  $fBitsCULong19 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong20
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R) -}
83a75546f2ca22d70e6b1aad50a8bb6c
  $fBitsCULong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       @ (Foreign.C.Types.CULong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CULong, GHC.Types.Int)
                             -> Foreign.C.Types.CULong)
                          @ Foreign.C.Types.CULong
                          @~ <(Foreign.C.Types.CULong, GHC.Types.Int)
                              -> Foreign.C.Types.CULong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULong)
                             @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULong)
                                @ Foreign.C.Types.CULong
                                @ ()
                                @~ <((), Foreign.C.Types.CULong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))) -}
4217f15cd119cbb92c916cf412ab33fa
  $fBitsCULong20 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @ ((), Foreign.C.Types.CULong)
                   @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong26
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong21
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)) -}
e988c7651c81bcb56ea418a8f25cf169
  $fBitsCULong21 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong15
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong22
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)) -}
1b864acd1dfd416f9d1a3c54b52ca4be
  $fBitsCULong22 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULong
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong23
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)) -}
4511c92f849d0a012408b5a46b685fce
  $fBitsCULong23 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULong
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong24
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 GHC.Types.Int)>_N)) -}
da00b1896be6f5a94fb3827be8f37f79
  $fBitsCULong24 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CULong, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CULong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong25
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R) -}
f62478174dfc1aa048084a6c91c5be4f
  $fBitsCULong25 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CULong), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CULong)
                   @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong11
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
3803b7ed05c317a14530d0bd2027886e
  $fBitsCULong26 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @ ()
                   @~ <((), Foreign.C.Types.CULong)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong22
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)) -}
5cbc9193213496cc51c9f80302261410
  $fBitsCULong27 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CULong -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CULong -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CULong
                   @~ <Foreign.C.Types.CULong -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCULong_$cscalarType) -}
1ba6ab3c62258813c71ff02c9e507e52
  $fBitsCULong28 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault2
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
ebe802e98b9c524a07a6db108eefdb6d
  $fBitsCULong29 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CULong -> Foreign.C.Types.CULong)
                      @ Foreign.C.Types.CULong
                      @~ <Foreign.C.Types.CULong -> Foreign.C.Types.CULong>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                   x) -}
fe504f96a6c7fcc49ba5ce479c7c3723
  $fBitsCULong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       @ (Foreign.C.Types.CULong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CULong, GHC.Types.Int)
                             -> Foreign.C.Types.CULong)
                          @ Foreign.C.Types.CULong
                          @~ <(Foreign.C.Types.CULong, GHC.Types.Int)
                              -> Foreign.C.Types.CULong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULong)
                             @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULong)
                                @ Foreign.C.Types.CULong
                                @ ()
                                @~ <((), Foreign.C.Types.CULong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))) -}
879cec0c8e38ff133a01c807a5fa0655
  $fBitsCULong30 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
5281e6e4bf689a55620ecfa929ad6e7f
  $fBitsCULong31 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
39a04b80c2c28ce8c0c5b9d6dfd9a0da
  $fBitsCULong32 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                         @ Foreign.C.Types.CULong
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCULong
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CULong>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 Foreign.C.Types.CULong)>_N)) -}
4efa1e0d6d44e458ddaea2916ca8a425
  $fBitsCULong4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 GHC.Types.Int)>_N)) -}
83dfe07907ec7a8d6d4bfd4f03f171a5
  $fBitsCULong5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       @ (Foreign.C.Types.CULong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((Foreign.C.Types.CULong, GHC.Types.Int)
                             -> Foreign.C.Types.CULong)
                          @ Foreign.C.Types.CULong
                          @~ <(Foreign.C.Types.CULong, GHC.Types.Int)
                              -> Foreign.C.Types.CULong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULong)
                             @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULong)
                                @ Foreign.C.Types.CULong
                                @ ()
                                @~ <((), Foreign.C.Types.CULong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))) -}
ae3aca064fd9b2940ea30a7af666abbf
  $fBitsCULong6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CULong
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong7
                     `cast`
                   (Sym (Foreign.C.Types.N:CULong[0]))) -}
20c949c379abaa1664a7207baa7d6b12
  $fBitsCULong7 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   @ (Foreign.C.Types.CULong, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CULong, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CULong)
                         @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CULong)
                            @ Foreign.C.Types.CULong
                            @ ()
                            @~ <((), Foreign.C.Types.CULong)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                 GHC.Types.Int)>_N)) -}
3df2dc60b80a30ad0223369c77da8465
  $fBitsCULong8 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCULong6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CULong, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CULong
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCULong
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       @ (Foreign.C.Types.CULong, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CULong, GHC.Types.Int)
                             -> Foreign.C.Types.CULong)
                          @ Foreign.C.Types.CULong
                          @~ <(Foreign.C.Types.CULong, GHC.Types.Int)
                              -> Foreign.C.Types.CULong>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CULong, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CULong
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCULong
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CULong)
                             @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CULong)
                                @ Foreign.C.Types.CULong
                                @ ()
                                @~ <((), Foreign.C.Types.CULong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))) -}
ca8602df902c73666e2702c869258b08
  $fBitsCULong9 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
8d522064c97bb522b65fae48fa8a925d
  $fBitsCULong_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong32
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
d6da728ee2030f5bb2e600f7b1b5d6f5
  $fBitsCULong_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong31
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
ac7d52a381831f252e7256ee40d9730b
  $fBitsCULong_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
8076f14ba94f2a72fd12e65bd2527af3
  $fBitsCULong_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
0a25a793c785f9cd0c6e9be0a5bd1ec0
  $fBitsCULong_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong29
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
5efc1549cad4b22d204b5b8d5802ca93
  $fBitsCULong_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
55e64ec36e961e444da01f877fb604bf
  $fBitsCULong_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
835b0c60940e090f6e36dba5977aabbc
  $fBitsCULong_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
bcf89294d67edb447e28ca07bca2158f
  $fBitsCULong_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate6
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CULong
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) }) -}
5211910f63d327be301ad05942a33c01
  $fBitsCULong_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
45bcf8a550c47d8704106a76f89d0a4b
  $fBitsCULong_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
2d37e91f8aa9eb74d103987aa15a3596
  $fBitsCULong_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
f2505fafdb99e2c37389b4883138a113
  $fBitsCULong_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong28
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
cca666e05cad97ea5708f1f9c27066e9
  $fBitsCULong_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong8
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
cd1bdfd9a94d80725211a3138d67eb36
  $fBitsCULong_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
641f4791ece1ff48bd5259f86580ae80
  $fBitsCULong_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
cb83a9ca4aac27dca05ff82f34371259
  $fBitsCULong_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
e361864dc4db55279d6a1ab3d73a3578
  $fBitsCULong_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
db941741448ee0fba9cb2260e83f753a
  $fBitsCULong_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong30
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
96fb883044bd605f4a3970dc4cab5960
  $fBitsCULong_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong18
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) -}
66d3395f097de4c3575f0e4cc5616334
  $fBitsCULong_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType) -}
847b516cd1180d93e95ae236b4c5d335
  $fBitsCULong_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
       -> Foreign.C.Types.CULong)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                      -> Foreign.C.Types.CULong)
                   @ Foreign.C.Types.CULong
                   @~ <(Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                       -> Foreign.C.Types.CULong>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsCUShort ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CUShort
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CUShort
                  Data.Array.Accelerate.Classes.Eq.$fEqCUShort
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort_$cpopCount -}
ed3b7300b8e6baf3c684c42a915adf10
  $fBitsCUShort1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (Foreign.C.Types.CUShort -> GHC.Types.Int)
                      @ Foreign.C.Types.CUShort
                      @~ <Foreign.C.Types.CUShort -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                   x) -}
f02e2633753bf2a10d11bf7420ce6653
  $fBitsCUShort10 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUShort, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUShort
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((Foreign.C.Types.CUShort, GHC.Types.Int)
                             -> Foreign.C.Types.CUShort)
                          @ Foreign.C.Types.CUShort
                          @~ <(Foreign.C.Types.CUShort, GHC.Types.Int)
                              -> Foreign.C.Types.CUShort>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUShort
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUShort)
                             @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUShort)
                                @ Foreign.C.Types.CUShort
                                @ ()
                                @~ <((), Foreign.C.Types.CUShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))) -}
e6fc72b27f221d8cfb085eb011145b9a
  $fBitsCUShort11 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
084c7630b7aec1f42f353b27a75eefe3
  $fBitsCUShort12 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             Foreign.C.Types.CUShort)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Classes.Eq.$fEqCUShort_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqCUShort_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Classes.Eq.$fEqCUShort_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqCUShort_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ Foreign.C.Types.CUShort
                               @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                               Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                               Data.Array.Accelerate.Data.Bits.$fBitsCUShort_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                                     @ Foreign.C.Types.CUShort
                                     @ ((), Foreign.C.Types.CUShort)
                                     @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), Foreign.C.Types.CUShort)
                                        @ Foreign.C.Types.CUShort
                                        @ ()
                                        @~ <((), Foreign.C.Types.CUShort)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Data.Bits.$fBitsCUShort13 eta1)
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <Foreign.C.Types.CUShort>_N
                                               <Foreign.C.Types.CUShort>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                             Foreign.C.Types.CUShort)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsCUShort6
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
ad42469618071bb6d201b7a64830680b
  $fBitsCUShort13 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCUShort10
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ Foreign.C.Types.CUShort
                      Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                      (GHC.Word.W16# 1##) `cast` (Sym (Foreign.C.Types.N:CUShort[0])))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)
                   eta) -}
ab9cbf7b713ab798682bf8cb884bb1b8
  $fBitsCUShort14 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCUShort13 i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
3a8fad861f9c2ed9dccd1ed6cc060bf7
  $fBitsCUShort15 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ Foreign.C.Types.CUShort
                            @ Foreign.C.Types.CUShort
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.AST.PrimBNot
                               @ (Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort)
                               @ Foreign.C.Types.CUShort
                               @~ <Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort>_N
                               Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                            (Data.Array.Accelerate.Data.Bits.$fBitsCUShort13 i)
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
24029b56a4cb79d1191d8a034bd99830
  $fBitsCUShort16 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsCUShort13 i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
1e436eadf89eb72b9eb1249a23d22c28
  $fBitsCUShort17 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUShort
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort18
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
7cdb54ebd719b6d57cada0f17157b482
  $fBitsCUShort18 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort19
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R) -}
a0e52b7d225e53b320178fee118b80f0
  $fBitsCUShort19 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @ ((), Foreign.C.Types.CUShort)
                   @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort32
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort20
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)) -}
facb3afe9f5926bbaadb0f7c0d74659b
  $fBitsCUShort2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUShort, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUShort
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((Foreign.C.Types.CUShort, GHC.Types.Int)
                             -> Foreign.C.Types.CUShort)
                          @ Foreign.C.Types.CUShort
                          @~ <(Foreign.C.Types.CUShort, GHC.Types.Int)
                              -> Foreign.C.Types.CUShort>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUShort
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUShort)
                             @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUShort)
                                @ Foreign.C.Types.CUShort
                                @ ()
                                @~ <((), Foreign.C.Types.CUShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))) -}
5d9e7da7328758917fa46dcf3f67c3ff
  $fBitsCUShort20 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUShort
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort31
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort21
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)) -}
a4d9ea81f4bae932a21b1dbf1fc07869
  $fBitsCUShort21 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUShort
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort22
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)) -}
4d2a5d8adfdac00c9b727bbd0e619d46
  $fBitsCUShort22 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUShort
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort23
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 GHC.Types.Int)>_N)) -}
5309aaca2c2a68e798a827e71748eb72
  $fBitsCUShort23 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (Foreign.C.Types.CUShort, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort24
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R) -}
a9c7a1c0ceb0cb6892d48a03e3bfe93b
  $fBitsCUShort24 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), Foreign.C.Types.CUShort), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), Foreign.C.Types.CUShort)
                   @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort25
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
9e781be88dc5eae3551d4651d55c78a0
  $fBitsCUShort25 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @ ()
                   @~ <((), Foreign.C.Types.CUShort)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)) -}
82a682d30fd28fc9b8eaf5ffc6baec6d
  $fBitsCUShort26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUShort
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort27
                     `cast`
                   (Sym (Foreign.C.Types.N:CUShort[0]))) -}
776e76aa9d054f94f45e36d48660db4f
  $fBitsCUShort27 :: GHC.Word.Word16
  {- HasNoCafRefs, Unfolding: (GHC.Word.W16# 1##) -}
b51f6da90b12088752b4914f880c5072
  $fBitsCUShort28 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
e424a278f1eb1f294975c249981e9525
  $fBitsCUShort29 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort30
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
9c983c377f43323e4e30ca04311d11a8
  $fBitsCUShort3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUShort, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUShort
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((Foreign.C.Types.CUShort, GHC.Types.Int)
                             -> Foreign.C.Types.CUShort)
                          @ Foreign.C.Types.CUShort
                          @~ <(Foreign.C.Types.CUShort, GHC.Types.Int)
                              -> Foreign.C.Types.CUShort>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUShort
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUShort)
                             @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUShort)
                                @ Foreign.C.Types.CUShort
                                @ ()
                                @~ <((), Foreign.C.Types.CUShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))) -}
0593339d07a0917459b37dd7860c4598
  $fBitsCUShort30 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
607290aa752b6dc4a99d162d8ce4bfcc
  $fBitsCUShort31 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType) -}
f4ba512d5a052dafa9d9e016b517f7d5
  $fBitsCUShort32 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @ ()
                   @~ <((), Foreign.C.Types.CUShort)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort21
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)) -}
11405f36646242a6afa807017dd9d8a4
  $fBitsCUShort33 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
ac933e8b1794e7b30331be8185770f71
  $fBitsCUShort34 ::
    Data.Array.Accelerate.AST.PrimFun
      (Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CUShort
                   @~ <Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarCUShort_$cscalarType) -}
be32a47324bdaca23cbf897adc9fb804
  $fBitsCUShort35 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort36
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
2a612e8d8f0ff874e114bf67450889ac
  $fBitsCUShort36 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort37
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
5cd4be21dcdc6287e8a2e3a1bbc235f0
  $fBitsCUShort37 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort33
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
91a55f5dfd03b5a96f87434335f83a82
  $fBitsCUShort38 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault3
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
2884eaae2514134bc4df673058f18e69
  $fBitsCUShort39 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort)
                      @ Foreign.C.Types.CUShort
                      @~ <Foreign.C.Types.CUShort -> Foreign.C.Types.CUShort>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                   x) -}
aa2d7a208a5efac337976d616b35f2ec
  $fBitsCUShort4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 GHC.Types.Int)>_N)) -}
0ee6a7d80b8d1034f7f732c1e01e59c9
  $fBitsCUShort40 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
3b8a82c3278717c8a7173368a3019c30
  $fBitsCUShort41 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
78491ae42399b53a9b4b2915744f13ab
  $fBitsCUShort42 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (y :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                         @ Foreign.C.Types.CUShort
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <Foreign.C.Types.CUShort>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 Foreign.C.Types.CUShort)>_N)) -}
8e720af84a444699d91b5fe0c3c8d4e9
  $fBitsCUShort5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (Foreign.C.Types.CUShort, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ Foreign.C.Types.CUShort
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((Foreign.C.Types.CUShort, GHC.Types.Int)
                             -> Foreign.C.Types.CUShort)
                          @ Foreign.C.Types.CUShort
                          @~ <(Foreign.C.Types.CUShort, GHC.Types.Int)
                              -> Foreign.C.Types.CUShort>_N
                          Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ Foreign.C.Types.CUShort
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), Foreign.C.Types.CUShort)
                             @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), Foreign.C.Types.CUShort)
                                @ Foreign.C.Types.CUShort
                                @ ()
                                @~ <((), Foreign.C.Types.CUShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))) -}
ab41a02b8e772bb61f7e385b3870ebf0
  $fBitsCUShort6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      Foreign.C.Types.CUShort
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort7
                     `cast`
                   (Sym (Foreign.C.Types.N:CUShort[0]))) -}
8905029348b46b092e87612caa362f13
  $fBitsCUShort7 :: GHC.Word.Word16
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W16# 0##) -}
058552724ab9b93265c2984a3610a443
  $fBitsCUShort8 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Word.$fBitsWord1) -}
2754b552a9f58b34dc0ba471b6ba8190
  $fBitsCUShort9 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Foreign.C.Types.CUShort
                   @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), Foreign.C.Types.CUShort)
                         @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), Foreign.C.Types.CUShort)
                            @ Foreign.C.Types.CUShort
                            @ ()
                            @~ <((), Foreign.C.Types.CUShort)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                 GHC.Types.Int)>_N)) -}
25a4b54b23fa73577d0023b6525924a9
  $fBitsCUShort_$c.&. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort42
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
12af02c4f3684b7d16bd9293105fa115
  $fBitsCUShort_$c.|. ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort41
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
5b69059f15bd21f9001b326d0265c343
  $fBitsCUShort_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
d8d003a4e6f5cc134c54922f31a77cda
  $fBitsCUShort_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
3f12c1654c4fed0ff3d271dc015354c6
  $fBitsCUShort_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort39
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
3462c9d3dfab5fda5c5084fdeae47b64
  $fBitsCUShort_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
abd4b0994e778d538d0b7cb88da27eaf
  $fBitsCUShort_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
c8462ba27a93c8e135b5f0855ed847e3
  $fBitsCUShort_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
33d71158a1d20b645349468cfdc6f8d8
  $fBitsCUShort_$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate7
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ Foreign.C.Types.CUShort
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) }) -}
4bd58cc6a1b40d5c835e8a19b3e64614
  $fBitsCUShort_$crotateL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
da47820706543e630f69c8149e0ec6be
  $fBitsCUShort_$crotateR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
9ce276fad5f116cc8a74223ea7f7e48e
  $fBitsCUShort_$csetBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort16
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
60ce7bd497f4c569bbe9b9d91d6a883e
  $fBitsCUShort_$cshift ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort38
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
4eb6ec8a1c22d5c050c1e719c2addd80
  $fBitsCUShort_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
f2d79295f264503bbb180bc232a8bb32
  $fBitsCUShort_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
f0010dc44edadfbfd764044f52413120
  $fBitsCUShort_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
c8ecc5df3c226bf8af28c6e7580b382b
  $fBitsCUShort_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
3c6000da159e9ab8815159c4138daa5c
  $fBitsCUShort_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
7ec288eb8df36c7dec6ba5f0015881ae
  $fBitsCUShort_$cxor ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort40
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
3aec3c8ab91810af2102542b80d3bf4b
  $fBitsCUShort_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort17
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) -}
297dc2edc370091a841f3dbd91e2af8c
  $fBitsCUShort_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType) -}
ba0f2a42e22a03eeb27e9715b4e6fb48
  $fBitsCUShort_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
       -> Foreign.C.Types.CUShort)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                      -> Foreign.C.Types.CUShort)
                   @ Foreign.C.Types.CUShort
                   @~ <(Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                       -> Foreign.C.Types.CUShort>_N
                   Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsInt :: Data.Array.Accelerate.Data.Bits.Bits GHC.Types.Int
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Int
                  Data.Array.Accelerate.Classes.Eq.$fEqInt
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt_$cpopCount -}
d3c2e56fa1747ace4ddecbd544f50793
  $fBitsInt1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Types.Int -> GHC.Types.Int)
                      @ GHC.Types.Int
                      @~ <GHC.Types.Int -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType)
                   x) -}
43cf6ec236ac2270754a82c63126b65a
  $fBitsInt10 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Bits.$fBitsInt1) -}
533bbe8e2a34afb8a0d1b9835c0face1
  $fBitsInt100 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt91
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int32
                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                      (GHC.Int.I32# 1#))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                   eta) -}
95bc9ef32fd866238a066d27ac27bcd8
  $fBitsInt101 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int32
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsInt102
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
5af01d5085d3569a8989ebd6a03daa8e
  $fBitsInt102 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int32, GHC.Int.Int32)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsInt103
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R) -}
b5296ad311233c810384653c0701d465
  $fBitsInt103 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Int.Int32), GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int32), GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @ ((), GHC.Int.Int32)
                   @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt109
                   Data.Array.Accelerate.Data.Bits.$fBitsInt104
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)) -}
3bfff446bd4010c75466a474894455e7
  $fBitsInt104 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int32
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt98
                   Data.Array.Accelerate.Data.Bits.$fBitsInt105
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)) -}
bb78ef03f68139fbe62b167ae822bd79
  $fBitsInt105 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int32
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt33
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt88
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt106
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)) -}
f1ba277094febd3fd301365ef8490cc1
  $fBitsInt106 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int32
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsInt107
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Types.Int)>_N)) -}
6d0bac71f88778b4b6ce7cd50d49284a
  $fBitsInt107 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int32, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt108
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R) -}
a64f184492f8b182dc7e345bdbba0777
  $fBitsInt108 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Int.Int32), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int32), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Int.Int32)
                   @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt94
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
2ec0820907e7e199daaecadc99112b9a
  $fBitsInt109 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @ ()
                   @~ <((), GHC.Int.Int32)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt105
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)) -}
30dedda23000214091370fc085d25d39
  $fBitsInt11 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
93bba8d6c7421e5ac1a4d6e194573e3b
  $fBitsInt110 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word32 -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word32 -> GHC.Int.Int32)
                   @ GHC.Word.Word32
                   @ GHC.Int.Int32
                   @~ <GHC.Word.Word32 -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
540e0cf9c1a0f93dadb540651f8e3938
  $fBitsInt111 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Int.Int32 -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Int.Int32 -> GHC.Word.Word32)
                   @ GHC.Int.Int32
                   @ GHC.Word.Word32
                   @~ <GHC.Int.Int32 -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
541863d4e91debff9925a2b779f65aea
  $fBitsInt112 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsInt91 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int32
                       Data.Array.Accelerate.Array.Sugar.$fEltInt32
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt32
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Int.Int32, GHC.Int.Int32)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsInt89
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Int.Int32, GHC.Int.Int32)
                                Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Int.Int32), GHC.Int.Int32)
                                   @ GHC.Int.Int32
                                   @ ((), GHC.Int.Int32)
                                   @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Int.Int32)
                                      @ GHC.Int.Int32
                                      @ ()
                                      @~ <((), GHC.Int.Int32)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt88
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                           GHC.Int.Int32)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt87
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt88
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int32
                          @ (GHC.Int.Int32, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt32
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Int.Int32, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Int.Int32), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Int.Int32)
                                @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Int.Int32)
                                   @ GHC.Int.Int32
                                   @ ()
                                   @~ <((), GHC.Int.Int32)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))) -}
24127e6a43e173f40b37b113c9b3278c
  $fBitsInt113 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Int.Int32 -> GHC.Int.Int32)
                      @ GHC.Int.Int32
                      @~ <GHC.Int.Int32 -> GHC.Int.Int32>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType)
                   x) -}
fd435eb2a46059121e122d21a43a8acd
  $fBitsInt114 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
fdf028f5b58de227bfce05daa11c659b
  $fBitsInt115 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
70b63b638b151663b3f84efc61b33b7d
  $fBitsInt116 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
1687b1be7885d088264f8f4f03fadc88
  $fBitsInt117 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Int.Int64 -> GHC.Types.Int)
                      @ GHC.Int.Int64
                      @~ <GHC.Int.Int64 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType)
                   x) -}
91e1bdd0380a8f911da506e57af0c6cf
  $fBitsInt118 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int64, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int64
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int64
                       @ (GHC.Int.Int64, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt64
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64)
                          @ GHC.Int.Int64
                          @~ <(GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int64
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt64
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int64), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int64)
                             @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int64)
                                @ GHC.Int.Int64
                                @ ()
                                @~ <((), GHC.Int.Int64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))) -}
7074788a4d2236afbc3b188a4dab0f31
  $fBitsInt119 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int64, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int64
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int64
                       @ (GHC.Int.Int64, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt64
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64)
                          @ GHC.Int.Int64
                          @~ <(GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int64
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt64
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int64), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int64)
                             @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int64)
                                @ GHC.Int.Int64
                                @ ()
                                @~ <((), GHC.Int.Int64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))) -}
2a3c27a20132e4483fcdefa26f212719
  $fBitsInt12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt10
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Types.Int, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
76fdcf18cbbb028aef2470b402c9d1f9
  $fBitsInt120 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Types.Int)>_N)) -}
d495911bff18615d8c8d695d82f16027
  $fBitsInt121 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int64
                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (GHC.Int.Int64, GHC.Int.Int64)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsInt124
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (GHC.Int.Int64, GHC.Int.Int64)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), GHC.Int.Int64), GHC.Int.Int64)
                               @ GHC.Int.Int64
                               @ ((), GHC.Int.Int64)
                               @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt64
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), GHC.Int.Int64)
                                  @ GHC.Int.Int64
                                  @ ()
                                  @~ <((), GHC.Int.Int64)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt123
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                       GHC.Int.Int64)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt122
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt123
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int64
                      @ (GHC.Int.Int64, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Int.Int64, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Int.Int64), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Int.Int64)
                            @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Int.Int64)
                               @ GHC.Int.Int64
                               @ ()
                               @~ <((), GHC.Int.Int64)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt64
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
b16730bcbdf7c2b485f5c57ce7415839
  $fBitsInt122 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong7) -}
d8f41340675aff35ca2e84c4601fcd71
  $fBitsInt123 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong9) -}
9cdf2f466fa858dd83919ad4b899210e
  $fBitsInt124 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
5481656b0565ddfe0eacbebae48cb485
  $fBitsInt125 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Types.Int)>_N)) -}
a01371aaa6ace5763be663b28d67f843
  $fBitsInt126 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt123
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int64, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int64
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int64
                       @ (GHC.Int.Int64, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt64
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64)
                          @ GHC.Int.Int64
                          @~ <(GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int64
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt64
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int64), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int64)
                             @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int64)
                                @ GHC.Int.Int64
                                @ ()
                                @~ <((), GHC.Int.Int64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))) -}
417e12d3751482e5be867c7b1dafc11b
  $fBitsInt127 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
e1f205de2373c53b6a668e947797d2ae
  $fBitsInt128 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Int.Int64)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqInt64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int64
                               @ (GHC.Int.Int64, GHC.Int.Int64)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltInt64
                               Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Int.Int64, GHC.Int.Int64)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Int.Int64), GHC.Int.Int64)
                                     @ GHC.Int.Int64
                                     @ ((), GHC.Int.Int64)
                                     @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Int.Int64)
                                        @ GHC.Int.Int64
                                        @ ()
                                        @~ <((), GHC.Int.Int64)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Int.Int64
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt123
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Int.Int64
                                           @ (GHC.Int.Int64, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Int.Int64, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Int.Int64), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Int.Int64)
                                                 @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt129
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                             GHC.Int.Int64)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsInt123
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
b1e96dab0644ee5aec5315eb605fde6a
  $fBitsInt129 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @ ()
                   @~ <((), GHC.Int.Int64)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt130
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
5a83069a87aff300266e5352707731b8
  $fBitsInt13 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
e1c85bb24919c957b687d973032bd9be
  $fBitsInt130 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong18) -}
b59fddd89aa3664d63117a8634ab0007
  $fBitsInt131 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt126
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int64
                               Data.Array.Accelerate.Array.Sugar.$fEltInt64
                               (GHC.Int.I64# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
7fca50c58cd3d4e79be8cc747e34977f
  $fBitsInt132 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Int.Int64
                            @ GHC.Int.Int64
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            Data.Array.Accelerate.Data.Bits.$fBitsInt133
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int64
                               Data.Array.Accelerate.Array.Sugar.$fEltInt64
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt123
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Int.Int64
                                  @ (GHC.Int.Int64, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Int.Int64, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Int.Int64), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Int.Int64)
                                        @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt129
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
74d74d6ce5b943630ce3bdf3370a9c79
  $fBitsInt133 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Int.Int64 -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Int.Int64 -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <GHC.Int.Int64 -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType) -}
ae26ca529733019753b71f87ef4343d5
  $fBitsInt134 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt126
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int64
                               Data.Array.Accelerate.Array.Sugar.$fEltInt64
                               (GHC.Int.I64# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
333002b1c8436de794e9aaa30831daa2
  $fBitsInt135 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt126
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int64
                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                      (GHC.Int.I64# 1#))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   eta) -}
1cf475a8f693dcc7bbf9cfebd990f901
  $fBitsInt136 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsInt137
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
01dfef946cdbe8e3dc7b89740da46e1e
  $fBitsInt137 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int64, GHC.Int.Int64)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsInt138
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R) -}
bb7f1f44d5213770d59c0763e741b8a4
  $fBitsInt138 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Int.Int64), GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int64), GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @ ((), GHC.Int.Int64)
                   @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt144
                   Data.Array.Accelerate.Data.Bits.$fBitsInt139
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
137a89fad9e1230dc4cd8befab7db0b7
  $fBitsInt139 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt133
                   Data.Array.Accelerate.Data.Bits.$fBitsInt140
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
05825b47a68d62c7d6d752efcebcd4b9
  $fBitsInt14 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Types.Int)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Int
                               @ (GHC.Types.Int, GHC.Types.Int)
                               Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Types.Int), GHC.Types.Int)
                                     @ GHC.Types.Int
                                     @ ((), GHC.Types.Int)
                                     @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ()
                                        @~ <((), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Types.Int
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt10
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsBool3
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Int
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl1
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                                              Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt15
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                             GHC.Types.Int)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsBool3
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
9d685247017b0f3e92750ca8dc360863
  $fBitsInt140 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong32
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt123
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt141
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
367ea66fc157cfb06e81c32f71c9f236
  $fBitsInt141 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int64
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsInt142
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Types.Int)>_N)) -}
159a445f1c88ef2840e708dd7e86d6c2
  $fBitsInt142 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt143
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R) -}
c9dee33269db63c08a69ee439e7a711b
  $fBitsInt143 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Int.Int64), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int64), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Int.Int64)
                   @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt129
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
4604d21d133e3f437833749252ac0f73
  $fBitsInt144 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @ ()
                   @~ <((), GHC.Int.Int64)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt140
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)) -}
72f179ce0df17017a89566340994e1d9
  $fBitsInt145 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word64 -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word64 -> GHC.Int.Int64)
                   @ GHC.Word.Word64
                   @ GHC.Int.Int64
                   @~ <GHC.Word.Word64 -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType) -}
69148374cc950ae16d042c5b126eba64
  $fBitsInt146 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Int.Int64 -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Int.Int64 -> GHC.Word.Word64)
                   @ GHC.Int.Int64
                   @ GHC.Word.Word64
                   @~ <GHC.Int.Int64 -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt64_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
44be57f620dca49ab1fb0531db92f430
  $fBitsInt147 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsInt126 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int64
                       Data.Array.Accelerate.Array.Sugar.$fEltInt64
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCLLong11
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Int.Int64, GHC.Int.Int64)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsInt124
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Int.Int64, GHC.Int.Int64)
                                Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Int.Int64), GHC.Int.Int64)
                                   @ GHC.Int.Int64
                                   @ ((), GHC.Int.Int64)
                                   @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Int.Int64)
                                      @ GHC.Int.Int64
                                      @ ()
                                      @~ <((), GHC.Int.Int64)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt123
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                           GHC.Int.Int64)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt122
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt123
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int64
                          @ (GHC.Int.Int64, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt64
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Int.Int64, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Int.Int64), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Int.Int64)
                                @~ <(((), GHC.Int.Int64), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Int.Int64)
                                   @ GHC.Int.Int64
                                   @ ()
                                   @~ <((), GHC.Int.Int64)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Int.Int64>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N))) -}
eb98b84d47a513e573131df68531ae44
  $fBitsInt148 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Int.Int64 -> GHC.Int.Int64)
                      @ GHC.Int.Int64
                      @~ <GHC.Int.Int64 -> GHC.Int.Int64>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType)
                   x) -}
302a70727429cde2a933a917eabad822
  $fBitsInt149 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
e8c9faf98598c35acfcfda5a282f6691
  $fBitsInt15 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
582eaa0d7f027b33e8690643ce6f3e16
  $fBitsInt150 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
ff3d724638c7e9226799b2b00195d2e6
  $fBitsInt151 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int64
                   @ (GHC.Int.Int64, GHC.Int.Int64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int64, GHC.Int.Int64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int64), GHC.Int.Int64)
                         @ GHC.Int.Int64
                         @ ((), GHC.Int.Int64)
                         @~ <(((), GHC.Int.Int64), GHC.Int.Int64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int64)
                            @ GHC.Int.Int64
                            @ ()
                            @~ <((), GHC.Int.Int64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int64>_N <GHC.Int.Int64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int64,
                                                                 GHC.Int.Int64)>_N)) -}
645e0208bcd862bea4f8a38f92352188
  $fBitsInt152 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Int.Int8 -> GHC.Types.Int)
                      @ GHC.Int.Int8
                      @~ <GHC.Int.Int8 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType)
                   x) -}
09e93b6370c507e0abddf9fbeb9537db
  $fBitsInt153 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int8, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int8
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int8
                       @ (GHC.Int.Int8, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt8
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8)
                          @ GHC.Int.Int8
                          @~ <(GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int8, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int8
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt8
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int8), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int8)
                             @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int8)
                                @ GHC.Int.Int8
                                @ ()
                                @~ <((), GHC.Int.Int8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))) -}
57fdd8838dcfce7a45263c43d000f96d
  $fBitsInt154 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int8, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int8
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int8
                       @ (GHC.Int.Int8, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt8
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8)
                          @ GHC.Int.Int8
                          @~ <(GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int8, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int8
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt8
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int8), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int8)
                             @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int8)
                                @ GHC.Int.Int8
                                @ ()
                                @~ <((), GHC.Int.Int8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))) -}
6fe0ff9b4b04d4c0a60f735ea64d6bc8
  $fBitsInt155 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Types.Int)>_N)) -}
bc5542b89a30db83b288ddec98916018
  $fBitsInt156 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt162
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int8
                      Data.Array.Accelerate.Array.Sugar.$fEltInt8
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (GHC.Int.Int8, GHC.Int.Int8)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsInt161
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (GHC.Int.Int8, GHC.Int.Int8)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), GHC.Int.Int8), GHC.Int.Int8)
                               @ GHC.Int.Int8
                               @ ((), GHC.Int.Int8)
                               @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt8
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), GHC.Int.Int8)
                                  @ GHC.Int.Int8
                                  @ ()
                                  @~ <((), GHC.Int.Int8)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt159
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                       GHC.Int.Int8)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt157
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt159
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int8
                      @ (GHC.Int.Int8, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltInt8
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Int.Int8, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Int.Int8), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Int.Int8)
                            @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Int.Int8)
                               @ GHC.Int.Int8
                               @ ()
                               @~ <((), GHC.Int.Int8)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt8
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)) -}
66097c3721d506b10e102fc3d6b9cd70
  $fBitsInt157 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int8
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt158) -}
ed4fd70c739471bf384c48d36570cb3d
  $fBitsInt158 :: GHC.Int.Int8
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I8# -1#) -}
4a26b5829b14bbfb6423df829374c945
  $fBitsInt159 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int8
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt160) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsInt16 :: Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int16
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int16
                  Data.Array.Accelerate.Classes.Eq.$fEqInt16
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_$cpopCount -}
a29e048f332328c2c959a0b9d91f8372
  $fBitsInt160 :: GHC.Int.Int8
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I8# 0#) -}
1dabb9d643ca35c81205dcf0a6e0196d
  $fBitsInt161 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
16c5550f582a8cc0f43665b3807a94ce
  $fBitsInt162 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Int.$fBitsInt7) -}
a7587e11410d9361e62ee3e16608deb6
  $fBitsInt163 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Types.Int)>_N)) -}
5d048b632a5ca86910e34bbef641c723
  $fBitsInt164 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt162
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt159
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int8, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int8
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int8
                       @ (GHC.Int.Int8, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt8
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8)
                          @ GHC.Int.Int8
                          @~ <(GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int8, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int8
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt8
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int8), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int8)
                             @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int8)
                                @ GHC.Int.Int8
                                @ ()
                                @~ <((), GHC.Int.Int8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))) -}
18904c7fe219787ed18696f51a912abe
  $fBitsInt165 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
b140eb2bcee9a0683d794030fae25a5b
  $fBitsInt166 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqInt8_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt8_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqInt8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int8
                               @ (GHC.Int.Int8, GHC.Int.Int8)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltInt8
                               Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Int.Int8, GHC.Int.Int8)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Int.Int8), GHC.Int.Int8)
                                     @ GHC.Int.Int8
                                     @ ((), GHC.Int.Int8)
                                     @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Int.Int8)
                                        @ GHC.Int.Int8
                                        @ ()
                                        @~ <((), GHC.Int.Int8)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Int.Int8
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt162
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt159
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Int.Int8
                                           @ (GHC.Int.Int8, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Int.Int8, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Int.Int8), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Int.Int8)
                                                 @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt167
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                             GHC.Int.Int8)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsInt159
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
be1c68da8e1c3dfaff533cca17d066ab
  $fBitsInt167 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @ ()
                   @~ <((), GHC.Int.Int8)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt168
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)) -}
c5a3ae49ba2012c8ff309b341478b1cd
  $fBitsInt168 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int8
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt169) -}
be5f7323355894f2eb863d80fa41e7fe
  $fBitsInt169 :: GHC.Int.Int8
  {- HasNoCafRefs, Unfolding: (GHC.Int.I8# 1#) -}
a8d0b3e8cbf4f78f6123e23117b7186a
  $fBitsInt16_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt81
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
dfd157b51e5a7219178f203643432bed
  $fBitsInt16_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt80
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
0b35ca1adf480677fd2739dd1c27e194
  $fBitsInt16_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt65
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
fa28855408df32a560fc4e555a86c215
  $fBitsInt16_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt61
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
ce68439701d3d29ccf5c4464ff8f3ae0
  $fBitsInt16_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt78
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
04a29f6443155fef660ebd9aa2c5d69b
  $fBitsInt16_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt60
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
51461b448074a932ed98802ec9bbe2f6
  $fBitsInt16_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt56
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
831522241c81065768c0134443b10d7c
  $fBitsInt16_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt46
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
9d169d242c98e288dee11a382fc70eb5
  $fBitsInt16_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate9
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Int.Int16
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) }) -}
c51fa8006075550063785a8a51d4897a
  $fBitsInt16_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt48
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
76ee43fd06b98715732ac03e731ecb02
  $fBitsInt16_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt47
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
e2c3a7afa20f41ad3833f1df868a09de
  $fBitsInt16_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt63
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
b9a75f155df3545df63c78867880d22c
  $fBitsInt16_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt77
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
38820a029b57ca48fb7420516dc47bfc
  $fBitsInt16_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt55
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
55d8d046c2cd511c18e99aca52b476df
  $fBitsInt16_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt50
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
37df235a9544d30b007e220661880f60
  $fBitsInt16_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt57
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
97bdce24f37d885ad3a6195b96391255
  $fBitsInt16_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt54
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
42143fa3de2d0be468e21bd4109cfb15
  $fBitsInt16_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt49
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
4ea681c71d5bdbe66fea8b5d9ab383c0
  $fBitsInt16_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt79
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
8e31248e3a38bb36f106b937d5e69a50
  $fBitsInt16_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt66
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) -}
92179f30bb589e63e5529b3e26db7a8d
  $fBitsInt16_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int16, GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int16
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16) -}
3d9584b89ed16016fc1a045fcbb82eff
  $fBitsInt16_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word16, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word16
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
96e3afc87a508356b8145736156c800b
  $fBitsInt16_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word16, GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word16
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16) -}
536cc3c075c92e9c0300302e292f279e
  $fBitsInt16_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType) -}
fa81ae05a9ca2f4f037a3794c0a5cd83
  $fBitsInt16_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word16, GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word16
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16) -}
f5a079ed62101a8321f5e9a1d7ca7908
  $fBitsInt16_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int16, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int16
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
1e6de035be336928088ecca4c8496366
  $fBitsInt16_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType) -}
05704e8e4bb0650941b96a11e3b57462
  $fBitsInt16_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int16, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int16
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
c9e443e121ebc663bfba1fe9ba6a1d22
  $fBitsInt16_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int16, GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int16
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16) -}
f4f4a5fbee56d0825c38222790d8aa2f
  $fBitsInt16_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType) -}
c1ab43405e7f8379f48058a4a6ff92fe
  $fBitsInt16_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType) -}
15a6ccc2b2d3791875193f30960f0d5c
  $fBitsInt16_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType) -}
ea778dd0f8a69f4e3696df38d1d44db6
  $fBitsInt16_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType) -}
1a1d8df550fe15ffa6f5919e41f27fe6
  $fBitsInt16_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType) -}
bb30264cee9ad3266a92e10a23742735
  $fBitsInt16_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word16, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word16
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
31279fc63c73817dfb1cc63ad84ff0c5
  $fBitsInt16_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType) -}
a24c301813b080af2b0bce7454616575
  $fBitsInt17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt12
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Int
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (GHC.Types.I# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
1b80adf3a715895d5d80e89503aea447
  $fBitsInt170 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt164
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int8
                               Data.Array.Accelerate.Array.Sugar.$fEltInt8
                               (GHC.Int.I8# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
c04516896503252a24c6d9ad75cb7c5d
  $fBitsInt171 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Int.Int8
                            @ GHC.Int.Int8
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            Data.Array.Accelerate.Data.Bits.$fBitsInt172
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int8
                               Data.Array.Accelerate.Array.Sugar.$fEltInt8
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt162
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt159
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Int.Int8
                                  @ (GHC.Int.Int8, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Int.Int8, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Int.Int8), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Int.Int8)
                                        @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt167
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
43c968365dfac6ccf222f2beaf312dad
  $fBitsInt172 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Int.Int8 -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Int.Int8 -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <GHC.Int.Int8 -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType) -}
85a2b506a02e5abe92e30e9a8b443f85
  $fBitsInt173 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt164
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int8
                               Data.Array.Accelerate.Array.Sugar.$fEltInt8
                               (GHC.Int.I8# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
2788eeb2a5063b7775ac51ce031bfd2b
  $fBitsInt174 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt164
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int8
                      Data.Array.Accelerate.Array.Sugar.$fEltInt8
                      (GHC.Int.I8# 1#))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                   eta) -}
b9584d429b1c7a5a706e7042691dd401
  $fBitsInt175 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int8
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsInt176
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
a4c720dcba3ff3eb99eb6a1c8c1c0fe1
  $fBitsInt176 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int8, GHC.Int.Int8)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsInt177
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R) -}
618cab9253d70b7c2b5575799b136741
  $fBitsInt177 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp (((), GHC.Int.Int8), GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int8), GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @ ((), GHC.Int.Int8)
                   @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt186
                   Data.Array.Accelerate.Data.Bits.$fBitsInt178
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)) -}
a1c609f057a95a726c430bf93c479660
  $fBitsInt178 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int8
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt172
                   Data.Array.Accelerate.Data.Bits.$fBitsInt179
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)) -}
fa795083aba5b168ece06555b882a078
  $fBitsInt179 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int8
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt183
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt159
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt180
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)) -}
8dc91f38894f04b427ec214ed92c8fab
  $fBitsInt18 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Int
                            @ GHC.Types.Int
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            Data.Array.Accelerate.Data.Bits.$fBitsInt19
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Int
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt10
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsBool3
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Int
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl1
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                                     Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt15
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
4109920c18c36197381ab1f4ade188b1
  $fBitsInt180 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int8
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsInt181
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Types.Int)>_N)) -}
4aaffb2eeac1896a6daf63b38baa706a
  $fBitsInt181 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int8, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt182
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R) -}
e4828130e997761a483bfe9e7ffaf7e1
  $fBitsInt182 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp (((), GHC.Int.Int8), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int8), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Int.Int8)
                   @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt167
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
db27def394543bf08ce785a5af295866
  $fBitsInt183 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsInt184
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
8503d62a356401418bf680e4d78ea1a3
  $fBitsInt184 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt185
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
0a4d5b6e25b4169a9b6d3f81fa612214
  $fBitsInt185 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsInt162
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
717f3c73724d2feb3a17f60bda02f702
  $fBitsInt186 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @ ()
                   @~ <((), GHC.Int.Int8)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt179
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)) -}
178df7d09d09eaf77b50af3f574f8dfc
  $fBitsInt187 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt162
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
7b8604c24cba2170466384dac45dfc60
  $fBitsInt188 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Word.Word8 -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word8 -> GHC.Int.Int8)
                   @ GHC.Word.Word8
                   @ GHC.Int.Int8
                   @~ <GHC.Word.Word8 -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType) -}
5d4f0139f092ed6ad28d0d96f1e77a6f
  $fBitsInt189 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Int.Int8 -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Int.Int8 -> GHC.Word.Word8)
                   @ GHC.Int.Int8
                   @ GHC.Word.Word8
                   @~ <GHC.Int.Int8 -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt8_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
9c519c4c57ebf7ef4d23c417625f46cf
  $fBitsInt19 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Types.Int -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Types.Int -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <GHC.Types.Int -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType) -}
3edcf72c413c216eed3bd296008741f9
  $fBitsInt190 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsInt191
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
e634bf3832cc4c228fd4f4dbf6fe76f3
  $fBitsInt191 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt192
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
d6786eeb7fa0e262ccd0fd2e5cd41490
  $fBitsInt192 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt187
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
8d84e5e811110e1c36e20c033507b5ae
  $fBitsInt193 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsInt164 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int8
                       Data.Array.Accelerate.Array.Sugar.$fEltInt8
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsInt162
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt8
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Int.Int8, GHC.Int.Int8)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsInt161
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Int.Int8, GHC.Int.Int8)
                                Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Int.Int8), GHC.Int.Int8)
                                   @ GHC.Int.Int8
                                   @ ((), GHC.Int.Int8)
                                   @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Int.Int8)
                                      @ GHC.Int.Int8
                                      @ ()
                                      @~ <((), GHC.Int.Int8)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt159
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                           GHC.Int.Int8)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt157
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt159
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int8
                          @ (GHC.Int.Int8, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt8
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Int.Int8, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Int.Int8), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Int.Int8)
                                @~ <(((), GHC.Int.Int8), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Int.Int8)
                                   @ GHC.Int.Int8
                                   @ ()
                                   @~ <((), GHC.Int.Int8)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Int.Int8>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N))) -}
074c0021ba7e968bc75d1a6cef5af684
  $fBitsInt194 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Int.Int8 -> GHC.Int.Int8)
                      @ GHC.Int.Int8
                      @~ <GHC.Int.Int8 -> GHC.Int.Int8>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType)
                   x) -}
aaea151322dbdc8e24929c45b5ee7c18
  $fBitsInt195 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
a1acfd7795162040e7727e86dd009df6
  $fBitsInt196 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
454f710195884efdf90ef22a7ff1de31
  $fBitsInt197 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int8
                   @ (GHC.Int.Int8, GHC.Int.Int8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int8, GHC.Int.Int8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int8), GHC.Int.Int8)
                         @ GHC.Int.Int8
                         @ ((), GHC.Int.Int8)
                         @~ <(((), GHC.Int.Int8), GHC.Int.Int8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int8)
                            @ GHC.Int.Int8
                            @ ()
                            @~ <((), GHC.Int.Int8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int8>_N <GHC.Int.Int8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int8,
                                                                 GHC.Int.Int8)>_N)) -}
4b3b596781edb2c49c952cc4f48bf997
  $fBitsInt2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Types.Int, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
0739f901e07d13f9356142dc9573e9dc
  $fBitsInt20 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt12
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Int
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (GHC.Types.I# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
be4c7a2f975fcad13b2b5761a0b90418
  $fBitsInt21 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt12
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                      (GHC.Types.I# 1#))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                   eta) -}
72041486a29014402729f58cd7a1401c
  $fBitsInt22 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                   Data.Array.Accelerate.Data.Bits.$fBitsInt23
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
2a6511d9fc9a5b44d495519ee358aa97
  $fBitsInt23 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                   Data.Array.Accelerate.Data.Bits.$fBitsInt24
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
5d04eb72a6ae2d19bf30b835d9c6e206
  $fBitsInt24 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt34
                   Data.Array.Accelerate.Data.Bits.$fBitsInt25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
7b45a0e516d57b7da3d683d496d47e29
  $fBitsInt25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt19
                   Data.Array.Accelerate.Data.Bits.$fBitsInt26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
dd0ba10ee46a9c704c5f7aff4d96b69a
  $fBitsInt26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt27
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
36bf5dfa026f734b72dbf4a8e166683f
  $fBitsInt27 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsInt28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
d365f185f5f073a89b2b54695fdc39c8
  $fBitsInt28 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                   Data.Array.Accelerate.Data.Bits.$fBitsInt29
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
23a1e31bc004c32b6ae24ab46aa17324
  $fBitsInt29 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt15
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
3ea2bdd75080e810feef02b1af7686bc
  $fBitsInt3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Types.Int, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
e5eae90e5b7913e111e023844406c721
  $fBitsInt30 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsInt31
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
033ec74915e6958636e4789dd0e3438e
  $fBitsInt31 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt33
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsInt32 :: Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int32
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int32
                  Data.Array.Accelerate.Classes.Eq.$fEqInt32
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_$cpopCount -}
cf1565c10b40bccfa03b5cb56c6ab8e8
  $fBitsInt32_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt116
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
0af832fd0e3b27c4b04496c36a300c1b
  $fBitsInt32_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt115
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
67882246c51691f784a8ac36ea9d89e2
  $fBitsInt32_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt100
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
42558d476fbff1c14c7f7b333ab8b6c4
  $fBitsInt32_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt97
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
4999321615bda8a499d595f31a5b13aa
  $fBitsInt32_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt113
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
447a2d7af51a2de7ae939370d8d676fe
  $fBitsInt32_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt96
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
45fd06ffc762f4422d686e3398d64c38
  $fBitsInt32_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt92
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
75fb0542084789618377ba857e26358a
  $fBitsInt32_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt82
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
bccc75949b223218bcc14e886efe6c23
  $fBitsInt32_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate10
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Int.Int32
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) }) -}
f0a2299ae396ce94aff615c7a5af339b
  $fBitsInt32_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt84
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
078449ad9b4ff462580d7398b3c7706a
  $fBitsInt32_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt83
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
3942597cecd5ed9b5007403c02932e75
  $fBitsInt32_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt99
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
de8f4278dc0852f65d5426250492cda4
  $fBitsInt32_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt112
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
e2e8dfe586cdc86722857ec7f2214db5
  $fBitsInt32_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt91
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
c2c65ffa4199b373842620655ce34286
  $fBitsInt32_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt86
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
2b17fe448e2473cabf398068bd630b23
  $fBitsInt32_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt93
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
95f926c8fd8b5994c3014f84679d0679
  $fBitsInt32_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt90
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
c2007871dd9d1a95c84eb8e601f83253
  $fBitsInt32_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt85
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
d15ea813b05aba4bed1c3fb63d22cdac
  $fBitsInt32_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt114
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
ab5f95078c3e37beecc0625e17eadeba
  $fBitsInt32_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt101
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) -}
9d7dfbb182cebe3abeac1b1e5f8e7506
  $fBitsInt32_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int32, GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int32
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32) -}
175197936da26a348328b7d7e4e69eb3
  $fBitsInt32_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word32, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word32
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
0e73da1364e127a7c012300d6dcd0ceb
  $fBitsInt32_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word32, GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32) -}
242f44c21562379b86547c98a1e47299
  $fBitsInt32_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType) -}
ecc96af787c4b63ee846727a84a06744
  $fBitsInt32_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word32, GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32) -}
d8a7b24eae50e1e59f86d8bb983f9afa
  $fBitsInt32_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int32, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int32
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
e1b20aec4207439c36cf9d896fdc9a7a
  $fBitsInt32_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType) -}
4fd8f0b038647c2db4622f4623168ddd
  $fBitsInt32_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int32, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int32
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
86b7c57248e4366122c08c48847f1a9c
  $fBitsInt32_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int32, GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int32
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32) -}
3c6d36415f2c549ab02fe77e57873b02
  $fBitsInt32_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType) -}
cfcfb6e9804888fcd2d6d91ead97a422
  $fBitsInt32_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType) -}
fc6aa69d1c533280955ccff23a254db6
  $fBitsInt32_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType) -}
e9d8e5587ec741961de7be96a0a8ec48
  $fBitsInt32_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType) -}
f72d8f478deec9d6b6c7bd542e854602
  $fBitsInt32_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType) -}
b5197f10caf91c51a041548ad14ace6c
  $fBitsInt32_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word32, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word32
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
8c9a8df48f8465f3072bdb684396716b
  $fBitsInt32_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType) -}
db3a442fd0b883318fae5a7087721e5d
  $fBitsInt33 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsInt10
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
5b6458a5be8accda67bf506d0b55983c
  $fBitsInt34 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
0f0cea9c8c9133ec3be4a27658d7bba1
  $fBitsInt35 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt10
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
9a4b28ef7b857c91de9e3173a8c16a83
  $fBitsInt36 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Types.Word -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Types.Word -> GHC.Types.Int)
                   @ GHC.Types.Word
                   @ GHC.Types.Int
                   @~ <GHC.Types.Word -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
af97af84c94e72053a7e44185de4dcfc
  $fBitsInt37 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Types.Int -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Types.Int -> GHC.Types.Word)
                   @ GHC.Types.Int
                   @ GHC.Types.Word
                   @~ <GHC.Types.Int -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
8f3323b6ff5459183d41efed07fb09a3
  $fBitsInt38 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsInt39
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
13fe6d1d7892eaae6cde9b237d589661
  $fBitsInt39 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt40
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
0bd9f011d6dd3d16de801ddd81ee038a
  $fBitsInt4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
0cce5f94975756f7efe12ad36dbf546b
  $fBitsInt40 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt35
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
dbfa097e0d9267a5233d6dc7c265aa5e
  $fBitsInt41 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsInt12 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsInt10
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsInt9
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Types.Int, GHC.Types.Int)
                                Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                                Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Types.Int), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ((), GHC.Types.Int)
                                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Types.Int)
                                      @ GHC.Types.Int
                                      @ ()
                                      @~ <((), GHC.Types.Int)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                           GHC.Types.Int)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt6
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsBool3
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))) -}
84c3bf1378f5c9f6b4e325a415d865e0
  $fBitsInt42 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Types.Int -> GHC.Types.Int)
                      @ GHC.Types.Int
                      @~ <GHC.Types.Int -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType)
                   x) -}
1726adfd0c483a77e61e63d0e86261f7
  $fBitsInt43 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl2
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
2edcfc2528368dcaf7261146296fb1ce
  $fBitsInt44 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
fe3a24e961446850693c2a0c18dd909c
  $fBitsInt45 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Int), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Int)
                         @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ()
                            @~ <((), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
4dd26fa82297d8c46ca2533c4b1a6b1b
  $fBitsInt46 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Int.Int16 -> GHC.Types.Int)
                      @ GHC.Int.Int16
                      @~ <GHC.Int.Int16 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType)
                   x) -}
e20254f87453a1965379b213884da563
  $fBitsInt47 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int16, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int16
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int16
                       @ (GHC.Int.Int16, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt16
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16)
                          @ GHC.Int.Int16
                          @~ <(GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int16, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int16
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt16
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int16), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int16)
                             @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int16)
                                @ GHC.Int.Int16
                                @ ()
                                @~ <((), GHC.Int.Int16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))) -}
872b97f59c2e87c2292bd66d606e4c19
  $fBitsInt48 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int16, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int16
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int16
                       @ (GHC.Int.Int16, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt16
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16)
                          @ GHC.Int.Int16
                          @~ <(GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int16, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int16
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt16
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int16), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int16)
                             @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int16)
                                @ GHC.Int.Int16
                                @ ()
                                @~ <((), GHC.Int.Int16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))) -}
eb1c668381ad74b0d04e84a7fa252dd0
  $fBitsInt49 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Types.Int)>_N)) -}
b3f1a406fbda89bbb94c091a26df739d
  $fBitsInt5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt10
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsInt9
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (GHC.Types.Int, GHC.Types.Int)
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), GHC.Types.Int), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ((), GHC.Types.Int)
                               @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), GHC.Types.Int)
                                  @ GHC.Types.Int
                                  @ ()
                                  @~ <((), GHC.Types.Int)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsBool3
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                       GHC.Types.Int)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt6
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsBool3
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Int
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
aceea7c9002c2eca8fbac39dda3bd7d2
  $fBitsInt50 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int16
                      Data.Array.Accelerate.Array.Sugar.$fEltInt16
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (GHC.Int.Int16, GHC.Int.Int16)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsInt53
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (GHC.Int.Int16, GHC.Int.Int16)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), GHC.Int.Int16), GHC.Int.Int16)
                               @ GHC.Int.Int16
                               @ ((), GHC.Int.Int16)
                               @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt16
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), GHC.Int.Int16)
                                  @ GHC.Int.Int16
                                  @ ()
                                  @~ <((), GHC.Int.Int16)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt52
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                       GHC.Int.Int16)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt51
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt52
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int16
                      @ (GHC.Int.Int16, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltInt16
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Int.Int16, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Int.Int16), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Int.Int16)
                            @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Int.Int16)
                               @ GHC.Int.Int16
                               @ ()
                               @~ <((), GHC.Int.Int16)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt16
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)) -}
a20ad5ecb21725768c961d08674e194b
  $fBitsInt51 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int16
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort7) -}
f626de21746902b31cbcbe0729d3ad29
  $fBitsInt52 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int16
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort9) -}
1f54b4f3256d7a384887883c722e10b4
  $fBitsInt53 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool)
                   @ GHC.Int.Int16
                   @~ <(GHC.Int.Int16, GHC.Int.Int16) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
c6dd0cbdb9b8e750dea5b073074cdcbd
  $fBitsInt54 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Types.Int)>_N)) -}
15a03017ce1556828aaa7a53c2ab116b
  $fBitsInt55 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt52
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int16, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int16
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int16
                       @ (GHC.Int.Int16, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt16
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16)
                          @ GHC.Int.Int16
                          @~ <(GHC.Int.Int16, GHC.Types.Int) -> GHC.Int.Int16>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int16, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int16
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt16
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int16), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int16)
                             @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int16)
                                @ GHC.Int.Int16
                                @ ()
                                @~ <((), GHC.Int.Int16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))) -}
5706109c2fa905eea5c9139cf4b1119a
  $fBitsInt56 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
66e55599b71a42281763924336bcafed
  $fBitsInt57 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Int.Int16)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqInt16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt16_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqInt16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int16
                               @ (GHC.Int.Int16, GHC.Int.Int16)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltInt16
                               Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Int.Int16, GHC.Int.Int16)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Int.Int16), GHC.Int.Int16)
                                     @ GHC.Int.Int16
                                     @ ((), GHC.Int.Int16)
                                     @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Int.Int16)
                                        @ GHC.Int.Int16
                                        @ ()
                                        @~ <((), GHC.Int.Int16)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Int.Int16
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt52
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Int.Int16
                                           @ (GHC.Int.Int16, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Int.Int16, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Int.Int16), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Int.Int16)
                                                 @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt58
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                             GHC.Int.Int16)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsInt52
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
9fcfb4e225081b6bef5d7991c799d8d5
  $fBitsInt58 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @ ()
                   @~ <((), GHC.Int.Int16)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt59
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)) -}
ca20708a74b9d63160b5f723c79ff9ae
  $fBitsInt59 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int16
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort18) -}
4e6857611213893f6661c08d3d3c3835
  $fBitsInt6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt7) -}
1869b7e06cf38524cdb544cff33c49f1
  $fBitsInt60 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt55
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int16
                               Data.Array.Accelerate.Array.Sugar.$fEltInt16
                               (GHC.Int.I16# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
fee4e60c5c35c7c74481f5251eb35bfa
  $fBitsInt61 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Int.Int16
                            @ GHC.Int.Int16
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            Data.Array.Accelerate.Data.Bits.$fBitsInt62
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int16
                               Data.Array.Accelerate.Array.Sugar.$fEltInt16
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt52
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Int.Int16
                                  @ (GHC.Int.Int16, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Int.Int16, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Int.Int16), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Int.Int16)
                                        @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt58
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
81d4e303fe8dcb3a50e99cd2f629254b
  $fBitsInt62 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Int.Int16 -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Int.Int16 -> GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @~ <GHC.Int.Int16 -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType) -}
1403c2209d485ca4f9626871c3b86ef5
  $fBitsInt63 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt55
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int16
                               Data.Array.Accelerate.Array.Sugar.$fEltInt16
                               (GHC.Int.I16# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsInt64 :: Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int64
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int64
                  Data.Array.Accelerate.Classes.Eq.$fEqInt64
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_$cpopCount -}
cd28743567b70aed265b08cf2599c07f
  $fBitsInt64_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt151
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
4d8fe197968216cedee6bf6a2831f254
  $fBitsInt64_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt150
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
1ab6ebe358cf618117c5c76a7f3d91c7
  $fBitsInt64_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt135
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
a11b67e4922eedfadc0bf045961144c3
  $fBitsInt64_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt132
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
9bad00d532fbf53f401bad612d422a20
  $fBitsInt64_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt148
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
3ca6ee500b31ac71875f57140929a2ae
  $fBitsInt64_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt131
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
f559718cbed439eb6137f3d4d7674107
  $fBitsInt64_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt127
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
473e3860201ef101eb2befe41e0595c7
  $fBitsInt64_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt117
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
396aef089322cf3d808ffdf371121b49
  $fBitsInt64_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate11
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Int.Int64
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) }) -}
8b8b23320ab26a7ffccc09a348db0fee
  $fBitsInt64_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt119
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
d1f73a9c6f33688642cb667bc7ab13f0
  $fBitsInt64_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt118
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
7319e7b8ccb208858e574aab529e0ba2
  $fBitsInt64_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt134
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
57c24ada0d303e2051668c3adb582293
  $fBitsInt64_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt147
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
88aa6c0287abbe5308df54a25888be59
  $fBitsInt64_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt126
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
fcde2c15161015d21add1614b0f09bd9
  $fBitsInt64_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt121
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
73d100da4af09a421ee092ea7005b396
  $fBitsInt64_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt128
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
91ec7570eaca04a6218b647aedc5dd23
  $fBitsInt64_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt125
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
21dbb97253f7b6c12f56c9ad636c482c
  $fBitsInt64_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt120
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
9aa88dbdc2f6e94c35c8da5ba22c7b2c
  $fBitsInt64_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt149
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
ec963f652fff3f57bd9857845a9c4b44
  $fBitsInt64_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt136
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) -}
9ec531bc9c25eb64ade62b9471afebd8
  $fBitsInt64_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int64, GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int64
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64) -}
14c7fd861302f5367b1d663faf3ad9ec
  $fBitsInt64_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word64
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
453c2340a01d0ee525c40c5e26d7c8fe
  $fBitsInt64_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word64, GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word64
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64) -}
aee0c1473235981a3305afa06d1abbb5
  $fBitsInt64_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType) -}
a6064d7735761ffaebb59dc6ef376c0c
  $fBitsInt64_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word64, GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word64
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64) -}
82d763e2309c71f24862afe6ff8d4273
  $fBitsInt64_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int64
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
a549f2ac13908039270644956970952c
  $fBitsInt64_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType) -}
310abaa9bfdd031b82d78953dab7f4db
  $fBitsInt64_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int64
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
35f345a5fe6ef69b2092352954439d77
  $fBitsInt64_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Int.Int64, GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int64
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64) -}
92c62cf1800150e35146c1a4bb66c892
  $fBitsInt64_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Types.Int) -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType) -}
ff970ff0bca30ba96c2ec5b74d47365a
  $fBitsInt64_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType) -}
10c67e5d44f5bc637272789638f3c0fe
  $fBitsInt64_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType) -}
b02216f3faaf3f3cc252766d4f72cd82
  $fBitsInt64_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64)
                   @ GHC.Int.Int64
                   @~ <(GHC.Int.Int64, GHC.Int.Int64) -> GHC.Int.Int64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType) -}
bdf46711c845576476c3ebca42ce9f05
  $fBitsInt64_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType) -}
7dc739260fe4c30ac7cac79caa5c4493
  $fBitsInt64_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word64
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
b027143930f32a066c47170fc122db4d
  $fBitsInt64_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType) -}
1da88a2ec842cc51a93dee0e121f2a44
  $fBitsInt65 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt55
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int16
                      Data.Array.Accelerate.Array.Sugar.$fEltInt16
                      (GHC.Int.I16# 1#))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                   eta) -}
eb075d5270f014d16e6cf374e1630e99
  $fBitsInt66 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int16
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl4
                   Data.Array.Accelerate.Data.Bits.$fBitsInt67
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
9ab181a3b2071919fea00b27e1b5b2d6
  $fBitsInt67 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int16, GHC.Int.Int16)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsInt68
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R) -}
2e2cc3d2909f43c7d1470be98f887e98
  $fBitsInt68 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Int.Int16), GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int16), GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @ ((), GHC.Int.Int16)
                   @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt74
                   Data.Array.Accelerate.Data.Bits.$fBitsInt69
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)) -}
7a12d6571c2cb1070930635d5d1e5e01
  $fBitsInt69 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int16
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt62
                   Data.Array.Accelerate.Data.Bits.$fBitsInt70
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)) -}
cc95ba64f9265669d3d84c858ce5df1b
  $fBitsInt7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -1#) -}
9e6eb1658c000de6574bb9ab44fbedaa
  $fBitsInt70 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int16
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsCShort32
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt52
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt71
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)) -}
0ed84f0f11145db89beb402e11eec77c
  $fBitsInt71 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int16
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl3
                   Data.Array.Accelerate.Data.Bits.$fBitsInt72
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Types.Int)>_N)) -}
8bcb4fb3395dd6715a1b5dc8bc5d6f7d
  $fBitsInt72 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Int.Int16, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Int.Int16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsInt73
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R) -}
233560ea30dbc2c61d46d4ee9310203c
  $fBitsInt73 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Int.Int16), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Int.Int16), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Int.Int16)
                   @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsInt58
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
60d793c247454722389c88142322c4ea
  $fBitsInt74 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int16)
                   @ GHC.Int.Int16
                   @ ()
                   @~ <((), GHC.Int.Int16)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt70
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)) -}
c1872226bcab8e51929ca2498b9a46e6
  $fBitsInt75 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word16 -> GHC.Int.Int16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word16 -> GHC.Int.Int16)
                   @ GHC.Word.Word16
                   @ GHC.Int.Int16
                   @~ <GHC.Word.Word16 -> GHC.Int.Int16>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType) -}
611151f2b636ce23588c4612be031ef5
  $fBitsInt76 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Int.Int16 -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Int.Int16 -> GHC.Word.Word16)
                   @ GHC.Int.Int16
                   @ GHC.Word.Word16
                   @~ <GHC.Int.Int16 -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt16_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
f0dffa7ee05fae522007d0fe021c754b
  $fBitsInt77 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Data.Bits.$fBitsInt55 w w1)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                   (let {
                      w2 :: Data.Array.Accelerate.AST.PrimFun
                              (GHC.Types.Int -> GHC.Types.Int)
                      = Data.Array.Accelerate.AST.PrimNeg
                          @ (GHC.Types.Int -> GHC.Types.Int)
                          @ GHC.Types.Int
                          @~ <GHC.Types.Int -> GHC.Types.Int>_N
                          Data.Array.Accelerate.Type.$fIsNumInt_$cnumType
                    } in
                    let {
                      w3 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          w2
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt16
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w3
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCShort11
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       (Data.Array.Accelerate.Smart.Cond
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt16
                          (Data.Array.Accelerate.Smart.PrimApp
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Bool
                             @ (GHC.Int.Int16, GHC.Int.Int16)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                             Data.Array.Accelerate.Array.Sugar.$fEltBool
                             Data.Array.Accelerate.Data.Bits.$fBitsInt53
                             (Data.Array.Accelerate.Smart.Tuple
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (GHC.Int.Int16, GHC.Int.Int16)
                                Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                                Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (((), GHC.Int.Int16), GHC.Int.Int16)
                                   @ GHC.Int.Int16
                                   @ ((), GHC.Int.Int16)
                                   @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                   (Data.Array.Accelerate.Array.Sugar.SnocTup
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ ((), GHC.Int.Int16)
                                      @ GHC.Int.Int16
                                      @ ()
                                      @~ <((), GHC.Int.Int16)>_N
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                      (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                         @ Data.Array.Accelerate.Smart.Exp)
                                      w)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt52
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Tuple
                                   <Data.Array.Accelerate.Smart.Exp>_R
                                   (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                             <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                           GHC.Int.Int16)>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt51
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt52
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Int.Int16
                          @ (GHC.Int.Int16, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltInt16
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl198
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Int.Int16, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Int.Int16), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Int.Int16)
                                @~ <(((), GHC.Int.Int16), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Int.Int16)
                                   @ GHC.Int.Int16
                                   @ ()
                                   @~ <((), GHC.Int.Int16)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Int.Int16>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N))) -}
b015ff73e61d51686cd2da4ee1dbf744
  $fBitsInt78 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Int.Int16 -> GHC.Int.Int16)
                      @ GHC.Int.Int16
                      @~ <GHC.Int.Int16 -> GHC.Int.Int16>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType)
                   x) -}
06972d70f45313e3735e46960c0eff47
  $fBitsInt79 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsInt8 :: Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int8
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int8
                  Data.Array.Accelerate.Classes.Eq.$fEqInt8
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_$cpopCount -}
220c998a6072393f5dceb3e65bec46b8
  $fBitsInt80 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
946d3748dff0bc5e4dc0eb7d8efa400d
  $fBitsInt81 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int16
                   @ (GHC.Int.Int16, GHC.Int.Int16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int16, GHC.Int.Int16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int16), GHC.Int.Int16)
                         @ GHC.Int.Int16
                         @ ((), GHC.Int.Int16)
                         @~ <(((), GHC.Int.Int16), GHC.Int.Int16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int16)
                            @ GHC.Int.Int16
                            @ ()
                            @~ <((), GHC.Int.Int16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int16>_N <GHC.Int.Int16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int16,
                                                                 GHC.Int.Int16)>_N)) -}
49b1dc272cd70ecc1b4a6af5dcb18302
  $fBitsInt82 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Int.Int32 -> GHC.Types.Int)
                      @ GHC.Int.Int32
                      @~ <GHC.Int.Int32 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType)
                   x) -}
919ed6779f36c060b8ae67d0386d57d2
  $fBitsInt83 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int32, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int32
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int32
                       @ (GHC.Int.Int32, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt32
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32)
                          @ GHC.Int.Int32
                          @~ <(GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int32, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int32
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt32
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int32), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int32)
                             @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int32)
                                @ GHC.Int.Int32
                                @ ()
                                @~ <((), GHC.Int.Int32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))) -}
1db4561cfc83b2c34067e2bf4544f0ce
  $fBitsInt84 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int32, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int32
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int32
                       @ (GHC.Int.Int32, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt32
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32)
                          @ GHC.Int.Int32
                          @~ <(GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int32, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int32
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt32
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int32), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int32)
                             @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int32)
                                @ GHC.Int.Int32
                                @ ()
                                @~ <((), GHC.Int.Int32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))) -}
832fa29199e5d6f1a18340130e69b50b
  $fBitsInt85 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Types.Int)>_N)) -}
4097496114948c7c61da942f611ee1a1
  $fBitsInt86 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int32
                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                      (Data.Array.Accelerate.Smart.PrimApp
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ GHC.Types.Bool
                         @ (GHC.Int.Int32, GHC.Int.Int32)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                         Data.Array.Accelerate.Array.Sugar.$fEltBool
                         Data.Array.Accelerate.Data.Bits.$fBitsInt89
                         (Data.Array.Accelerate.Smart.Tuple
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (GHC.Int.Int32, GHC.Int.Int32)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                            Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (((), GHC.Int.Int32), GHC.Int.Int32)
                               @ GHC.Int.Int32
                               @ ((), GHC.Int.Int32)
                               @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt32
                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ ((), GHC.Int.Int32)
                                  @ GHC.Int.Int32
                                  @ ()
                                  @~ <((), GHC.Int.Int32)>_N
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                  (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                     @ Data.Array.Accelerate.Smart.Exp)
                                  w)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt88
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Tuple
                               <Data.Array.Accelerate.Smart.Exp>_R
                               (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                         <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                       GHC.Int.Int32)>_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt87
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt88
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Int.Int32
                      @ (GHC.Int.Int32, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltInt32
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl198
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Int.Int32, GHC.Types.Int)
                         Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                         Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Int.Int32), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Int.Int32)
                            @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Int.Int32)
                               @ GHC.Int.Int32
                               @ ()
                               @~ <((), GHC.Int.Int32)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt32
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w)
                            w1)
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)) -}
5740f346d48d10c754b789ef43cf718e
  $fBitsInt87 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int32
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt7) -}
b54c8d3b06afc10ec6272a42b1157cdf
  $fBitsInt88 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int32
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt9) -}
beff89cd3a15bd4f9161fee089c123d0
  $fBitsInt89 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool)
                   @ GHC.Int.Int32
                   @~ <(GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt32_$cscalarType) -}
3144c39d5c46b11a7c1fb241ae17b5b7
  $fBitsInt8_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt197
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
5c122057f6bee12d2676ea5997eb4153
  $fBitsInt8_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt196
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
e5d26d63c117da691d580e0e88d67b3e
  $fBitsInt8_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt174
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
8e2a9654845bab2b6999b1bce4a4dd83
  $fBitsInt8_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt171
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
3a7e2fdc1cd70900775126288e25e1f3
  $fBitsInt8_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt194
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
e65d52a2eca396325b4c98535f04da4b
  $fBitsInt8_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt170
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
dd727f6e83a0102ef3287eac4963d849
  $fBitsInt8_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt165
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
69e20de039afe662c5949da7a43dbcf9
  $fBitsInt8_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt152
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
ed1d808b3baef3e74dcfbbe518ae7164
  $fBitsInt8_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate12
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Int.Int8
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) }) -}
ac5d1e5290050262c039d2a9935147c6
  $fBitsInt8_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt154
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
37f2e57ef5c489e3da50652e7aac1abb
  $fBitsInt8_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt153
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
4219384f87b0dd050057cc7fdb2a9086
  $fBitsInt8_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt173
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
f2ea701cc01ffb0944583991b4be7dc6
  $fBitsInt8_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt193
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
bd53683579eb0773f5b53ad83d15f5f1
  $fBitsInt8_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt164
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
dded531751638fd1ff84cd98c0f8abeb
  $fBitsInt8_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt156
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
7cf30f99a80333a89ec88b903649fac2
  $fBitsInt8_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt166
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
3e7a1f7f819caca4e20b0f64079b93b9
  $fBitsInt8_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt163
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
20a38ab85e8d394b56b79873823396c2
  $fBitsInt8_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt155
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
0cf36b32d36eea1925c13c8caf248e1b
  $fBitsInt8_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt195
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
9e7647a21697e5362d40fb9defbe5fe2
  $fBitsInt8_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt175
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) -}
d60f65df2f458ce72cad6f1371af7409
  $fBitsInt8_lvl1 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt (GHC.Int.Int8, GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int8
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8) -}
c44eed8b6f6a487017eda2c3ebf9002b
  $fBitsInt8_lvl10 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word8, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word8
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
8ca73d6778966280401229a1cd9e4ada
  $fBitsInt8_lvl11 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word8, GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8) -}
6f4fd46471316051799721c958880936
  $fBitsInt8_lvl12 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType) -}
222d009990f19a6f1784926c8ba1f984
  $fBitsInt8_lvl13 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word8, GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8) -}
799b76801854bd34920a414b565d332a
  $fBitsInt8_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt (GHC.Int.Int8, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int8
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
b19dfee39ddf82bd1907fd8a52423aea
  $fBitsInt8_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType) -}
89ef3de9b159c243053f67ef3898c5f0
  $fBitsInt8_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt (GHC.Int.Int8, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Int.Int8
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
cdf57660f5151cabd4029353e719d9c1
  $fBitsInt8_lvl2 ::
    Data.Array.Accelerate.Array.Sugar.Elt (GHC.Int.Int8, GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Int.Int8
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8) -}
6ef3fc25629d2890b5d190e2c8f81713
  $fBitsInt8_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Types.Int) -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType) -}
96789d388224d05221230ee98396c920
  $fBitsInt8_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType) -}
fe92bdfd3da073917394a310f56428b7
  $fBitsInt8_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType) -}
168a6fa6a72901550a82073bd873eb89
  $fBitsInt8_lvl6 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8)
                   @ GHC.Int.Int8
                   @~ <(GHC.Int.Int8, GHC.Int.Int8) -> GHC.Int.Int8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType) -}
ccd7a3cc76e3d8787fa479fc6c28b65a
  $fBitsInt8_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType) -}
bc836ac27f532c1cb4b3b2d475892a93
  $fBitsInt8_lvl8 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Word.Word8, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Word.Word8
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
3d374e2472988c874034619c90c4cff4
  $fBitsInt8_lvl9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType) -}
f865632b2ed052c472dfd1f9249d82b2
  $fBitsInt9 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimLt
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool>_N
                   Data.Array.Accelerate.Type.$fIsScalarInt_$cscalarType) -}
eeef96bada0d41254b9ecfc2d2525aac
  $fBitsInt90 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl3
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Types.Int)>_N)) -}
e7ccc7fc26d12a75b09415dadfa1e43c
  $fBitsInt91 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt88
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Int.Int32, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Int.Int32
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int32
                       @ (GHC.Int.Int32, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltInt32
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32)
                          @ GHC.Int.Int32
                          @~ <(GHC.Int.Int32, GHC.Types.Int) -> GHC.Int.Int32>_N
                          Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Int.Int32, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Int.Int32
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltInt32
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Int.Int32), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Int.Int32)
                             @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Int.Int32)
                                @ GHC.Int.Int32
                                @ ()
                                @~ <((), GHC.Int.Int32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))) -}
d7b2f434d16b389022f01c17006e351c
  $fBitsInt92 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt15) -}
5413cabed964061ab82741fb1497f014
  $fBitsInt93 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Int.Int32)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Classes.Eq.$fEqInt32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqInt32_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt32_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqInt32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int32
                               @ (GHC.Int.Int32, GHC.Int.Int32)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                               Data.Array.Accelerate.Array.Sugar.$fEltInt32
                               Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl4
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Int.Int32, GHC.Int.Int32)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Int.Int32), GHC.Int.Int32)
                                     @ GHC.Int.Int32
                                     @ ((), GHC.Int.Int32)
                                     @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Int.Int32)
                                        @ GHC.Int.Int32
                                        @ ()
                                        @~ <((), GHC.Int.Int32)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Int.Int32
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt88
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Int.Int32
                                           @ (GHC.Int.Int32, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl3
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Int.Int32, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Int.Int32), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Int.Int32)
                                                 @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt94
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                             GHC.Int.Int32)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsInt88
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
37862d6e0428f5bf2a5bfc4932458365
  $fBitsInt94 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @ ()
                   @~ <((), GHC.Int.Int32)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt95
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)) -}
80376b36254d3ce06094fadb48600ead
  $fBitsInt95 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Int.Int32
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt19) -}
e8186792aaa23d516288862f8cf56cf5
  $fBitsInt96 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt91
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int32
                               Data.Array.Accelerate.Array.Sugar.$fEltInt32
                               (GHC.Int.I32# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
2015b8682b52eb7eab1fc148ce649578
  $fBitsInt97 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Int.Int32
                            @ GHC.Int.Int32
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            Data.Array.Accelerate.Data.Bits.$fBitsInt98
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int32
                               Data.Array.Accelerate.Array.Sugar.$fEltInt32
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCInt11
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt88
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Int.Int32
                                  @ (GHC.Int.Int32, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt32
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl3
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Int.Int32, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Int.Int32), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Int.Int32)
                                        @~ <(((), GHC.Int.Int32), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt94
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Int.Int32>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
01e025f86f88c442d770059e2359fbf5
  $fBitsInt98 ::
    Data.Array.Accelerate.AST.PrimFun (GHC.Int.Int32 -> GHC.Int.Int32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Int.Int32 -> GHC.Int.Int32)
                   @ GHC.Int.Int32
                   @~ <GHC.Int.Int32 -> GHC.Int.Int32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType) -}
603982367bca14ad425a27a9067b7064
  $fBitsInt99 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Int.Int32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Int.Int32
                   @ (GHC.Int.Int32, GHC.Int.Int32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl6
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Int.Int32, GHC.Int.Int32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl2
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl1
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Int.Int32), GHC.Int.Int32)
                         @ GHC.Int.Int32
                         @ ((), GHC.Int.Int32)
                         @~ <(((), GHC.Int.Int32), GHC.Int.Int32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Int.Int32)
                            @ GHC.Int.Int32
                            @ ()
                            @~ <((), GHC.Int.Int32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsInt91
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Int.Int32
                               Data.Array.Accelerate.Array.Sugar.$fEltInt32
                               (GHC.Int.I32# 1#))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Int.Int32>_N <GHC.Int.Int32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Int.Int32,
                                                                 GHC.Int.Int32)>_N)) -}
4b74e247221e04e447eaa701a6aa99f3
  $fBitsInt_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt45
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
39825bb49ac7137aa5aa721a2e5af540
  $fBitsInt_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt44
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
71dc827608f395df8f42fa62feb842af
  $fBitsInt_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt21
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
df10b0ad438d726318182226f2b7b099
  $fBitsInt_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
8558cd677a4cf8137ef19cb8055f96d2
  $fBitsInt_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt42
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
35316e7ff55dbbc0f9cfe1a2bad9cba8
  $fBitsInt_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
93aad43cebcc772fc72e166b7a2207f4
  $fBitsInt_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
225f18be0bf726cfb9c2de8aeaa96b09
  $fBitsInt_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
8113f5e3a59affd6c5e53df447cafa47
  $fBitsInt_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate8
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Types.Int
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) }) -}
0ed85bf82e1f3ba4a61280686aed0b39
  $fBitsInt_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
1bfee409fc955eae819782ca4dd6ef34
  $fBitsInt_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
e8e331027657756b6f09d7d41336e99a
  $fBitsInt_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
d9a36b1bb712838e36f6420dff12e385
  $fBitsInt_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt41
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
2ee2aca18a570bc191a2be5b14ec661c
  $fBitsInt_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
00b8682ed8c6ac155733ff6b1a110f14
  $fBitsInt_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
b680b44424902dbb128449f0420d34cb
  $fBitsInt_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1391c75d2976601b06d98965e8d72aee
  $fBitsInt_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
9d987978d6da7cc24c1fd2062689b0fa
  $fBitsInt_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
3ebbd3d9ea1f48caf04c9da94efaf7c6
  $fBitsInt_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt43
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
d0a5dc1bb03848583307a99d7bf3ba67
  $fBitsInt_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt22
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
a124037af8f0006336e26f530cc6496a
  $fBitsInt_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType) -}
6216aaa747b4676b9874114a229a1de8
  $fBitsInt_lvl196 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Word, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Word
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
6152b80c61add0cf58b2875d450be80f
  $fBitsInt_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType) -}
ecb0ef7c400c07c368048fc2d87c6173
  $fBitsInt_lvl199 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Word, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Word
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltInt) -}
181232eaf9690c81f8ffbf785bf63b85
  $fBitsInt_lvl2 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType) -}
b090f79b73ca94a875731a915867663c
  $fBitsInt_lvl3 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int)
                   @ GHC.Types.Int
                   @~ <(GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Int>_N
                   Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType) -}
6bf763dd48d1a104a23053273b77402b
  $fBitsInt_lvl4 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftR
                   @ ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType) -}
5862d59b356dbed368fbe6abf7cd889c
  $fBitsInt_lvl5 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBShiftL
                   @ ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType) -}
f1d2b207ba7a87b86e0fd8a32d7ad7f9
  $fBitsInt_lvl6 ::
    Data.Array.Accelerate.Product.IsProduct
      Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Word, GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.Product.$fIsProductcst(,)
                   @ Data.Array.Accelerate.Array.Sugar.Elt
                   @ GHC.Types.Word
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltWord) -}
673fd07665dc1e516cf2c562d38ecf52
  $fBitsInt_lvl7 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBOr
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType) -}
80e496e8423a3f3e66bc382d60878b2f
  $fBitsInt_lvl8 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (GHC.Types.Word, GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.$fElt(,)
                   @ GHC.Types.Word
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltWord) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsWord :: Data.Array.Accelerate.Data.Bits.Bits GHC.Types.Word
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Word
                  Data.Array.Accelerate.Classes.Eq.$fEqWord
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord_$cpopCount -}
f158226407f7f980417aab6cf9d03236
  $fBitsWord1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Types.Word -> GHC.Types.Int)
                      @ GHC.Types.Word
                      @~ <GHC.Types.Word -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                   x) -}
f5fea9a00abea94704c28965711448d2
  $fBitsWord10 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt10
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Types.Word, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Types.Word
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       @ (GHC.Types.Word, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
                          @ GHC.Types.Word
                          @~ <(GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Word, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Types.Word
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Word), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Word)
                             @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Word)
                                @ GHC.Types.Word
                                @ ()
                                @~ <((), GHC.Types.Word)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))) -}
8a2d3091eacbcf22527a63b98fde3021
  $fBitsWord100 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
524f48fede39273d5bda64a05eaf837b
  $fBitsWord101 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
8647e1cd6a32ff06f9de33b58e6804fb
  $fBitsWord102 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
42e3c33d82c4dd0af8d2970f6bc8201c
  $fBitsWord103 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Word.Word64 -> GHC.Types.Int)
                      @ GHC.Word.Word64
                      @~ <GHC.Word.Word64 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                   x) -}
12375043bb7d51be9023c8b878bc14e2
  $fBitsWord104 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word64, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word64
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       @ (GHC.Word.Word64, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
                          @ GHC.Word.Word64
                          @~ <(GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word64, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word64
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord64
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word64), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word64)
                             @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word64)
                                @ GHC.Word.Word64
                                @ ()
                                @~ <((), GHC.Word.Word64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))) -}
f84b9dd898854e098f79448d5d5cab59
  $fBitsWord105 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word64, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word64
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       @ (GHC.Word.Word64, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
                          @ GHC.Word.Word64
                          @~ <(GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word64, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word64
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord64
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word64), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word64)
                             @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word64)
                                @ GHC.Word.Word64
                                @ ()
                                @~ <((), GHC.Word.Word64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))) -}
620161654afa9440fa27c967406c711b
  $fBitsWord106 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Types.Int)>_N)) -}
c70f24ac37349245345c94b500b7ae21
  $fBitsWord107 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord108
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word64, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word64
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       @ (GHC.Word.Word64, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
                          @ GHC.Word.Word64
                          @~ <(GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word64, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word64
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord64
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word64), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word64)
                             @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word64)
                                @ GHC.Word.Word64
                                @ ()
                                @~ <((), GHC.Word.Word64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))) -}
07daecf493eaa8d355a6bfc68b40b038
  $fBitsWord108 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong7) -}
19c24dfc2cd3edb416c50eb199ab718e
  $fBitsWord109 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Types.Int)>_N)) -}
aee34c07d1f1cc4976c2de771662ab14
  $fBitsWord11 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
06713ea2cb76340ff6c1ff3c79c31303
  $fBitsWord110 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord108
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word64, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word64
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       @ (GHC.Word.Word64, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64)
                          @ GHC.Word.Word64
                          @~ <(GHC.Word.Word64, GHC.Types.Int) -> GHC.Word.Word64>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word64, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word64
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord64
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word64), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word64)
                             @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word64)
                                @ GHC.Word.Word64
                                @ ()
                                @~ <((), GHC.Word.Word64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))) -}
b9227ba3e074ea3e5bf7bca3a0a24ce5
  $fBitsWord111 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
68b4df3f3ec6544a6adc5df42fcfbc29
  $fBitsWord112 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Word.Word64)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqWord64_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word64
                               @ (GHC.Word.Word64, GHC.Word.Word64)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                               Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Word.Word64, GHC.Word.Word64)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Word.Word64), GHC.Word.Word64)
                                     @ GHC.Word.Word64
                                     @ ((), GHC.Word.Word64)
                                     @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Word.Word64)
                                        @ GHC.Word.Word64
                                        @ ()
                                        @~ <((), GHC.Word.Word64)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Word.Word64
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord108
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Word.Word64
                                           @ (GHC.Word.Word64, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl9
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Word.Word64, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Word.Word64), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Word.Word64)
                                                 @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord113
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <GHC.Word.Word64>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                             GHC.Word.Word64)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsWord108
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
fc0597a979e1aa965788f1aff08e2419
  $fBitsWord113 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @ ()
                   @~ <((), GHC.Word.Word64)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord114
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
feca038d9a73dee14c78dec185766886
  $fBitsWord114 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong15) -}
f4fa13bc477af82a4d51ef731178dec0
  $fBitsWord115 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord110
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word64
                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                               (GHC.Word.W64# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
8312bfc416952a651258798eeb013b4a
  $fBitsWord116 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Word.Word64
                            @ GHC.Word.Word64
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            Data.Array.Accelerate.Data.Bits.$fBitsWord117
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word64
                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsWord108
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word64
                                  @ (GHC.Word.Word64, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl9
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Word.Word64, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Word.Word64), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Word.Word64)
                                        @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord113
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
c3bc282f4348b1396e5676cb20569b9f
  $fBitsWord117 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word64 -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Word.Word64 -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <GHC.Word.Word64 -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType) -}
41e567d61f8d7ea4c8731032b0e11050
  $fBitsWord118 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord110
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word64
                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                               (GHC.Word.W64# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
ee2e7e603803cd4e299e4622a8574785
  $fBitsWord119 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsWord110
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word64
                      Data.Array.Accelerate.Array.Sugar.$fEltWord64
                      (GHC.Word.W64# 1##))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                   eta) -}
cdd9165b119619a175bd240417a3818d
  $fBitsWord12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Types.Word)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Classes.Eq.$fEqWord_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqWord_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Classes.Eq.$fEqWord_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqWord_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Word
                               @ (GHC.Types.Word, GHC.Types.Word)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                               Data.Array.Accelerate.Array.Sugar.$fEltWord
                               Data.Array.Accelerate.Data.Bits.$fBitsWord_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Types.Word, GHC.Types.Word)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Types.Word), GHC.Types.Word)
                                     @ GHC.Types.Word
                                     @ ((), GHC.Types.Word)
                                     @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Types.Word)
                                        @ GHC.Types.Word
                                        @ ()
                                        @~ <((), GHC.Types.Word)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Types.Word
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsInt10
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord6
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Word
                                           @ (GHC.Types.Word, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl5
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Word, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Word), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Word)
                                                 @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord13
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <GHC.Types.Word>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                             GHC.Types.Word)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsWord6
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
a9ec2dbc2abc901a3d4042ec769e401f
  $fBitsWord120 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsWord121
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
9662fe5da2f9d0f87172b7164947e17b
  $fBitsWord121 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word64, GHC.Word.Word64)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsWord122
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R) -}
e44453bac031405fe355983d1d796ebe
  $fBitsWord122 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word64), GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word64), GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @ ((), GHC.Word.Word64)
                   @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsWord128
                   Data.Array.Accelerate.Data.Bits.$fBitsWord123
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
9cd3c035d16bff69a233161c02ab0e7b
  $fBitsWord123 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsWord117
                   Data.Array.Accelerate.Data.Bits.$fBitsWord124
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
60e92a455752bb170648c999fa899d20
  $fBitsWord124 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsCULLong29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord108
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord125
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
edabaa1dc98454c44a647e0ae70744ca
  $fBitsWord125 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word64
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsWord126
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Types.Int)>_N)) -}
eb21cc02c1fb4b7128f5979c0054ffae
  $fBitsWord126 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word64, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word64, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord127
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R) -}
291c4d23c139585e4fa5c7fe6f0d9ee1
  $fBitsWord127 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word64), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word64), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Word.Word64)
                   @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsWord113
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
0d20222057be9bcbaf1fb89898687606
  $fBitsWord128 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @ ()
                   @~ <((), GHC.Word.Word64)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord124
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)) -}
48388c6518a74695ab5695f5fd59a977
  $fBitsWord129 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word64 -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word64 -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @ GHC.Word.Word64
                   @~ <GHC.Word.Word64 -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord64_$cscalarType) -}
d22d80cfec9c9a2b19f30d35a2fecb9e
  $fBitsWord13 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Word)
                   @ GHC.Types.Word
                   @ ()
                   @~ <((), GHC.Types.Word)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord14
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)) -}
c3fd2b385087e7f4d06cc1ff38b90143
  $fBitsWord130 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault7
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
0b101b5753ba0e96e76d71a812981b70
  $fBitsWord131 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Word.Word64 -> GHC.Word.Word64)
                      @ GHC.Word.Word64
                      @~ <GHC.Word.Word64 -> GHC.Word.Word64>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                   x) -}
524a37e443a075ab6d160169718b5f98
  $fBitsWord132 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
fe5c02e33308ad15bfdc2a3c16558fc5
  $fBitsWord133 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
edabe57aa36e624b03af81c44a33e1ff
  $fBitsWord134 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word64
                   @ (GHC.Word.Word64, GHC.Word.Word64)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Data.Bits.$fBitsWord64_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word64, GHC.Word.Word64)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word64), GHC.Word.Word64)
                         @ GHC.Word.Word64
                         @ ((), GHC.Word.Word64)
                         @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord64
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word64)
                            @ GHC.Word.Word64
                            @ ()
                            @~ <((), GHC.Word.Word64)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                 GHC.Word.Word64)>_N)) -}
b69ba9a9888ea39645878edbb7d23645
  $fBitsWord135 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Word.Word8 -> GHC.Types.Int)
                      @ GHC.Word.Word8
                      @~ <GHC.Word.Word8 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                   x) -}
f5cb38b120bc9b2342e0446a0e40bb87
  $fBitsWord136 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word8, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word8
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       @ (GHC.Word.Word8, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
                          @ GHC.Word.Word8
                          @~ <(GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word8, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word8
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord8
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word8), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word8)
                             @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word8)
                                @ GHC.Word.Word8
                                @ ()
                                @~ <((), GHC.Word.Word8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))) -}
f19ccee06dcf7e9d869617b0c4789618
  $fBitsWord137 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word8, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word8
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       @ (GHC.Word.Word8, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
                          @ GHC.Word.Word8
                          @~ <(GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word8, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word8
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord8
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word8), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word8)
                             @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word8)
                                @ GHC.Word.Word8
                                @ ()
                                @~ <((), GHC.Word.Word8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))) -}
a346cb937b8a0ae64735b359fc339ceb
  $fBitsWord138 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Types.Int)>_N)) -}
9f603bf9e5b74624548378accbb5f13d
  $fBitsWord139 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsWord142
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord140
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word8, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word8
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       @ (GHC.Word.Word8, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
                          @ GHC.Word.Word8
                          @~ <(GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word8, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word8
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord8
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word8), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word8)
                             @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word8)
                                @ GHC.Word.Word8
                                @ ()
                                @~ <((), GHC.Word.Word8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))) -}
1d228b19e7fe99ba561080c9a4c9f97d
  $fBitsWord14 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Word
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord15) -}
5f9d5f1defdcf5dd71d8f29540a17a34
  $fBitsWord140 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word8
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord141) -}
caf37a8390fa20f5a68716f8843d4e73
  $fBitsWord141 :: GHC.Word.Word8
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Word.W8# 0##) -}
82a4036c53a3124eb9b3b3390c1a0d05
  $fBitsWord142 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   GHC.Word.$fBitsWord7) -}
65c2480578492f0cd8715c1892353004
  $fBitsWord143 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Types.Int)>_N)) -}
25e74a62ebea192b2dd6ca1849b2780a
  $fBitsWord144 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsWord142
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord140
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word8, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word8
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord8
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       @ (GHC.Word.Word8, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8)
                          @ GHC.Word.Word8
                          @~ <(GHC.Word.Word8, GHC.Types.Int) -> GHC.Word.Word8>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word8, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word8
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord8
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word8), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word8)
                             @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word8)
                                @ GHC.Word.Word8
                                @ ()
                                @~ <((), GHC.Word.Word8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))) -}
c0ce9b7605a54527643e52caf3c41195
  $fBitsWord145 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
f1e74c420685b025807ccb5d7248a8d6
  $fBitsWord146 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Word.Word8)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqWord8_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word8
                               @ (GHC.Word.Word8, GHC.Word.Word8)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltWord8
                               Data.Array.Accelerate.Data.Bits.$fBitsWord8_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Word.Word8, GHC.Word.Word8)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Word.Word8), GHC.Word.Word8)
                                     @ GHC.Word.Word8
                                     @ ((), GHC.Word.Word8)
                                     @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Word.Word8)
                                        @ GHC.Word.Word8
                                        @ ()
                                        @~ <((), GHC.Word.Word8)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Word.Word8
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord142
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord140
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Word.Word8
                                           @ (GHC.Word.Word8, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl9
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Word.Word8, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Word.Word8), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Word.Word8)
                                                 @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord147
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <GHC.Word.Word8>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                             GHC.Word.Word8)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsWord140
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
f86c4be5b98217161b41f45097b54041
  $fBitsWord147 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @ ()
                   @~ <((), GHC.Word.Word8)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord148
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)) -}
1a66ed49927f64bec3094a1367a9462a
  $fBitsWord148 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word8
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord149) -}
6605071041ea54beba2c2cf4e513035a
  $fBitsWord149 :: GHC.Word.Word8
  {- HasNoCafRefs, Unfolding: (GHC.Word.W8# 1##) -}
33763aceffa9da970679c2b5bb5c45a8
  $fBitsWord15 :: GHC.Types.Word
  {- HasNoCafRefs, Unfolding: (GHC.Types.W# 1##) -}
be13f32c964fa6a8acab031fde85a060
  $fBitsWord150 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord8_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord144
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word8
                               Data.Array.Accelerate.Array.Sugar.$fEltWord8
                               (GHC.Word.W8# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
76540bdc9b187757a8b284791a3eeb5e
  $fBitsWord151 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord8_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Word.Word8
                            @ GHC.Word.Word8
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            Data.Array.Accelerate.Data.Bits.$fBitsWord152
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word8
                               Data.Array.Accelerate.Array.Sugar.$fEltWord8
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord142
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsWord140
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word8
                                  @ (GHC.Word.Word8, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl9
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Word.Word8, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Word.Word8), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Word.Word8)
                                        @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord147
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
07dee583ee81834577ed4dce9520b694
  $fBitsWord152 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word8 -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Word.Word8 -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <GHC.Word.Word8 -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType) -}
ca378fae1fe54716260ff49a9a2dea97
  $fBitsWord153 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord144
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word8
                               Data.Array.Accelerate.Array.Sugar.$fEltWord8
                               (GHC.Word.W8# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
5cd342f5654215299dba94879b56cfa4
  $fBitsWord154 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsWord144
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word8
                      Data.Array.Accelerate.Array.Sugar.$fEltWord8
                      (GHC.Word.W8# 1##))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                   eta) -}
327e853428967bd4ef47b93c11e1aa5d
  $fBitsWord155 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word8
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord8_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsWord156
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
80937b9afea3e217b5eaa3e7dface648
  $fBitsWord156 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word8, GHC.Word.Word8)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsWord157
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R) -}
fb4c6a5eb9574b96ce0a41b2211bf6d9
  $fBitsWord157 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word8), GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word8), GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @ ((), GHC.Word.Word8)
                   @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord166
                   Data.Array.Accelerate.Data.Bits.$fBitsWord158
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)) -}
7a0960de3f0394624ea7aed4b7d94fdc
  $fBitsWord158 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word8
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord152
                   Data.Array.Accelerate.Data.Bits.$fBitsWord159
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)) -}
279e9814ed7147527f86b69bbd7ce1ec
  $fBitsWord159 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word8
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord163
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord140
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord160
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsWord16 ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word16
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word16
                  Data.Array.Accelerate.Classes.Eq.$fEqWord16
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord16_$cpopCount -}
6df536970748c2f7d1121a89fd79da3e
  $fBitsWord160 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word8
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsWord161
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Types.Int)>_N)) -}
163aee1fbdcc324cec8f213954e2520d
  $fBitsWord161 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word8, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word8, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord162
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R) -}
6c1c8327e55e24615ca5b29f163fc04e
  $fBitsWord162 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word8), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word8), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Word.Word8)
                   @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsWord147
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
8a7235057e5d1d91a64a9330d40227a0
  $fBitsWord163 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Bool
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                   Data.Array.Accelerate.Data.Bits.$fBitsWord164
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
603a855d1f77710d8bbc032d57b395ed
  $fBitsWord164 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                   Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsWord165
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
8459c3761b184f52aabadec5c2ad0ff1
  $fBitsWord165 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsBool17
                   Data.Array.Accelerate.Data.Bits.$fBitsWord142
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
7e407f16dd12a78ec993e3b93acc2c47
  $fBitsWord166 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @ ()
                   @~ <((), GHC.Word.Word8)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord159
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)) -}
d77efed9a77d46054255a3e45aebbe18
  $fBitsWord167 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ()
                   @~ <((), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord142
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
86c8be52d8f46ee70e860f346ec4ba6c
  $fBitsWord168 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word8 -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word8 -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   @~ <GHC.Word.Word8 -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord8_$cscalarType) -}
a4f3839b3aebdf27fafabe887a976229
  $fBitsWord169 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                   Data.Array.Accelerate.Data.Bits.$fBitsWord170
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                 GHC.Types.Int)>_N)) -}
36e2bc78a47134028da3b68897db022d
  $fBitsWord16_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord70
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
8b769bae19f8d53b4b2029a0587d06c5
  $fBitsWord16_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord69
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
f0834c5d4cae582e2b53fee0a32b85c0
  $fBitsWord16_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord54
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
402d8c9d2133975a829c442b97ae09d4
  $fBitsWord16_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord51
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
4caa74cdd4369982971574dbe952f558
  $fBitsWord16_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord67
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
77a7882809d394590f0921c52c719cfd
  $fBitsWord16_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord50
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
81647b7e8a8e571fc5750c478d053930
  $fBitsWord16_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord46
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
84c53e2e3dee65d0b62d273f55378a32
  $fBitsWord16_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord38
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
532917e4f477ad23badac3f446af56a6
  $fBitsWord16_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate14
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Word.Word16
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) }) -}
1b57054e411f6669c0d8bfcfc7684824
  $fBitsWord16_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord40
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
81b1cd4f68aff87b1e911b3286b52747
  $fBitsWord16_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord39
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
be1c7d882ca0406d539cf8eebe824efa
  $fBitsWord16_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord53
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
0c9e2d48533db9a96c5ff8dabbda8902
  $fBitsWord16_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord66
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
1a69f485c9c32a0ad552c8795cdf68ed
  $fBitsWord16_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord45
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
f03f9f9b4e4b2219f45bc093feaf1d0d
  $fBitsWord16_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord42
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
95d8df9836cd9837088608cfbaee5c5f
  $fBitsWord16_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord47
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
0be466dbfb0784e5beec34d10a75619d
  $fBitsWord16_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord44
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
16b5b29605d199d2746d29de006738cb
  $fBitsWord16_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord41
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
84d5b74d81bd549c060fb1d10c5dc2c8
  $fBitsWord16_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord68
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
5d50e89ec375ff87637b0c1d3f12118b
  $fBitsWord16_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord55
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) -}
f02ec5bdd4e02faff7c2fddb745feb2f
  $fBitsWord16_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType) -}
ff0369e858a322ee4e3626bb92cc9113
  $fBitsWord16_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <(GHC.Word.Word16, GHC.Word.Word16) -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType) -}
d36464110138add5d71fade157a1dfb7
  $fBitsWord17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Word
                               Data.Array.Accelerate.Array.Sugar.$fEltWord
                               (GHC.Types.W# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
36de5d93b0df8d912606620349c4f334
  $fBitsWord170 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Int, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Int, GHC.Types.Int)
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                   Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsWord171
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R) -}
e4a57c5a7937d2e3741660e5619a5e78
  $fBitsWord171 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Int), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Int), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Int)
                   @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsWord167
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
8c24c9d883ba32d13e384c913dedb147
  $fBitsWord172 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault8
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
c2a480360e01056de9b82a317ca4e5d3
  $fBitsWord173 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Word.Word8 -> GHC.Word.Word8)
                      @ GHC.Word.Word8
                      @~ <GHC.Word.Word8 -> GHC.Word.Word8>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                   x) -}
301a516dbe4748a4319b1a5b0192af93
  $fBitsWord174 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord8_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
1723380eb18180035c0dcc3dcf83dce8
  $fBitsWord175 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
49827c4cae37156bd50a301f178f951c
  $fBitsWord176 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word8
                   @ (GHC.Word.Word8, GHC.Word.Word8)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord8_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word8, GHC.Word.Word8)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word8), GHC.Word.Word8)
                         @ GHC.Word.Word8
                         @ ((), GHC.Word.Word8)
                         @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord8
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word8)
                            @ GHC.Word.Word8
                            @ ()
                            @~ <((), GHC.Word.Word8)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                 GHC.Word.Word8)>_N)) -}
1551ba996caec5164ceb38390db9db1d
  $fBitsWord18 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Types.Word
                            @ GHC.Types.Word
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            Data.Array.Accelerate.Data.Bits.$fBitsWord19
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Word
                               Data.Array.Accelerate.Array.Sugar.$fEltWord
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsInt10
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsWord6
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Word
                                  @ (GHC.Types.Word, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl5
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Word, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Word), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Word)
                                        @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord13
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
1e8ec03688027775f43bfaeb2c1cf947
  $fBitsWord19 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Word -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Types.Word -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <GHC.Types.Word -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType) -}
8d30fbf7b3de90fd4ef72c2ac60117a2
  $fBitsWord2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Types.Word, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Types.Word
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       @ (GHC.Types.Word, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
                          @ GHC.Types.Word
                          @~ <(GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Word, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Types.Word
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Word), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Word)
                             @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Word)
                                @ GHC.Types.Word
                                @ ()
                                @~ <((), GHC.Types.Word)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))) -}
821ea63dfec06a38cb6835ee19a17acb
  $fBitsWord20 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord10
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Types.Word
                               Data.Array.Accelerate.Array.Sugar.$fEltWord
                               (GHC.Types.W# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
ce79036d3670a7a42b2790dd3b8c4c18
  $fBitsWord21 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsWord10
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Word
                      Data.Array.Accelerate.Array.Sugar.$fEltWord
                      (GHC.Types.W# 1##))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                   eta) -}
a492714bb02acfa6213d93dc9d1bcfaf
  $fBitsWord22 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Word
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsWord23
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
121b35052fb855e64edf51faa6b211ff
  $fBitsWord23 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Word, GHC.Types.Word)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                   Data.Array.Accelerate.Data.Bits.$fBitsWord24
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R) -}
910f42785fabecd1e360cd1e77525b85
  $fBitsWord24 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Word), GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Word), GHC.Types.Word)
                   @ GHC.Types.Word
                   @ ((), GHC.Types.Word)
                   @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord30
                   Data.Array.Accelerate.Data.Bits.$fBitsWord25
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)) -}
641ecdfad637a41347a9b49f03946545
  $fBitsWord25 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Word
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord19
                   Data.Array.Accelerate.Data.Bits.$fBitsWord26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)) -}
55f2d8066d46fd983ae4dd97466c05a3
  $fBitsWord26 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Word
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsInt30
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord27
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)) -}
4a628f95ea6cb13c816dc81f7e76a14d
  $fBitsWord27 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Word
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl5
                   Data.Array.Accelerate.Data.Bits.$fBitsWord28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Int)>_N)) -}
0d98cfbdd95856ead1f4fe3a48f1af87
  $fBitsWord28 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Types.Word, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Types.Word, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                   Data.Array.Accelerate.Data.Bits.$fBitsWord29
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R) -}
e5916313c316c10e7293be0f71f9b548
  $fBitsWord29 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Types.Word), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Types.Word), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Types.Word)
                   @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsWord13
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
9e8407f0ee3f1dbdf0c1e5956d33f8fd
  $fBitsWord3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Types.Word, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Types.Word
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       @ (GHC.Types.Word, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
                          @ GHC.Types.Word
                          @~ <(GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Word, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Types.Word
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Word), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Word)
                             @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Word)
                                @ GHC.Types.Word
                                @ ()
                                @~ <((), GHC.Types.Word)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))) -}
0edc7df9a3da2763f839cf51f0879b5f
  $fBitsWord30 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Types.Word)
                   @ GHC.Types.Word
                   @ ()
                   @~ <((), GHC.Types.Word)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord26
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)) -}
7c26d9020eb49490b02487f25c4afeb1
  $fBitsWord31 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Types.Word -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Types.Word -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @ GHC.Types.Word
                   @~ <GHC.Types.Word -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord_$cscalarType) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsWord32 ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word32
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word32
                  Data.Array.Accelerate.Classes.Eq.$fEqWord32
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord32_$cpopCount -}
3a673440813a1d0cc6b416d17b4200cb
  $fBitsWord32_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord102
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
efc040c4d9494451a6fe403cc1ed2fa0
  $fBitsWord32_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord101
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
2000ec6f1a19ed40cc0bc796c757c53b
  $fBitsWord32_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord87
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
184cbf69e99cec81ceec1d4ea63357be
  $fBitsWord32_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord84
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
89d140d69cd66f09b1fd27b2964254e0
  $fBitsWord32_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord99
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
e9577145aa9b77c92dbdc27a10d5cef1
  $fBitsWord32_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord83
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
f8c9c39f06f933a7d4b18d0dd683e376
  $fBitsWord32_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord79
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
9806eee397839a10a7a0780e8c6fafc5
  $fBitsWord32_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord71
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
4c8faaa79eed266144235471e7f053c0
  $fBitsWord32_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate15
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Word.Word32
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) }) -}
819aa1d8fd3f15e67ecdf6c46f6324ca
  $fBitsWord32_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord73
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
a738b922023bf2e86403de75cb8c92cd
  $fBitsWord32_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord72
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
13f7eed2106f815532747125c90e7249
  $fBitsWord32_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord86
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
399548e382ea05ace576255a158be02e
  $fBitsWord32_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord98
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
0f9c0619169f0d62a79ebb1783fc6713
  $fBitsWord32_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord78
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
bc609b3bc4154b7b5c14acfeaa437d27
  $fBitsWord32_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord75
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
9b9384658246da04998c53d9befa97ac
  $fBitsWord32_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord80
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
8869363467ad2e4e29c89ade468c8ba2
  $fBitsWord32_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord77
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
84a5871313723e65cd3b7b2017538e44
  $fBitsWord32_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord74
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
c672476330f086db1add690ebbf4954b
  $fBitsWord32_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord100
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
514268076053b512ce72dc891fbbdc37
  $fBitsWord32_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord88
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) -}
c1edf004c30319292b68d0c42824bc47
  $fBitsWord32_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType) -}
fa439c093ff6333357b4cc29810e32a2
  $fBitsWord32_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <(GHC.Word.Word32, GHC.Word.Word32) -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType) -}
7422265a2f36a89e6d58ee189a4a91ce
  $fBitsWord33 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault4
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
57f13ef3661d09bb993d000f18b76a21
  $fBitsWord34 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Types.Word -> GHC.Types.Word)
                      @ GHC.Types.Word
                      @~ <GHC.Types.Word -> GHC.Types.Word>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                   x) -}
cb2083dcdeb3654692a4385f43a2470c
  $fBitsWord35 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
3dc771c2bf98b378d4c66ce3a502eebb
  $fBitsWord36 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
7358f268be6febb7d80a4d1c7e78eb47
  $fBitsWord37 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Word)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Word)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Word)
                         @ GHC.Types.Word
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Word)>_N)) -}
3491c0fb3659b236ea177c1f58c36339
  $fBitsWord38 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Word.Word16 -> GHC.Types.Int)
                      @ GHC.Word.Word16
                      @~ <GHC.Word.Word16 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                   x) -}
a81eeee21303d3b89938c3c6c6fbcdf1
  $fBitsWord39 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word16, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word16
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       @ (GHC.Word.Word16, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
                          @ GHC.Word.Word16
                          @~ <(GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word16, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word16
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord16
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word16), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word16)
                             @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word16)
                                @ GHC.Word.Word16
                                @ ()
                                @~ <((), GHC.Word.Word16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))) -}
ad369d9241289c1933973f5e3bb5c920
  $fBitsWord4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl4
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Int)>_N)) -}
e10650238c85744dd2a76a586b917c17
  $fBitsWord40 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word16, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word16
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       @ (GHC.Word.Word16, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
                          @ GHC.Word.Word16
                          @~ <(GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word16, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word16
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord16
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word16), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word16)
                             @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word16)
                                @ GHC.Word.Word16
                                @ ()
                                @~ <((), GHC.Word.Word16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))) -}
fda185b27280018f49f8e4a246095a91
  $fBitsWord41 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Types.Int)>_N)) -}
46545d67962cbbb649954019e0dcbeda
  $fBitsWord42 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word16, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word16
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       @ (GHC.Word.Word16, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
                          @ GHC.Word.Word16
                          @~ <(GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word16, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word16
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord16
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word16), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word16)
                             @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word16)
                                @ GHC.Word.Word16
                                @ ()
                                @~ <((), GHC.Word.Word16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))) -}
76deddd28be2c0fbdc76ed6df639fe19
  $fBitsWord43 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort7) -}
6fda69c9a4c796be157f8472bdcd2c1f
  $fBitsWord44 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Types.Int)>_N)) -}
6a6ab529bb1e39d2f3f076426dd13008
  $fBitsWord45 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word16, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word16
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord16
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       @ (GHC.Word.Word16, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16)
                          @ GHC.Word.Word16
                          @~ <(GHC.Word.Word16, GHC.Types.Int) -> GHC.Word.Word16>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word16, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word16
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord16
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word16), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word16)
                             @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word16)
                                @ GHC.Word.Word16
                                @ ()
                                @~ <((), GHC.Word.Word16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))) -}
14c9cab24a5b02b99c8d71ddfc8768b1
  $fBitsWord46 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
679a564315d6d423e64909465593c33c
  $fBitsWord47 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Word.Word16)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqWord16_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word16
                               @ (GHC.Word.Word16, GHC.Word.Word16)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltWord16
                               Data.Array.Accelerate.Data.Bits.$fBitsWord16_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Word.Word16, GHC.Word.Word16)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Word.Word16), GHC.Word.Word16)
                                     @ GHC.Word.Word16
                                     @ ((), GHC.Word.Word16)
                                     @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Word.Word16)
                                        @ GHC.Word.Word16
                                        @ ()
                                        @~ <((), GHC.Word.Word16)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Word.Word16
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord43
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Word.Word16
                                           @ (GHC.Word.Word16, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl9
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Word.Word16, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Word.Word16), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Word.Word16)
                                                 @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord48
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <GHC.Word.Word16>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                             GHC.Word.Word16)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsWord43
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
bfb5bc118377bb33932dc7129cafedc1
  $fBitsWord48 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @ ()
                   @~ <((), GHC.Word.Word16)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord49
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)) -}
b98dbe6e80de740a4f3c6bbde46df9c9
  $fBitsWord49 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort27) -}
371b0842bcd774a1b2ab7e280f935622
  $fBitsWord5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsInt10
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord6
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Types.Word, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Types.Word
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       @ (GHC.Types.Word, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word)
                          @ GHC.Types.Word
                          @~ <(GHC.Types.Word, GHC.Types.Int) -> GHC.Types.Word>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Word, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Types.Word
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Word), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Word)
                             @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Word)
                                @ GHC.Types.Word
                                @ ()
                                @~ <((), GHC.Types.Word)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))) -}
1528ee9f75b36b69da33bf4ca325c860
  $fBitsWord50 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord16_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord45
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word16
                               Data.Array.Accelerate.Array.Sugar.$fEltWord16
                               (GHC.Word.W16# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
3aaa3fa6052c61b4c69eec386c876b5f
  $fBitsWord51 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Word.Word16
                            @ GHC.Word.Word16
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            Data.Array.Accelerate.Data.Bits.$fBitsWord52
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word16
                               Data.Array.Accelerate.Array.Sugar.$fEltWord16
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsWord43
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word16
                                  @ (GHC.Word.Word16, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl9
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Word.Word16, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Word.Word16), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Word.Word16)
                                        @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord48
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
cab5f1e3da39ff29d26c991fc793ce4e
  $fBitsWord52 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word16 -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Word.Word16 -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @~ <GHC.Word.Word16 -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType) -}
66f4dd17566f76c44c3f83154d815a68
  $fBitsWord53 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord45
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word16
                               Data.Array.Accelerate.Array.Sugar.$fEltWord16
                               (GHC.Word.W16# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
00ae9e0257fe719f5228d92b11362dbf
  $fBitsWord54 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsWord45
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word16
                      Data.Array.Accelerate.Array.Sugar.$fEltWord16
                      (GHC.Word.W16# 1##))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                   eta) -}
009c0e09d7eec76d85944aa4cc1a2bef
  $fBitsWord55 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord16_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsWord56
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
61f1ac8fae725e74bafb7bfdbf77b226
  $fBitsWord56 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word16, GHC.Word.Word16)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsWord57
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R) -}
2bb05534333ed50eae04335a9e1cfda0
  $fBitsWord57 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word16), GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word16), GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @ ((), GHC.Word.Word16)
                   @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord63
                   Data.Array.Accelerate.Data.Bits.$fBitsWord58
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)) -}
eb5474009a88c36c09f3e85e78a5881c
  $fBitsWord58 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord52
                   Data.Array.Accelerate.Data.Bits.$fBitsWord59
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)) -}
49ca90bc259026bf17f2429af3d59b5d
  $fBitsWord59 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsCUShort28
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord60
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)) -}
571673e985a301f24f29e339b2485b98
  $fBitsWord6 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Word
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsWord7) -}
01d9fd7d1d1bbd807f950ba7c4115058
  $fBitsWord60 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word16
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsWord61
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Types.Int)>_N)) -}
17850c087c94e1f6d27c66d3c4ceab74
  $fBitsWord61 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word16, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word16, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord62
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R) -}
637841519bd6a096566b8ff0f335f400
  $fBitsWord62 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word16), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word16), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Word.Word16)
                   @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsWord48
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
a5d6524be931cc842b21bb0b5a718e74
  $fBitsWord63 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @ ()
                   @~ <((), GHC.Word.Word16)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord59
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsWord64 ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word64
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word64
                  Data.Array.Accelerate.Classes.Eq.$fEqWord64
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord64_$cpopCount -}
3e1b14090dc66a38c118623719706152
  $fBitsWord64_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord134
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
0e36685124585a5c2201bedb061f3b52
  $fBitsWord64_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord133
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
2cf621c70fccfd3500c69b27c5aa01a4
  $fBitsWord64_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord119
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
000c35f6e0ca574728e04f6b36951bf7
  $fBitsWord64_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord116
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
6a36ac0995c4dd5180ae34ddf6fecaab
  $fBitsWord64_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord131
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
8cb9ca1afa76da1a7b05b800a0181e20
  $fBitsWord64_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord115
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
ff1403a53902038fdb34113b9bb03bc8
  $fBitsWord64_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord111
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
b36e023453bcfcce2c51b949fd860241
  $fBitsWord64_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord103
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
04eb7033a7056e3bc1c132e2cc0705b8
  $fBitsWord64_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate16
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Word.Word64
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) }) -}
7c094e92db31c01f3fc8260a3965183a
  $fBitsWord64_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord105
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
6cffe890d1e65900561297f756fe94e7
  $fBitsWord64_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord104
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
2aa3dee8e3f0aa75735f0ea9cbf839e8
  $fBitsWord64_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord118
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
eee442aab7476f5875b9d577297e45a8
  $fBitsWord64_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord130
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
c11391b15e2f867b2969b2712a100556
  $fBitsWord64_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord110
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
019c91c39699460c08f994bb406f8759
  $fBitsWord64_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord107
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
60d231fb3230d48aa9e1b14c1258f51c
  $fBitsWord64_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord112
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
f586ce2a46f85b9196f87b217be1adc8
  $fBitsWord64_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord109
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
dfef1149edb5bc2c42494dce31a0ef9b
  $fBitsWord64_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord106
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
1352e36f3a6ab33c815148c737ffab76
  $fBitsWord64_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord132
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
66800b0e1f5f7b60bc9067a9bf6c4403
  $fBitsWord64_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord120
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) -}
c36d5ac4d5870300bce1245dd3d785c0
  $fBitsWord64_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType) -}
0404c5c86611cf2c15fdbc437fc27c63
  $fBitsWord64_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64)
                   @ GHC.Word.Word64
                   @~ <(GHC.Word.Word64, GHC.Word.Word64) -> GHC.Word.Word64>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType) -}
ff4c2cd5402c55589f8ea22884bc1b55
  $fBitsWord65 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word16 -> GHC.Word.Word16)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word16 -> GHC.Word.Word16)
                   @ GHC.Word.Word16
                   @ GHC.Word.Word16
                   @~ <GHC.Word.Word16 -> GHC.Word.Word16>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord16_$cscalarType) -}
0fb2076420a3492a078a497f6044266c
  $fBitsWord66 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault5
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
92044e2529a40b69b94a2eb62c2f3ed7
  $fBitsWord67 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Word.Word16 -> GHC.Word.Word16)
                      @ GHC.Word.Word16
                      @~ <GHC.Word.Word16 -> GHC.Word.Word16>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                   x) -}
dc1a306c670ef6dffc98d13d366666be
  $fBitsWord68 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord16_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
61193be145fcc03899e553a4989457c2
  $fBitsWord69 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
111110cae68e167182ef5d6601e23019
  $fBitsWord7 :: GHC.Types.Word
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.W# 0##) -}
3f4631ea9478f8d9d666fee9fc7e1a79
  $fBitsWord70 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word16
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16)
                   (y :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word16
                   @ (GHC.Word.Word16, GHC.Word.Word16)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Data.Bits.$fBitsWord16_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word16, GHC.Word.Word16)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word16), GHC.Word.Word16)
                         @ GHC.Word.Word16
                         @ ((), GHC.Word.Word16)
                         @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord16
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word16)
                            @ GHC.Word.Word16
                            @ ()
                            @~ <((), GHC.Word.Word16)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         y)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                 GHC.Word.Word16)>_N)) -}
47dfb0e6d4dbc463ce6e379977a313d9
  $fBitsWord71 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimPopCount
                      @ (GHC.Word.Word32 -> GHC.Types.Int)
                      @ GHC.Word.Word32
                      @~ <GHC.Word.Word32 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                   x) -}
c11ff6486b9b447d4e4027d82f8e5da6
  $fBitsWord72 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word32, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word32
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       @ (GHC.Word.Word32, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       (Data.Array.Accelerate.AST.PrimBRotateR
                          @ ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
                          @ GHC.Word.Word32
                          @~ <(GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word32, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word32
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord32
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word32), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word32)
                             @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word32)
                                @ GHC.Word.Word32
                                @ ()
                                @~ <((), GHC.Word.Word32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))) -}
372bf991f148b99d564f462552378fc1
  $fBitsWord73 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                         Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsBool3
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   w
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word32, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word32
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       @ (GHC.Word.Word32, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       (Data.Array.Accelerate.AST.PrimBRotateL
                          @ ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
                          @ GHC.Word.Word32
                          @~ <(GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word32, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word32
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord32
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word32), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word32)
                             @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word32)
                                @ GHC.Word.Word32
                                @ ()
                                @~ <((), GHC.Word.Word32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))) -}
d1606c8dd858b3a29d05971dd582954f
  $fBitsWord74 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl7
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Types.Int)>_N)) -}
accf5c25bed4828c441043f8978b69bc
  $fBitsWord75 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord76
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word32, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word32
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       @ (GHC.Word.Word32, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       (Data.Array.Accelerate.AST.PrimBShiftR
                          @ ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
                          @ GHC.Word.Word32
                          @~ <(GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word32, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word32
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord32
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word32), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word32)
                             @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word32)
                                @ GHC.Word.Word32
                                @ ()
                                @~ <((), GHC.Word.Word32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))) -}
54a31308b30bb36a6cedcf7b6db3229c
  $fBitsWord76 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt7) -}
6117870aa12debfcdcc65c4534c92a42
  $fBitsWord77 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl9
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Types.Int)>_N)) -}
a11eaa68b4fb9c954c65b043b3f93441
  $fBitsWord78 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   (Data.Array.Accelerate.Smart.PrimApp
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Bool
                      @ (GHC.Types.Int, GHC.Types.Int)
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                      Data.Array.Accelerate.Array.Sugar.$fEltBool
                      Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                      (Data.Array.Accelerate.Smart.Tuple
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (GHC.Types.Int, GHC.Types.Int)
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                         Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (((), GHC.Types.Int), GHC.Types.Int)
                            @ GHC.Types.Int
                            @ ((), GHC.Types.Int)
                            @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                               @ Data.Array.Accelerate.Smart.Exp
                               @ ((), GHC.Types.Int)
                               @ GHC.Types.Int
                               @ ()
                               @~ <((), GHC.Types.Int)>_N
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                  @ Data.Array.Accelerate.Smart.Exp)
                               w1)
                            Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                           `cast`
                         (Data.Array.Accelerate.Array.Sugar.Tuple
                            <Data.Array.Accelerate.Smart.Exp>_R
                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                      <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                    GHC.Types.Int)>_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord76
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                   (let {
                      lvl196 :: Data.Array.Accelerate.Array.Sugar.Elt
                                  (GHC.Word.Word32, GHC.Types.Int)
                      = Data.Array.Accelerate.Array.Sugar.$fElt(,)
                          @ GHC.Word.Word32
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                    } in
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       @ (GHC.Word.Word32, GHC.Types.Int)
                       lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       (Data.Array.Accelerate.AST.PrimBShiftL
                          @ ((GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32)
                          @ GHC.Word.Word32
                          @~ <(GHC.Word.Word32, GHC.Types.Int) -> GHC.Word.Word32>_N
                          Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Word.Word32, GHC.Types.Int)
                          lvl196
                          (Data.Array.Accelerate.Product.$fIsProductcst(,)
                             @ Data.Array.Accelerate.Array.Sugar.Elt
                             @ GHC.Word.Word32
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Array.Sugar.$fEltWord32
                             Data.Array.Accelerate.Array.Sugar.$fEltInt)
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Word.Word32), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Word.Word32)
                             @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Word.Word32)
                                @ GHC.Word.Word32
                                @ ()
                                @~ <((), GHC.Word.Word32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w)
                             w1)
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))) -}
9f7f961ca625337d6c9e88b999d2403a
  $fBitsWord79 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsBool2) -}
ffc30e3a11ec8863801d4b177cafc2a2
  $fBitsWord8 :: Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word8
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word8
                  Data.Array.Accelerate.Classes.Eq.$fEqWord8
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$c.&.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$c.|.
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cxor
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$ccomplement
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cshift
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$crotate
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$czeroBits
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cbit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$csetBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cclearBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$ccomplementBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$ctestBit
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cisSigned
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cshiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cunsafeShiftL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cshiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cunsafeShiftR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$crotateL
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$crotateR
                  Data.Array.Accelerate.Data.Bits.$fBitsWord8_$cpopCount -}
f095066686378c183a1c282f05fb00ec
  $fBitsWord80 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (eta :: Data.Array.Accelerate.Smart.Exp
                             GHC.Word.Word32)
                   (eta1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Bool
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltBool
                   Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl196
                      Data.Array.Accelerate.Classes.Eq.$fEqWord32_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            (Data.Array.Accelerate.Smart.PrimApp
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               @ (GHC.Word.Word32, GHC.Word.Word32)
                               Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl198
                               (Data.Array.Accelerate.Smart.Tuple
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (GHC.Word.Word32, GHC.Word.Word32)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                                  (Data.Array.Accelerate.Array.Sugar.SnocTup
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (((), GHC.Word.Word32), GHC.Word.Word32)
                                     @ GHC.Word.Word32
                                     @ ((), GHC.Word.Word32)
                                     @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                                     Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ ((), GHC.Word.Word32)
                                        @ GHC.Word.Word32
                                        @ ()
                                        @~ <((), GHC.Word.Word32)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                        (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                           @ Data.Array.Accelerate.Smart.Exp)
                                        eta)
                                     (Data.Array.Accelerate.Smart.Cond
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ GHC.Word.Word32
                                        Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Types.Bool
                                           @ (GHC.Types.Int, GHC.Types.Int)
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                           Data.Array.Accelerate.Array.Sugar.$fEltBool
                                           Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Types.Int, GHC.Types.Int)
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                              Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Types.Int), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Types.Int)
                                                 @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                    @ Data.Array.Accelerate.Smart.Exp
                                                    @ ((), GHC.Types.Int)
                                                    @ GHC.Types.Int
                                                    @ ()
                                                    @~ <((), GHC.Types.Int)>_N
                                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                    (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                       @ Data.Array.Accelerate.Smart.Exp)
                                                    eta1)
                                                 Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                                                   `cast`
                                                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord76
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                                        (Data.Array.Accelerate.Smart.PrimApp
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ GHC.Word.Word32
                                           @ (GHC.Word.Word32, GHC.Types.Int)
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                           Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                           Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl9
                                           (Data.Array.Accelerate.Smart.Tuple
                                              @ Data.Array.Accelerate.Smart.Acc
                                              @ Data.Array.Accelerate.Smart.Exp
                                              @ (GHC.Word.Word32, GHC.Types.Int)
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                              Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                              (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                 @ Data.Array.Accelerate.Smart.Exp
                                                 @ (((), GHC.Word.Word32), GHC.Types.Int)
                                                 @ GHC.Types.Int
                                                 @ ((), GHC.Word.Word32)
                                                 @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                 Data.Array.Accelerate.Data.Bits.$fBitsWord81
                                                 eta1)
                                                `cast`
                                              (Data.Array.Accelerate.Array.Sugar.Tuple
                                                 <Data.Array.Accelerate.Smart.Exp>_R
                                                 (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                           <GHC.Types.Int>_N
                                                           <GHC.Word.Word32>_N)))_R)
                                             `cast`
                                           (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                         GHC.Types.Int)>_N))
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Tuple
                                     <Data.Array.Accelerate.Smart.Exp>_R
                                     (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                               <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                             GHC.Word.Word32)>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                         Data.Array.Accelerate.Data.Bits.$fBitsWord76
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
1d74196fb901276f11f348904e27ee2f
  $fBitsWord81 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @ ()
                   @~ <((), GHC.Word.Word32)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord82
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
36d48cdd13a2f11eb7988ad435622209
  $fBitsWord82 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt15) -}
9b50aed78f2142061758301c5adc2c12
  $fBitsWord83 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl1
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord78
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               (GHC.Word.W32# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
731f95561a53627eb0e55e38fadf3c47
  $fBitsWord84 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl198
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Smart.PrimApp
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Exp
                            @ GHC.Word.Word32
                            @ GHC.Word.Word32
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            Data.Array.Accelerate.Data.Bits.$fBitsWord85
                            (Data.Array.Accelerate.Smart.Cond
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Bool
                                  @ (GHC.Types.Int, GHC.Types.Int)
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                  Data.Array.Accelerate.Array.Sugar.$fEltBool
                                  Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                                     Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Types.Int), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Types.Int)
                                        @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Array.Sugar.SnocTup
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ ((), GHC.Types.Int)
                                           @ GHC.Types.Int
                                           @ ()
                                           @~ <((), GHC.Types.Int)>_N
                                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                                           (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                              @ Data.Array.Accelerate.Smart.Exp)
                                           i)
                                        Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                               Data.Array.Accelerate.Data.Bits.$fBitsWord76
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                               (Data.Array.Accelerate.Smart.PrimApp
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Word.Word32
                                  @ (GHC.Word.Word32, GHC.Types.Int)
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                  Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                  Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl9
                                  (Data.Array.Accelerate.Smart.Tuple
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ (GHC.Word.Word32, GHC.Types.Int)
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                     Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                     (Data.Array.Accelerate.Array.Sugar.SnocTup
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (((), GHC.Word.Word32), GHC.Types.Int)
                                        @ GHC.Types.Int
                                        @ ((), GHC.Word.Word32)
                                        @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        Data.Array.Accelerate.Data.Bits.$fBitsWord81
                                        i)
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Tuple
                                        <Data.Array.Accelerate.Smart.Exp>_R
                                        (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                  <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                GHC.Types.Int)>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
fb6f5c476163e8f0d95ea62f4ed06079
  $fBitsWord85 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word32 -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBNot
                   @ (GHC.Word.Word32 -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @~ <GHC.Word.Word32 -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType) -}
0800bc051841cbd0881745fdd25e467c
  $fBitsWord86 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl12
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Word.Word32, GHC.Word.Word32)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Word.Word32), GHC.Word.Word32)
                         @ GHC.Word.Word32
                         @ ((), GHC.Word.Word32)
                         @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltWord32
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Word.Word32)
                            @ GHC.Word.Word32
                            @ ()
                            @~ <((), GHC.Word.Word32)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         (Data.Array.Accelerate.Data.Bits.$fBitsWord78
                            (Data.Array.Accelerate.Smart.Const
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Exp
                               @ GHC.Word.Word32
                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                               (GHC.Word.W32# 1##))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                            i)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
8cadcba560bbda87aa3b763639205fbe
  $fBitsWord87 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsWord78
                   (Data.Array.Accelerate.Smart.Const
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Word.Word32
                      Data.Array.Accelerate.Array.Sugar.$fEltWord32
                      (GHC.Word.W32# 1##))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                   eta) -}
2ed6dc505cedc49774e078c66c822b4e
  $fBitsWord88 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsWord32_lvl198
                   Data.Array.Accelerate.Data.Bits.$fBitsWord89
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Word.Word32)>_N)) -}
562cbd21090cb897fa84d924e3f3fedf
  $fBitsWord89 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word32, GHC.Word.Word32)
  {- Strictness: m3,
     Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word32, GHC.Word.Word32)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                   Data.Array.Accelerate.Data.Bits.$fBitsWord90
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R) -}
67f35551d4f03174c27ee51c31bff0e1
  $fBitsWord8_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord176
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
0f45ac46304350a968374e1c96f38831
  $fBitsWord8_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord175
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
574cc206d53c9bfc325d14cad63d3bda
  $fBitsWord8_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord154
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
dc536a081c8049b101142ef50b8e7adf
  $fBitsWord8_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord151
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
8f72542d0e30bbfd10b2a32c21f94fd8
  $fBitsWord8_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord173
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
12e1c81620933212088b7d9d99d81543
  $fBitsWord8_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord150
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
2687b8a85b6d0848955710f532c9022d
  $fBitsWord8_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord145
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
1a2e6fad833457c3d95ba5b5c6cdd711
  $fBitsWord8_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord135
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
295f5586254c6d2868394aa8eb57ed18
  $fBitsWord8_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate17
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Word.Word8
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) }) -}
4cefe3b63bf67804f01b6f090e4e41a0
  $fBitsWord8_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord137
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
1202d82e3decfb4b35b82ded2a79b9a0
  $fBitsWord8_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord136
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
dc493261760155ab6244926bb4711a9b
  $fBitsWord8_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord153
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
74a348eca79268b54a0e75be479bfb59
  $fBitsWord8_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord172
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
9fa605b510d1524e61198196f89db641
  $fBitsWord8_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord144
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
84859e0fcc40a2f6c984b279011bb60b
  $fBitsWord8_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord139
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
749b4225e7ecb71cc8b3b3892dd04884
  $fBitsWord8_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord146
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
2b11d430e7742e4267bdf5f1bfeb07d8
  $fBitsWord8_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord143
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
fab438df373d9f75a30501e8f0bb0354
  $fBitsWord8_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord138
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
4c47da786e486b04098dd5b1d5738893
  $fBitsWord8_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord174
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
d8f1015cee3cd8484b3b0ecebdc835ae
  $fBitsWord8_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord155
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) -}
50711ed559eb54185eee7fc9a7651854
  $fBitsWord8_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType) -}
6e518aa4fad9c9708d729fa41a3c3489
  $fBitsWord8_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8)
                   @ GHC.Word.Word8
                   @~ <(GHC.Word.Word8, GHC.Word.Word8) -> GHC.Word.Word8>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType) -}
98898f28d6e93328486992a6c6cb8f43
  $fBitsWord9 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (i :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Word
                   @ (GHC.Types.Word, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl5
                   (Data.Array.Accelerate.Smart.Tuple
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (GHC.Types.Word, GHC.Types.Int)
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (((), GHC.Types.Word), GHC.Types.Int)
                         @ GHC.Types.Int
                         @ ((), GHC.Types.Word)
                         @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                            @ Data.Array.Accelerate.Smart.Exp
                            @ ((), GHC.Types.Word)
                            @ GHC.Types.Word
                            @ ()
                            @~ <((), GHC.Types.Word)>_N
                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                               @ Data.Array.Accelerate.Smart.Exp)
                            x)
                         i)
                        `cast`
                      (Data.Array.Accelerate.Array.Sugar.Tuple
                         <Data.Array.Accelerate.Smart.Exp>_R
                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                   <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                 GHC.Types.Int)>_N)) -}
8409fb1e037433f17bbb56b01e85bdd2
  $fBitsWord90 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word32), GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word32), GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @ ((), GHC.Word.Word32)
                   @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsWord96
                   Data.Array.Accelerate.Data.Bits.$fBitsWord91
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
7568184f038ef8fda49067809e807b3f
  $fBitsWord91 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsWord85
                   Data.Array.Accelerate.Data.Bits.$fBitsWord92
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
8bd8ffbd726621eabc1b6a78224193eb
  $fBitsWord92 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Unfolding: (Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsCUInt29
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord76
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord93
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
d82ee4d474212cd1269bbd11aefa2844
  $fBitsWord93 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Word.Word32
  {- Unfolding: (Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ (GHC.Word.Word32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl9
                   Data.Array.Accelerate.Data.Bits.$fBitsWord94
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                 GHC.Types.Int)>_N)) -}
eef85095321123675c6fc93bf8d2ffca
  $fBitsWord94 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      (GHC.Word.Word32, GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Smart.Tuple
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (GHC.Word.Word32, GHC.Types.Int)
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                   Data.Array.Accelerate.Data.Bits.$fBitsWord95
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Tuple
                      <Data.Array.Accelerate.Smart.Exp>_R
                      (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R) -}
76039c63cc6b49689f31f285c85f0939
  $fBitsWord95 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp
      (((), GHC.Word.Word32), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (((), GHC.Word.Word32), GHC.Types.Int)
                   @ GHC.Types.Int
                   @ ((), GHC.Word.Word32)
                   @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Data.Bits.$fBitsWord81
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
123866184ff4db3bdc62be6a78c26375
  $fBitsWord96 ::
    Data.Array.Accelerate.Array.Sugar.Tuple
      Data.Array.Accelerate.Smart.Exp ((), GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.Array.Sugar.SnocTup
                   @ Data.Array.Accelerate.Smart.Exp
                   @ ((), GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @ ()
                   @~ <((), GHC.Word.Word32)>_N
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                      @ Data.Array.Accelerate.Smart.Exp)
                   Data.Array.Accelerate.Data.Bits.$fBitsWord92
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)) -}
c0f32c709f4981b9045fbab64a4ab203
  $fBitsWord97 ::
    Data.Array.Accelerate.AST.PrimFun
      (GHC.Word.Word32 -> GHC.Word.Word32)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimCoerce
                   @ (GHC.Word.Word32 -> GHC.Word.Word32)
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   @~ <GHC.Word.Word32 -> GHC.Word.Word32>_N
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType
                   Data.Array.Accelerate.Type.$fIsScalarWord32_$cscalarType) -}
0b7d67f34bc4b010fd9acfa22d7b70b9
  $fBitsWord98 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$sshiftDefault6
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
ffe9dddb21d1e65b7ab82143e28cf746
  $fBitsWord99 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Word.Word32
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Word.Word32
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   (Data.Array.Accelerate.AST.PrimBNot
                      @ (GHC.Word.Word32 -> GHC.Word.Word32)
                      @ GHC.Word.Word32
                      @~ <GHC.Word.Word32 -> GHC.Word.Word32>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                   x) -}
0d958c36fcc9b10173f9391aba4745b2
  $fBitsWord_$c.&. ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord37
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
cfc390f107f9cd4b00f78757a31ecedd
  $fBitsWord_$c.|. ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord36
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
1dd4783b5c0d12e39ecc426a4bae31a9
  $fBitsWord_$cbit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord21
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
66679f7204bb93e07fed47800bdacca1
  $fBitsWord_$cclearBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord18
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
d49f6baef68890e38d12449602d60899
  $fBitsWord_$ccomplement ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord34
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
9dd6774eaf0d50e83ce74833d3bd3723
  $fBitsWord_$ccomplementBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
a6ce681427d0c7e559844137bb156b8c
  $fBitsWord_$cisSigned ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
20f6fec2b618dd1ce5f83592c27f3367
  $fBitsWord_$cpopCount ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
09427f490202a6837c72235bec279451
  $fBitsWord_$crotate ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 case Data.Array.Accelerate.Data.Bits.$w$crotate13
                        w
                        w1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (Data.Array.Accelerate.Smart.Cond
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Exp
                    @ GHC.Types.Word
                    ww1
                    ww2
                    ww3
                    ww4)
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) }) -}
0cb90abcd2b38cc1d46fdc296d31edca
  $fBitsWord_$crotateL ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
8501b375365c5ccfbdf28fa46a6bcf24
  $fBitsWord_$crotateR ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
08bfeab4de918399ff1531e5b9c57752
  $fBitsWord_$csetBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord20
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
1d497538e43fda5cd39409bb63e0d025
  $fBitsWord_$cshift ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord33
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
dd7e0de7198a7eb85762cb9c3924a3a7
  $fBitsWord_$cshiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
722a0d99ffbe35d5f40033e0b1c47022
  $fBitsWord_$cshiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
4036c0f670426130aca2eefbe99dfde3
  $fBitsWord_$ctestBit ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N) -}
62d437a62c9d5c5dd5744c1484094687
  $fBitsWord_$cunsafeShiftL ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
d98c870bc08efbf0ec8d38ba3f38dd6b
  $fBitsWord_$cunsafeShiftR ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
349fa7387838e970729dc4cb3e7ba07a
  $fBitsWord_$cxor ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord35
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
93a2fa7d4552e640f1b150921ea1ecdf
  $fBitsWord_$czeroBits ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord22
                  `cast`
                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) -}
92f2c5f12df6f20521a5565337d1e8bd
  $fBitsWord_lvl1 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBXor
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType) -}
34d05ada54a2b89c808c087aa2b7062c
  $fBitsWord_lvl198 ::
    Data.Array.Accelerate.AST.PrimFun
      ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
  {- Unfolding: (Data.Array.Accelerate.AST.PrimBAnd
                   @ ((GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word)
                   @ GHC.Types.Word
                   @~ <(GHC.Types.Word, GHC.Types.Word) -> GHC.Types.Word>_N
                   Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsBool ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Types.Bool
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Bool
                  Data.Array.Accelerate.Data.Bits.$fBitsBool
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsBool_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsBool_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsBool_$ccountLeadingZeros -}
d6df0430e1963f7ff6eef6978d241b77
  $fFiniteBitsBool1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   x
                   Data.Array.Accelerate.Data.Bits.$fBitsBool3
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                   Data.Array.Accelerate.Data.Bits.$fBitsCInt43
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)) -}
7da2fed1ef39cba8792f843845b234a8
  $fFiniteBitsBool2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Bool) ->
                 Data.Array.Accelerate.Data.Bits.$fFiniteBitsBool3) -}
be40ccb727d55d382a5a17c02807ff17
  $fFiniteBitsBool3 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Bits.$fBitsBool1) -}
81ef0517587546968ee47fecc74e94e4
  $fFiniteBitsBool_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>m12,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsBool1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
20ae831affcd4fe42a2d40ed817b37ea
  $fFiniteBitsBool_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsBool2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Bool>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCInt ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CInt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CInt
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt_$ccountTrailingZeros -}
517278ca5cff48264848c5991ef131ca
  $fFiniteBitsCInt1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CInt -> GHC.Types.Int)
                      @ Foreign.C.Types.CInt
                      @~ <Foreign.C.Types.CInt -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType)
                   x) -}
f169e3f7c78abd55c84c677f77f20ae3
  $fFiniteBitsCInt2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CInt -> GHC.Types.Int)
                      @ Foreign.C.Types.CInt
                      @~ <Foreign.C.Types.CInt -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCInt_$cintegralType)
                   x) -}
34c3698b72f3b1be3405322b3e4b6946
  $fFiniteBitsCInt3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt11) -}
9f2573e59d30c81eb97b25dec0290f0b
  $fFiniteBitsCInt_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
9447937fc0aabcb7282a31d0ecc309b1
  $fFiniteBitsCInt_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
49bd654d98363c3e9b966392405e3b81
  $fFiniteBitsCInt_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
7db94b288da3672b40ae1b1556fc087e
  $fFiniteBitsCInt_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CInt
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCInt -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCLLong ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CLLong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CLLong
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong_$ccountTrailingZeros -}
785411473eb230833ae92ea6de642ad2
  $fFiniteBitsCLLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CLLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CLLong
                      @~ <Foreign.C.Types.CLLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType)
                   x) -}
0f5c298d4b300773df37c4af93364854
  $fFiniteBitsCLLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CLLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CLLong
                      @~ <Foreign.C.Types.CLLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLLong_$cintegralType)
                   x) -}
e39db04479034e53d65619983081cde3
  $fFiniteBitsCLLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CLLong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong11) -}
cd60680cbea284d7a9effce82865f04c
  $fFiniteBitsCLLong_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
f10b7eb9507ff64e2c3b84d1aaf190c9
  $fFiniteBitsCLLong_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
6b4e7871437cc147b098d98974cb289e
  $fFiniteBitsCLLong_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
aff810f62f7caff6f9c5a99a85ec5a7c
  $fFiniteBitsCLLong_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CLLong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLLong -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCLong ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CLong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CLong
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong_$ccountTrailingZeros -}
cb927a38357dd205a8461e3fb8c09745
  $fFiniteBitsCLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CLong
                      @~ <Foreign.C.Types.CLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType)
                   x) -}
475d5d79abff262c9865c66f3a6d7bfb
  $fFiniteBitsCLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CLong
                      @~ <Foreign.C.Types.CLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCLong_$cintegralType)
                   x) -}
2cccac4913080c8e5c1f575320b67630
  $fFiniteBitsCLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong11) -}
c55fb28dd44a308857036a33cfaa8410
  $fFiniteBitsCLong_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
2fed175dd1334596f97d0f1f4fc2da99
  $fFiniteBitsCLong_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
f1d0f147f0d35eda688bbb41e4caecf1
  $fFiniteBitsCLong_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
1f2cc9f25a1bde80504a492610194ec1
  $fFiniteBitsCLong_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CLong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCLong -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCShort ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CShort
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CShort
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort_$ccountTrailingZeros -}
b9085beba48108b5bcb46ed6beb48c0f
  $fFiniteBitsCShort1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CShort -> GHC.Types.Int)
                      @ Foreign.C.Types.CShort
                      @~ <Foreign.C.Types.CShort -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType)
                   x) -}
dc4c0d186f3951a5229b58f7581be9d8
  $fFiniteBitsCShort2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CShort -> GHC.Types.Int)
                      @ Foreign.C.Types.CShort
                      @~ <Foreign.C.Types.CShort -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCShort_$cintegralType)
                   x) -}
4c3fdd9ab5ace9de67773f35179e760b
  $fFiniteBitsCShort3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CShort) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCShort11) -}
15f922152f8ff8b113c7ddaaef9facc4
  $fFiniteBitsCShort_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
299adb589e352927d5a244a4f30571a6
  $fFiniteBitsCShort_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
7ffae4de6a6df1bdc33e5206c9354bf5
  $fFiniteBitsCShort_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
d547eb1e0269e05b3e34d66c1a17a66a
  $fFiniteBitsCShort_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CShort
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCShort -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCUInt ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CUInt
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CUInt
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt_$ccountTrailingZeros -}
f83a08446a8db41fb300875ae8765a63
  $fFiniteBitsCUInt1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CUInt -> GHC.Types.Int)
                      @ Foreign.C.Types.CUInt
                      @~ <Foreign.C.Types.CUInt -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                   x) -}
62518339ca5f58c28feacf0dd51f7ee0
  $fFiniteBitsCUInt2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CUInt -> GHC.Types.Int)
                      @ Foreign.C.Types.CUInt
                      @~ <Foreign.C.Types.CUInt -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUInt_$cintegralType)
                   x) -}
92f0c3bb8d0aab83c3ba73b4050a6ea9
  $fFiniteBitsCUInt3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCUInt8) -}
4b2ad6242e14fb5ad916e9a28923dd0a
  $fFiniteBitsCUInt_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
6b3caa494a9b5e9fe0223011c48db683
  $fFiniteBitsCUInt_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
65cea8649d65fdafde5a9492f78100fd
  $fFiniteBitsCUInt_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
9a6dbd42eed06956a63b52f71ac16862
  $fFiniteBitsCUInt_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CUInt
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUInt -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCULLong ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CULLong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CULLong
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong_$ccountTrailingZeros -}
d7a0ac4cb5def6b3f3d63df6f2f91f8b
  $fFiniteBitsCULLong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CULLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CULLong
                      @~ <Foreign.C.Types.CULLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                   x) -}
afcbb8901873f5e148eed5ed9875dc69
  $fFiniteBitsCULLong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CULLong -> GHC.Types.Int)
                      @ Foreign.C.Types.CULLong
                      @~ <Foreign.C.Types.CULLong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULLong_$cintegralType)
                   x) -}
87c906aeaf2a4150bf9ce88930516ca2
  $fFiniteBitsCULLong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CULLong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong8) -}
3cf807df0999d66780885823b6ce9a2d
  $fFiniteBitsCULLong_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
c0a4145f9236813b5e53ef4941e8a538
  $fFiniteBitsCULLong_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
3bdebddb30c9a28c3e3beb183d683df0
  $fFiniteBitsCULLong_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
76accefc40e089d3f4571a48c0c93099
  $fFiniteBitsCULLong_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CULLong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULLong -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCULong ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CULong
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CULong
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong_$ccountTrailingZeros -}
3c5efa252c0971b0806e91af68c56282
  $fFiniteBitsCULong1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CULong -> GHC.Types.Int)
                      @ Foreign.C.Types.CULong
                      @~ <Foreign.C.Types.CULong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                   x) -}
eb9f7dae5bc48c3405ef59714e1a6887
  $fFiniteBitsCULong2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CULong
                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CULong -> GHC.Types.Int)
                      @ Foreign.C.Types.CULong
                      @~ <Foreign.C.Types.CULong -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCULong_$cintegralType)
                   x) -}
2c524aeca46fb7331dfac3e2c987f7b8
  $fFiniteBitsCULong3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CULong) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong8) -}
abb011a4779b47985dc8236fc8d1d8ef
  $fFiniteBitsCULong_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
ad38038ce129aaf8805c2380e1894632
  $fFiniteBitsCULong_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
59817062f1c82b4b95ad8a1f9ea5fc69
  $fFiniteBitsCULong_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
285037349c088910224218de2b11ee69
  $fFiniteBitsCULong_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CULong
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCULong -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsCUShort ::
    Data.Array.Accelerate.Data.Bits.FiniteBits Foreign.C.Types.CUShort
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.C.Types.CUShort
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort_$ccountTrailingZeros -}
679716f8ecc8456fb1144e1b732c331f
  $fFiniteBitsCUShort1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (Foreign.C.Types.CUShort -> GHC.Types.Int)
                      @ Foreign.C.Types.CUShort
                      @~ <Foreign.C.Types.CUShort -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                   x) -}
5627fa385f351a7afc31e9f06fd6df66
  $fFiniteBitsCUShort2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ Foreign.C.Types.CUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (Foreign.C.Types.CUShort -> GHC.Types.Int)
                      @ Foreign.C.Types.CUShort
                      @~ <Foreign.C.Types.CUShort -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedCUShort_$cintegralType)
                   x) -}
3e9fd9c21db4ad8517816384884e9430
  $fFiniteBitsCUShort3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp
                            Foreign.C.Types.CUShort) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCUShort8) -}
663e5ac05dabada22932361ccd23e3d6
  $fFiniteBitsCUShort_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
8bdb811da418684a3e07957ecb44ec64
  $fFiniteBitsCUShort_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
76537ac2ab75b49e54f96e9589fc5ebf
  $fFiniteBitsCUShort_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
284f59920e970f42d07683d5c4e130ff
  $fFiniteBitsCUShort_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits Foreign.C.Types.CUShort
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsCUShort -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsInt ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Types.Int
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Int
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt_$ccountTrailingZeros -}
49dfd299aa35148a9ff5234c5d612834
  $fFiniteBitsInt1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Types.Int -> GHC.Types.Int)
                      @ GHC.Types.Int
                      @~ <GHC.Types.Int -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType)
                   x) -}
cf08fd36b0056746107cdcfeb0cae825
  $fFiniteBitsInt10 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCInt11) -}
bf6d00be9babda5e02b019454f0f7efa
  $fFiniteBitsInt11 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Int.Int64 -> GHC.Types.Int)
                      @ GHC.Int.Int64
                      @~ <GHC.Int.Int64 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType)
                   x) -}
e9505c05288bb109a2784bb2a1fe7fc3
  $fFiniteBitsInt12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Int.Int64 -> GHC.Types.Int)
                      @ GHC.Int.Int64
                      @~ <GHC.Int.Int64 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt64_$cintegralType)
                   x) -}
d520f2f5191e1daacbfb8108fe661469
  $fFiniteBitsInt13 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCLLong11) -}
f133fb0565e4a6b986f9fbe43cbf69e3
  $fFiniteBitsInt14 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Int.Int8 -> GHC.Types.Int)
                      @ GHC.Int.Int8
                      @~ <GHC.Int.Int8 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType)
                   x) -}
787769fe9a54f5ed55baf376c36d95c6
  $fFiniteBitsInt15 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Int.Int8 -> GHC.Types.Int)
                      @ GHC.Int.Int8
                      @~ <GHC.Int.Int8 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt8_$cintegralType)
                   x) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsInt16 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Int.Int16
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int16
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt16_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt16_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt16_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt16_$ccountTrailingZeros -}
def5e2b47bb523e4ad2a90320897d154
  $fFiniteBitsInt16_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
fc091e934b7926f6038b5d1d164768b6
  $fFiniteBitsInt16_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
a24d808b86630844309911e5a758aea5
  $fFiniteBitsInt16_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
694f838ac8ad8a7ea8d435d4cd71b17a
  $fFiniteBitsInt16_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int16
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt16 -}
a1e23a039afa5602bd2adb732cfe2ebd
  $fFiniteBitsInt17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt162) -}
a222c668c1f4a58cec3f71a37eba67de
  $fFiniteBitsInt2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Types.Int -> GHC.Types.Int)
                      @ GHC.Types.Int
                      @~ <GHC.Types.Int -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt_$cintegralType)
                   x) -}
d7aeaa926fb22010e908fe5138b07690
  $fFiniteBitsInt3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt10) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsInt32 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Int.Int32
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int32
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt32_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt32_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt32_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt32_$ccountTrailingZeros -}
7050dc9974c8903d1496f7a50f0c5424
  $fFiniteBitsInt32_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
3eafcd952f04696a1cb1cd0e94d84b1b
  $fFiniteBitsInt32_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
2dcab906f224659bfe52ad76e8b324d2
  $fFiniteBitsInt32_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
81c7b33d0a043121800e13baca51e753
  $fFiniteBitsInt32_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int32
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt32 -}
b4c364090524f2a893055c675d8452dd
  $fFiniteBitsInt4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Int.Int16 -> GHC.Types.Int)
                      @ GHC.Int.Int16
                      @~ <GHC.Int.Int16 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType)
                   x) -}
dcd4c83fc3c7355fb65e7f8006decb6f
  $fFiniteBitsInt5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Int.Int16 -> GHC.Types.Int)
                      @ GHC.Int.Int16
                      @~ <GHC.Int.Int16 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt16_$cintegralType)
                   x) -}
194440c29271e1730f7de869b340be08
  $fFiniteBitsInt6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCShort11) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsInt64 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Int.Int64
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int64
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt64_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt64_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt64_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt64_$ccountTrailingZeros -}
7d5eec7c455c086bc7ea95c6a22b9da6
  $fFiniteBitsInt64_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
6ab21308998d1bb0dbe304915d12727f
  $fFiniteBitsInt64_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
fb86ca0ae1d745da91f643332ece8fd7
  $fFiniteBitsInt64_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
f6af853cf8c8c5e82aa91ca1679dfef7
  $fFiniteBitsInt64_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int64
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt64 -}
fd35f6bcdc61b89d27957525493dc373
  $fFiniteBitsInt7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Int.Int32 -> GHC.Types.Int)
                      @ GHC.Int.Int32
                      @~ <GHC.Int.Int32 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType)
                   x) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsInt8 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Int.Int8
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int8
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt8_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt8_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt8_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt8_$ccountTrailingZeros -}
a45b5fd5b2de3e6c554230e8f2fcefdc
  $fFiniteBitsInt8_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
b266fa4d0842a8f93c3ddc9769917755
  $fFiniteBitsInt8_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
6acada6f2ffa35404de01c0a0f17b984
  $fFiniteBitsInt8_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Int.Int8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
248c33bed837e9df3cd53f212da30680
  $fFiniteBitsInt8_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Int.Int8
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt8 -}
604985377c1c1e156740010548723d82
  $fFiniteBitsInt9 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Int.Int32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Int.Int32 -> GHC.Types.Int)
                      @ GHC.Int.Int32
                      @~ <GHC.Int.Int32 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedInt32_$cintegralType)
                   x) -}
ae480ad9d97c499caa86a0342c114e5e
  $fFiniteBitsInt_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
811f886e51bd289627822123b1994cb2
  $fFiniteBitsInt_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
4f58b9e2210400eba6464244435f6caf
  $fFiniteBitsInt_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
4d4d6453431e2e25b9c0936c2e63dba7
  $fFiniteBitsInt_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Types.Int
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsInt -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsWord ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Types.Word
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Word
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord_$ccountTrailingZeros -}
ff93d55f612f4dfd365252ec6eecc409
  $fFiniteBitsWord1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Types.Word -> GHC.Types.Int)
                      @ GHC.Types.Word
                      @~ <GHC.Types.Word -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                   x) -}
ed53b693b398a2157592e6cf2c53dbd1
  $fFiniteBitsWord10 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCUInt8) -}
d6301adea3ccf8213271464c0a1ae54d
  $fFiniteBitsWord11 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Word.Word64 -> GHC.Types.Int)
                      @ GHC.Word.Word64
                      @~ <GHC.Word.Word64 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                   x) -}
44585ae6e69144a31241d6b524745c7b
  $fFiniteBitsWord12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word64
                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Word.Word64 -> GHC.Types.Int)
                      @ GHC.Word.Word64
                      @~ <GHC.Word.Word64 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord64_$cintegralType)
                   x) -}
db87ab4671e188547ea8734e14724802
  $fFiniteBitsWord13 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word64) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCULLong8) -}
d546b6a905bc2c7ff0d3362f07d59be7
  $fFiniteBitsWord14 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Word.Word8 -> GHC.Types.Int)
                      @ GHC.Word.Word8
                      @~ <GHC.Word.Word8 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                   x) -}
a0bf905a4d763593a9aca4d8323bb430
  $fFiniteBitsWord15 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word8
                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Word.Word8 -> GHC.Types.Int)
                      @ GHC.Word.Word8
                      @~ <GHC.Word.Word8 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord8_$cintegralType)
                   x) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsWord16 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Word.Word16
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word16
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord16_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord16_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord16_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord16_$ccountTrailingZeros -}
17eb8331edfe3c683b9588762e4b8c1d
  $fFiniteBitsWord16_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord5
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
137e62a176fbc6081c4b97d60540297d
  $fFiniteBitsWord16_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord4
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
b0d56efd1b24ddca5d7d53c1390431ab
  $fFiniteBitsWord16_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord6
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word16>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
7bc64fcd54eaa30e03cfbec43789f27f
  $fFiniteBitsWord16_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word16
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord16 -}
e793f59c9ae9b39d300cf4c33bfc266a
  $fFiniteBitsWord17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsWord142) -}
17332c1df70e6c65b4dd771aa747368d
  $fFiniteBitsWord2 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Types.Word
                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Types.Word -> GHC.Types.Int)
                      @ GHC.Types.Word
                      @~ <GHC.Types.Word -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord_$cintegralType)
                   x) -}
70d12de4d2f0b1ff8d31bfe8dba45dd8
  $fFiniteBitsWord3 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsInt10) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsWord32 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Word.Word32
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word32
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord32_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord32_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord32_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord32_$ccountTrailingZeros -}
a928585b69d55f7784755ccc1d4629d6
  $fFiniteBitsWord32_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord9
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
bf60cab30f71e4334fb749175a05eaf8
  $fFiniteBitsWord32_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord7
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
836e288941694be51eb4d9ce2aabef70
  $fFiniteBitsWord32_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord10
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word32>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
98517ed3b723021ac639fbe8234c0797
  $fFiniteBitsWord32_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word32
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord32 -}
cbe6a1f43cb0867273980e8623082fe6
  $fFiniteBitsWord4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Word.Word16 -> GHC.Types.Int)
                      @ GHC.Word.Word16
                      @~ <GHC.Word.Word16 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                   x) -}
21f189c467569ca2134f2a4d61c72e75
  $fFiniteBitsWord5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word16
                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Word.Word16 -> GHC.Types.Int)
                      @ GHC.Word.Word16
                      @~ <GHC.Word.Word16 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord16_$cintegralType)
                   x) -}
85e311a5f02b55209108fa0be7457420
  $fFiniteBitsWord6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word16) ->
                 Data.Array.Accelerate.Data.Bits.$fBitsCUShort8) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsWord64 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Word.Word64
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word64
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord64_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord64_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord64_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord64_$ccountTrailingZeros -}
357a73535bd1a6b716af875e9526bd73
  $fFiniteBitsWord64_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord12
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
3fb7bb185773f64146dcf65c6ec1a9c7
  $fFiniteBitsWord64_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord11
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
146e9a9b16755994418eb9bcc8c4f25e
  $fFiniteBitsWord64_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord13
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word64>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
dc06d87a32fb34f4df7bb7183bc3c375
  $fFiniteBitsWord64_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word64
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord64 -}
b50a36d64bfde545d8b118e56ccae167
  $fFiniteBitsWord7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountTrailingZeros
                      @ (GHC.Word.Word32 -> GHC.Types.Int)
                      @ GHC.Word.Word32
                      @~ <GHC.Word.Word32 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                   x) -}
5e8e15cd9b71d9716a10aced8fd7841a
  $fFiniteBitsWord8 ::
    Data.Array.Accelerate.Data.Bits.FiniteBits GHC.Word.Word8
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Word.Word8
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord8_$cp1FiniteBits
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord8_$cfiniteBitSize
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord8_$ccountLeadingZeros
                  Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord8_$ccountTrailingZeros -}
50414dae5a8febc26576cf0a761021df
  $fFiniteBitsWord8_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord15
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
2c6c6fa71deebbcdb40218d4a032a69c
  $fFiniteBitsWord8_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord14
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
861cc7d2b49f3ed3d9c7ce9b469e9ddf
  $fFiniteBitsWord8_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord17
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Word.Word8>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
7171fec57150eee2c5ce2525f8b45921
  $fFiniteBitsWord8_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Word.Word8
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord8 -}
9d241bf544c8f594abed89a3f55a7e7d
  $fFiniteBitsWord9 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word32) ->
                 Data.Array.Accelerate.Smart.PrimApp
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   @ GHC.Word.Word32
                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.AST.PrimCountLeadingZeros
                      @ (GHC.Word.Word32 -> GHC.Types.Int)
                      @ GHC.Word.Word32
                      @~ <GHC.Word.Word32 -> GHC.Types.Int>_N
                      Data.Array.Accelerate.Type.$fIsBoundedWord32_$cintegralType)
                   x) -}
b1ff0194d00a2f614c7ae5081efd3195
  $fFiniteBitsWord_$ccountLeadingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord2
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
cbe6526286b7008183c5d3167df6880c
  $fFiniteBitsWord_$ccountTrailingZeros ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
a2c634b29a15cd5a4691066cf01ddc0c
  $fFiniteBitsWord_$cfiniteBitSize ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord3
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Word>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) -}
1c019fb8b76b96727c2cc156efffcab2
  $fFiniteBitsWord_$cp1FiniteBits ::
    Data.Array.Accelerate.Data.Bits.Bits GHC.Types.Word
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Data.Bits.$fBitsWord -}
24959d25300f2afccebe329db857e886
  $tc'C:Bits :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8334317904497950500##
                   7886958521549202133##
                   Data.Array.Accelerate.Data.Bits.$trModule
                   Data.Array.Accelerate.Data.Bits.$tc'C:Bits1) -}
4db3c6cf57604564e00302dc2132ac1d
  $tc'C:Bits1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:Bits"#) -}
c54a52a9490fe018d70379d5d9e83a26
  $tc'C:FiniteBits :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9604498197848180593##
                   17103253003703591112##
                   Data.Array.Accelerate.Data.Bits.$trModule
                   Data.Array.Accelerate.Data.Bits.$tc'C:FiniteBits1) -}
d3a75e33695c1f06e508ac864193fe62
  $tc'C:FiniteBits1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:FiniteBits"#) -}
8d65cf892f09e801066eed65f879b11a
  $tcBits :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15861283235555897184##
                   16988830924239039214##
                   Data.Array.Accelerate.Data.Bits.$trModule
                   Data.Array.Accelerate.Data.Bits.$tcBits1) -}
46a3ccea641cde5e05911d2beca7ca6f
  $tcBits1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Bits"#) -}
19a1860269f4de42bb33d417f0897909
  $tcFiniteBits :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17102101332715178267##
                   15336605848366102264##
                   Data.Array.Accelerate.Data.Bits.$trModule
                   Data.Array.Accelerate.Data.Bits.$tcFiniteBits1) -}
2ea1cbaedfc8f3ab5630f4590e1cae80
  $tcFiniteBits1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FiniteBits"#) -}
e73ddeeb46c37be73461b870755467f0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Data.Bits.$trModule2
                   Data.Array.Accelerate.Data.Bits.$trModule1) -}
0cf0c6ac92f6788b87f3990319a24086
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Data.Array.Accelerate.Data.Bits"#) -}
5a2a5cb3036ccd30e004760c07e30fa2
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
5978b4dcaf42f7e2a444cf75126b5cb4
  $w$crotate ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CInt,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CInt #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt40
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUInt
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       @ Foreign.C.Types.CInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt39
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CInt
                       @ Foreign.C.Types.CUInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt38
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CUInt
                          @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                                @ Foreign.C.Types.CUInt
                                @ ((), Foreign.C.Types.CUInt)
                                @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CUInt)
                                   @ Foreign.C.Types.CUInt
                                   @ ()
                                   @~ <((), Foreign.C.Types.CUInt)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CUInt
                                      @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CUInt)
                                            @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CUInt)
                                               @ Foreign.C.Types.CUInt
                                               @ ()
                                               @~ <((), Foreign.C.Types.CUInt)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CUInt>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CUInt
                                   @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CUInt)
                                         @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CUInt)
                                            @ Foreign.C.Types.CUInt
                                            @ ()
                                            @~ <((), Foreign.C.Types.CUInt)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt37
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                        Foreign.C.Types.CUInt)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CInt>_N) #)) -}
d772cc7762b6abbf76b46d3618c2b5ba
  $w$crotate1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CLLong,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLLong #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CLLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCLLong39
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       @ Foreign.C.Types.CLLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       Data.Array.Accelerate.Data.Bits.$fBitsCLLong38
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCLLong,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLLong
                       @ Foreign.C.Types.CULLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCLLong
                       Data.Array.Accelerate.Data.Bits.$fBitsCLLong37
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CULLong
                          @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                                @ Foreign.C.Types.CULLong
                                @ ((), Foreign.C.Types.CULLong)
                                @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CULLong)
                                   @ Foreign.C.Types.CULLong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CULLong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CULLong
                                      @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CULLong)
                                            @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CULLong)
                                               @ Foreign.C.Types.CULLong
                                               @ ()
                                               @~ <((), Foreign.C.Types.CULLong)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CULLong>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CULLong
                                   @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CULLong)
                                         @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CULLong)
                                            @ Foreign.C.Types.CULLong
                                            @ ()
                                            @~ <((), Foreign.C.Types.CULLong)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong36
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N
                                                   <Foreign.C.Types.CULLong>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CULLong>_N
                                          <Foreign.C.Types.CULLong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                        Foreign.C.Types.CULLong)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLLong>_N) #)) -}
9feff33279874ba5947809dc068ed8db
  $w$crotate10 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Int.Int32,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int32,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int32 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt40
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word32
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       @ GHC.Int.Int32
                       Data.Array.Accelerate.Array.Sugar.$fEltInt32
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       Data.Array.Accelerate.Data.Bits.$fBitsInt111
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt32,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int32
                       @ GHC.Word.Word32
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       Data.Array.Accelerate.Array.Sugar.$fEltInt32
                       Data.Array.Accelerate.Data.Bits.$fBitsInt110
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word32
                          @ (GHC.Word.Word32, GHC.Word.Word32)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word32, GHC.Word.Word32)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word32), GHC.Word.Word32)
                                @ GHC.Word.Word32
                                @ ((), GHC.Word.Word32)
                                @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word32)
                                   @ GHC.Word.Word32
                                   @ ()
                                   @~ <((), GHC.Word.Word32)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word32
                                      @ (GHC.Word.Word32, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word32, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word32), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word32)
                                            @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word32)
                                               @ GHC.Word.Word32
                                               @ ()
                                               @~ <((), GHC.Word.Word32)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word32
                                   @ (GHC.Word.Word32, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word32, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word32), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word32)
                                         @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word32)
                                            @ GHC.Word.Word32
                                            @ ()
                                            @~ <((), GHC.Word.Word32)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCInt37
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                        GHC.Word.Word32)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int32>_N) #)) -}
2bf3e902e772e66005e56ef8847abe92
  $w$crotate11 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Int.Int64,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int64,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int64 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCLLong39
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       @ GHC.Int.Int64
                       Data.Array.Accelerate.Array.Sugar.$fEltInt64
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       Data.Array.Accelerate.Data.Bits.$fBitsInt146
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt64,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int64
                       @ GHC.Word.Word64
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       Data.Array.Accelerate.Array.Sugar.$fEltInt64
                       Data.Array.Accelerate.Data.Bits.$fBitsInt145
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word64
                          @ (GHC.Word.Word64, GHC.Word.Word64)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word64, GHC.Word.Word64)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word64), GHC.Word.Word64)
                                @ GHC.Word.Word64
                                @ ((), GHC.Word.Word64)
                                @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word64)
                                   @ GHC.Word.Word64
                                   @ ()
                                   @~ <((), GHC.Word.Word64)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word64
                                      @ (GHC.Word.Word64, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word64, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word64), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word64)
                                            @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word64)
                                               @ GHC.Word.Word64
                                               @ ()
                                               @~ <((), GHC.Word.Word64)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word64
                                   @ (GHC.Word.Word64, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word64, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word64), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word64)
                                         @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word64)
                                            @ GHC.Word.Word64
                                            @ ()
                                            @~ <((), GHC.Word.Word64)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong36
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                        GHC.Word.Word64)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int64>_N) #)) -}
b901f83fb0cd7640444125c19e5b4824
  $w$crotate12 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Int.Int8,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int8,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int8 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsInt190
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word8
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       @ GHC.Int.Int8
                       Data.Array.Accelerate.Array.Sugar.$fEltInt8
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       Data.Array.Accelerate.Data.Bits.$fBitsInt189
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt8,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int8
                       @ GHC.Word.Word8
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       Data.Array.Accelerate.Array.Sugar.$fEltInt8
                       Data.Array.Accelerate.Data.Bits.$fBitsInt188
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word8
                          @ (GHC.Word.Word8, GHC.Word.Word8)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord8
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word8, GHC.Word.Word8)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word8), GHC.Word.Word8)
                                @ GHC.Word.Word8
                                @ ((), GHC.Word.Word8)
                                @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word8)
                                   @ GHC.Word.Word8
                                   @ ()
                                   @~ <((), GHC.Word.Word8)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word8
                                      @ (GHC.Word.Word8, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word8, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word8), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word8)
                                            @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word8)
                                               @ GHC.Word.Word8
                                               @ ()
                                               @~ <((), GHC.Word.Word8)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word8
                                   @ (GHC.Word.Word8, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word8, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word8), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word8)
                                         @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word8)
                                            @ GHC.Word.Word8
                                            @ ()
                                            @~ <((), GHC.Word.Word8)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsInt187
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                        GHC.Word.Word8)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int8>_N) #)) -}
7858c93d2703893dde3f6a883e9d33bf
  $w$crotate13 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Word,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Word,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Word #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsInt38
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Types.Word
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       @ GHC.Types.Word
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       Data.Array.Accelerate.Data.Bits.$fBitsWord31
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       @ GHC.Types.Word
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       Data.Array.Accelerate.Data.Bits.$fBitsWord31
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Word
                          @ (GHC.Types.Word, GHC.Types.Word)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                          Data.Array.Accelerate.Array.Sugar.$fEltWord
                          Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Word, GHC.Types.Word)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                             Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Word), GHC.Types.Word)
                                @ GHC.Types.Word
                                @ ((), GHC.Types.Word)
                                @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Word)
                                   @ GHC.Types.Word
                                   @ ()
                                   @~ <((), GHC.Types.Word)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Word
                                      @ (GHC.Types.Word, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl5
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Types.Word, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Types.Word), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Types.Word)
                                            @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Types.Word)
                                               @ GHC.Types.Word
                                               @ ()
                                               @~ <((), GHC.Types.Word)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Word
                                   @ (GHC.Types.Word, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl4
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Word, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Word), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Word)
                                         @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Types.Word)
                                            @ GHC.Types.Word
                                            @ ()
                                            @~ <((), GHC.Types.Word)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsInt35
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                        GHC.Types.Word)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) #)) -}
dff8a3731fdaa788605eedd399e640f2
  $w$crotate14 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word16,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word16,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word16 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCUShort35
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word16
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       @ GHC.Word.Word16
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       Data.Array.Accelerate.Data.Bits.$fBitsWord65
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord16,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       @ GHC.Word.Word16
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       Data.Array.Accelerate.Data.Bits.$fBitsWord65
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word16
                          @ (GHC.Word.Word16, GHC.Word.Word16)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord16
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word16, GHC.Word.Word16)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word16), GHC.Word.Word16)
                                @ GHC.Word.Word16
                                @ ((), GHC.Word.Word16)
                                @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word16)
                                   @ GHC.Word.Word16
                                   @ ()
                                   @~ <((), GHC.Word.Word16)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word16
                                      @ (GHC.Word.Word16, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word16, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word16), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word16)
                                            @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word16)
                                               @ GHC.Word.Word16
                                               @ ()
                                               @~ <((), GHC.Word.Word16)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word16
                                   @ (GHC.Word.Word16, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word16, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word16), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word16)
                                         @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word16)
                                            @ GHC.Word.Word16
                                            @ ()
                                            @~ <((), GHC.Word.Word16)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort33
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                        GHC.Word.Word16)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) #)) -}
c565c5883a92d97f8cfef05f77d36e32
  $w$crotate15 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word32,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word32,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word32 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCUInt35
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word32
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       @ GHC.Word.Word32
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       Data.Array.Accelerate.Data.Bits.$fBitsWord97
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord32,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       @ GHC.Word.Word32
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       Data.Array.Accelerate.Data.Bits.$fBitsWord97
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word32
                          @ (GHC.Word.Word32, GHC.Word.Word32)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word32, GHC.Word.Word32)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word32), GHC.Word.Word32)
                                @ GHC.Word.Word32
                                @ ((), GHC.Word.Word32)
                                @~ <(((), GHC.Word.Word32), GHC.Word.Word32)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word32)
                                   @ GHC.Word.Word32
                                   @ ()
                                   @~ <((), GHC.Word.Word32)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word32
                                      @ (GHC.Word.Word32, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word32, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word32), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word32)
                                            @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word32)
                                               @ GHC.Word.Word32
                                               @ ()
                                               @~ <((), GHC.Word.Word32)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word32
                                   @ (GHC.Word.Word32, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word32, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word32), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word32)
                                         @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word32)
                                            @ GHC.Word.Word32
                                            @ ()
                                            @~ <((), GHC.Word.Word32)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt33
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word32>_N <GHC.Word.Word32>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                        GHC.Word.Word32)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) #)) -}
7cdd4c468c0595853ca40311a5632e2a
  $w$crotate16 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word64,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word64,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word64 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCULLong35
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       @ GHC.Word.Word64
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       Data.Array.Accelerate.Data.Bits.$fBitsWord129
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord64,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       @ GHC.Word.Word64
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       Data.Array.Accelerate.Data.Bits.$fBitsWord129
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word64
                          @ (GHC.Word.Word64, GHC.Word.Word64)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word64, GHC.Word.Word64)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word64), GHC.Word.Word64)
                                @ GHC.Word.Word64
                                @ ((), GHC.Word.Word64)
                                @~ <(((), GHC.Word.Word64), GHC.Word.Word64)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word64)
                                   @ GHC.Word.Word64
                                   @ ()
                                   @~ <((), GHC.Word.Word64)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word64
                                      @ (GHC.Word.Word64, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word64, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word64), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word64)
                                            @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word64)
                                               @ GHC.Word.Word64
                                               @ ()
                                               @~ <((), GHC.Word.Word64)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word64
                                   @ (GHC.Word.Word64, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word64, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word64), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word64)
                                         @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word64)
                                            @ GHC.Word.Word64
                                            @ ()
                                            @~ <((), GHC.Word.Word64)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong33
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word64>_N <GHC.Word.Word64>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                        GHC.Word.Word64)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) #)) -}
b84068536d4aa8ea28164bf479e1b290
  $w$crotate17 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word8,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word8,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word8 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsWord169
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word8
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       @ GHC.Word.Word8
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       Data.Array.Accelerate.Data.Bits.$fBitsWord168
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord8,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       @ GHC.Word.Word8
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       Data.Array.Accelerate.Data.Bits.$fBitsWord168
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word8
                          @ (GHC.Word.Word8, GHC.Word.Word8)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord8
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word8, GHC.Word.Word8)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word8), GHC.Word.Word8)
                                @ GHC.Word.Word8
                                @ ((), GHC.Word.Word8)
                                @~ <(((), GHC.Word.Word8), GHC.Word.Word8)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word8)
                                   @ GHC.Word.Word8
                                   @ ()
                                   @~ <((), GHC.Word.Word8)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word8
                                      @ (GHC.Word.Word8, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word8, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word8), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word8)
                                            @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word8)
                                               @ GHC.Word.Word8
                                               @ ()
                                               @~ <((), GHC.Word.Word8)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word8
                                   @ (GHC.Word.Word8, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word8, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word8), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word8)
                                         @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word8)
                                            @ GHC.Word.Word8
                                            @ ()
                                            @~ <((), GHC.Word.Word8)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsWord167
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word8>_N <GHC.Word.Word8>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                        GHC.Word.Word8)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) #)) -}
a097f0423048bfb2b9dcb16561fa57e3
  $w$crotate2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CLong,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CLong #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCLLong39
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULong
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       @ Foreign.C.Types.CLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       Data.Array.Accelerate.Data.Bits.$fBitsCLong30
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCLong,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CLong
                       @ Foreign.C.Types.CULong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       Data.Array.Accelerate.Array.Sugar.$fEltCLong
                       Data.Array.Accelerate.Data.Bits.$fBitsCLong29
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CULong
                          @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCULong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                                @ Foreign.C.Types.CULong
                                @ ((), Foreign.C.Types.CULong)
                                @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CULong)
                                   @ Foreign.C.Types.CULong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CULong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CULong
                                      @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CULong)
                                            @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CULong)
                                               @ Foreign.C.Types.CULong
                                               @ ()
                                               @~ <((), Foreign.C.Types.CULong)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CULong>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CULong
                                   @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CULong)
                                         @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CULong)
                                            @ Foreign.C.Types.CULong
                                            @ ()
                                            @~ <((), Foreign.C.Types.CULong)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCLLong36
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N
                                                   <Foreign.C.Types.CULong>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CULong>_N
                                          <Foreign.C.Types.CULong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                        Foreign.C.Types.CULong)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CLong>_N) #)) -}
6e38a51fa03ae747447d288f98fde979
  $w$crotate3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CShort,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CShort #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCShort39
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       @ Foreign.C.Types.CShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       Data.Array.Accelerate.Data.Bits.$fBitsCShort38
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCShort,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CShort
                       @ Foreign.C.Types.CUShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCShort
                       Data.Array.Accelerate.Data.Bits.$fBitsCShort37
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CUShort
                          @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                                @ Foreign.C.Types.CUShort
                                @ ((), Foreign.C.Types.CUShort)
                                @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CUShort)
                                   @ Foreign.C.Types.CUShort
                                   @ ()
                                   @~ <((), Foreign.C.Types.CUShort)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CUShort
                                      @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CUShort)
                                            @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CUShort)
                                               @ Foreign.C.Types.CUShort
                                               @ ()
                                               @~ <((), Foreign.C.Types.CUShort)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CUShort>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CUShort
                                   @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CUShort)
                                         @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CUShort)
                                            @ Foreign.C.Types.CUShort
                                            @ ()
                                            @~ <((), Foreign.C.Types.CUShort)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort36
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N
                                                   <Foreign.C.Types.CUShort>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CUShort>_N
                                          <Foreign.C.Types.CUShort>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                        Foreign.C.Types.CUShort)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CShort>_N) #)) -}
3ecd3f719ed2759b32b6af6e5d3470d9
  $w$crotate4 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CUInt,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCUInt35
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUInt
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       @ Foreign.C.Types.CUInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCUInt34
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCUInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       @ Foreign.C.Types.CUInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCUInt34
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CUInt
                          @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CUInt, Foreign.C.Types.CUInt)
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)
                                @ Foreign.C.Types.CUInt
                                @ ((), Foreign.C.Types.CUInt)
                                @~ <(((), Foreign.C.Types.CUInt), Foreign.C.Types.CUInt)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CUInt)
                                   @ Foreign.C.Types.CUInt
                                   @ ()
                                   @~ <((), Foreign.C.Types.CUInt)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CUInt
                                      @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CUInt)
                                            @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CUInt)
                                               @ Foreign.C.Types.CUInt
                                               @ ()
                                               @~ <((), Foreign.C.Types.CUInt)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CUInt>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CUInt
                                   @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                   Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CUInt)
                                         @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CUInt)
                                            @ Foreign.C.Types.CUInt
                                            @ ()
                                            @~ <((), Foreign.C.Types.CUInt)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCUInt33
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CUInt>_N <Foreign.C.Types.CUInt>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                        Foreign.C.Types.CUInt)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) #)) -}
f304cbf9f59af7b9ab4aadb0e5addea0
  $w$crotate5 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            Foreign.C.Types.CULLong,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCULLong35
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       @ Foreign.C.Types.CULLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       Data.Array.Accelerate.Data.Bits.$fBitsCULLong34
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCULLong,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       @ Foreign.C.Types.CULLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       Data.Array.Accelerate.Data.Bits.$fBitsCULLong34
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CULLong
                          @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CULLong, Foreign.C.Types.CULLong)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)
                                @ Foreign.C.Types.CULLong
                                @ ((), Foreign.C.Types.CULLong)
                                @~ <(((), Foreign.C.Types.CULLong), Foreign.C.Types.CULLong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CULLong)
                                   @ Foreign.C.Types.CULLong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CULLong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CULLong
                                      @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CULLong)
                                            @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CULLong)
                                               @ Foreign.C.Types.CULLong
                                               @ ()
                                               @~ <((), Foreign.C.Types.CULLong)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CULLong>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CULLong
                                   @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CULLong)
                                         @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CULLong)
                                            @ Foreign.C.Types.CULLong
                                            @ ()
                                            @~ <((), Foreign.C.Types.CULLong)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong33
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N
                                                   <Foreign.C.Types.CULLong>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CULLong>_N
                                          <Foreign.C.Types.CULLong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                        Foreign.C.Types.CULLong)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) #)) -}
3f682703d188aabdea512eb1703e1d13
  $w$crotate6 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CULong,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCULLong35
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULong
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       @ Foreign.C.Types.CULong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       Data.Array.Accelerate.Data.Bits.$fBitsCULong27
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCULong,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       @ Foreign.C.Types.CULong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       Data.Array.Accelerate.Data.Bits.$fBitsCULong27
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CULong
                          @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCULong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CULong, Foreign.C.Types.CULong)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)
                                @ Foreign.C.Types.CULong
                                @ ((), Foreign.C.Types.CULong)
                                @~ <(((), Foreign.C.Types.CULong), Foreign.C.Types.CULong)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CULong)
                                   @ Foreign.C.Types.CULong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CULong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CULong
                                      @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CULong)
                                            @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CULong)
                                               @ Foreign.C.Types.CULong
                                               @ ()
                                               @~ <((), Foreign.C.Types.CULong)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CULong>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CULong
                                   @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                   Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CULong, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CULong)
                                         @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CULong)
                                            @ Foreign.C.Types.CULong
                                            @ ()
                                            @~ <((), Foreign.C.Types.CULong)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCULLong33
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N
                                                   <Foreign.C.Types.CULong>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CULong>_N
                                          <Foreign.C.Types.CULong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                        Foreign.C.Types.CULong)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) #)) -}
cd914dd86846e68d7add8693295b83f9
  $w$crotate7 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            Foreign.C.Types.CUShort,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCUShort35
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       @ Foreign.C.Types.CUShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       Data.Array.Accelerate.Data.Bits.$fBitsCUShort34
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCUShort,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       @ Foreign.C.Types.CUShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       Data.Array.Accelerate.Data.Bits.$fBitsCUShort34
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CUShort
                          @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CUShort, Foreign.C.Types.CUShort)
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)
                                @ Foreign.C.Types.CUShort
                                @ ((), Foreign.C.Types.CUShort)
                                @~ <(((), Foreign.C.Types.CUShort), Foreign.C.Types.CUShort)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CUShort)
                                   @ Foreign.C.Types.CUShort
                                   @ ()
                                   @~ <((), Foreign.C.Types.CUShort)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Foreign.C.Types.CUShort
                                      @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), Foreign.C.Types.CUShort)
                                            @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), Foreign.C.Types.CUShort)
                                               @ Foreign.C.Types.CUShort
                                               @ ()
                                               @~ <((), Foreign.C.Types.CUShort)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N
                                                      <Foreign.C.Types.CUShort>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Foreign.C.Types.CUShort
                                   @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                   Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), Foreign.C.Types.CUShort)
                                         @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), Foreign.C.Types.CUShort)
                                            @ Foreign.C.Types.CUShort
                                            @ ()
                                            @~ <((), Foreign.C.Types.CUShort)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCUShort33
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N
                                                   <Foreign.C.Types.CUShort>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <Foreign.C.Types.CUShort>_N
                                          <Foreign.C.Types.CUShort>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                        Foreign.C.Types.CUShort)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) #)) -}
9f3c85659b2946f34dad661cf4868526
  $w$crotate8 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Int #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsInt38
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Types.Word
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       @ GHC.Types.Int
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       Data.Array.Accelerate.Data.Bits.$fBitsInt37
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ GHC.Types.Word
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsInt36
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Word
                          @ (GHC.Types.Word, GHC.Types.Word)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                          Data.Array.Accelerate.Array.Sugar.$fEltWord
                          Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Word, GHC.Types.Word)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl8
                             Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl6
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Word), GHC.Types.Word)
                                @ GHC.Types.Word
                                @ ((), GHC.Types.Word)
                                @~ <(((), GHC.Types.Word), GHC.Types.Word)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Word)
                                   @ GHC.Types.Word
                                   @ ()
                                   @~ <((), GHC.Types.Word)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Word
                                      @ (GHC.Types.Word, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl5
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Types.Word, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Types.Word), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Types.Word)
                                            @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Types.Word)
                                               @ GHC.Types.Word
                                               @ ()
                                               @~ <((), GHC.Types.Word)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Word
                                   @ (GHC.Types.Word, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl4
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Types.Word, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Types.Word), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Types.Word)
                                         @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Types.Word)
                                            @ GHC.Types.Word
                                            @ ()
                                            @~ <((), GHC.Types.Word)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsInt35
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Word>_N <GHC.Types.Word>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                        GHC.Types.Word)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N) #)) -}
06d7518b2e8805171ca16ef68405d15a
  $w$crotate9 ::
    Data.Array.Accelerate.Smart.Exp GHC.Int.Int16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Int.Int16,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int16,
          Data.Array.Accelerate.Smart.Exp GHC.Int.Int16 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Int.Int16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 let {
                   i' :: Data.Array.Accelerate.Array.Sugar.Tuple
                           Data.Array.Accelerate.Smart.Exp ((), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ ((), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ()
                       @~ <((), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Array.Sugar.$WNilTup
                          @ Data.Array.Accelerate.Smart.Exp)
                       w1
                 } in
                 let {
                   i'1 :: Data.Array.Accelerate.Array.Sugar.Tuple
                            Data.Array.Accelerate.Smart.Exp
                            (((), GHC.Types.Int), GHC.Types.Int)
                   = Data.Array.Accelerate.Array.Sugar.SnocTup
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (((), GHC.Types.Int), GHC.Types.Int)
                       @ GHC.Types.Int
                       @ ((), GHC.Types.Int)
                       @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       i'
                       Data.Array.Accelerate.Data.Bits.$fBitsCShort39
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   i'2 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            (GHC.Types.Int, GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.Tuple
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl15
                       i'1
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Tuple
                          <Data.Array.Accelerate.Smart.Exp>_R
                          (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                    <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R
                 } in
                 let {
                   i'3 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl14
                       i'2
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N)
                 } in
                 let {
                   x' :: Data.Array.Accelerate.Smart.PreExp
                           Data.Array.Accelerate.Smart.Acc
                           Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word16
                   = Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       @ GHC.Int.Int16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt16
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       Data.Array.Accelerate.Data.Bits.$fBitsInt76
                       w
                 } in
                 (# Data.Array.Accelerate.Array.Sugar.$fEltInt16,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl1
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl196
                          Data.Array.Accelerate.Classes.Eq.$fEqInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                i'3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    w,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Int.Int16
                       @ GHC.Word.Word16
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       Data.Array.Accelerate.Array.Sugar.$fEltInt16
                       Data.Array.Accelerate.Data.Bits.$fBitsInt75
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word16
                          @ (GHC.Word.Word16, GHC.Word.Word16)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                          Data.Array.Accelerate.Array.Sugar.$fEltWord16
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl12
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word16, GHC.Word.Word16)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl13
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl11
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word16), GHC.Word.Word16)
                                @ GHC.Word.Word16
                                @ ((), GHC.Word.Word16)
                                @~ <(((), GHC.Word.Word16), GHC.Word.Word16)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word16)
                                   @ GHC.Word.Word16
                                   @ ()
                                   @~ <((), GHC.Word.Word16)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   (Data.Array.Accelerate.Smart.PrimApp
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Word.Word16
                                      @ (GHC.Word.Word16, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                      Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl9
                                      (Data.Array.Accelerate.Smart.Tuple
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (GHC.Word.Word16, GHC.Types.Int)
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                         Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ (((), GHC.Word.Word16), GHC.Types.Int)
                                            @ GHC.Types.Int
                                            @ ((), GHC.Word.Word16)
                                            @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            (Data.Array.Accelerate.Array.Sugar.SnocTup
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ ((), GHC.Word.Word16)
                                               @ GHC.Word.Word16
                                               @ ()
                                               @~ <((), GHC.Word.Word16)>_N
                                               Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                               (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                                  @ Data.Array.Accelerate.Smart.Exp)
                                               x'
                                                 `cast`
                                               (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                            i'3
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Tuple
                                            <Data.Array.Accelerate.Smart.Exp>_R
                                            (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                      <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                                    GHC.Types.Int)>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                (Data.Array.Accelerate.Smart.PrimApp
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Word.Word16
                                   @ (GHC.Word.Word16, GHC.Types.Int)
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                   Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl7
                                   (Data.Array.Accelerate.Smart.Tuple
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (GHC.Word.Word16, GHC.Types.Int)
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                                      Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                                      (Data.Array.Accelerate.Array.Sugar.SnocTup
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (((), GHC.Word.Word16), GHC.Types.Int)
                                         @ GHC.Types.Int
                                         @ ((), GHC.Word.Word16)
                                         @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Array.Sugar.SnocTup
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ ((), GHC.Word.Word16)
                                            @ GHC.Word.Word16
                                            @ ()
                                            @~ <((), GHC.Word.Word16)>_N
                                            Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                            (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                               @ Data.Array.Accelerate.Smart.Exp)
                                            x'
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                                         (Data.Array.Accelerate.Smart.PrimApp
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ GHC.Types.Int
                                            @ (GHC.Types.Int, GHC.Types.Int)
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                            Data.Array.Accelerate.Array.Sugar.$fEltInt
                                            Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl1
                                            (Data.Array.Accelerate.Smart.Tuple
                                               @ Data.Array.Accelerate.Smart.Acc
                                               @ Data.Array.Accelerate.Smart.Exp
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl196
                                               Data.Array.Accelerate.Classes.Num.$fNumExp20_lvl199
                                               (Data.Array.Accelerate.Array.Sugar.SnocTup
                                                  @ Data.Array.Accelerate.Smart.Exp
                                                  @ (((), GHC.Types.Int), GHC.Types.Int)
                                                  @ GHC.Types.Int
                                                  @ ((), GHC.Types.Int)
                                                  @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                                  Data.Array.Accelerate.Data.Bits.$fBitsCShort36
                                                  i'3
                                                    `cast`
                                                  (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                                 `cast`
                                               (Data.Array.Accelerate.Array.Sugar.Tuple
                                                  <Data.Array.Accelerate.Smart.Exp>_R
                                                  (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                            <GHC.Types.Int>_N
                                                            <GHC.Types.Int>_N)))_R)
                                              `cast`
                                            (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                                          GHC.Types.Int)>_N))
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Tuple
                                         <Data.Array.Accelerate.Smart.Exp>_R
                                         (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                                   <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                                 GHC.Types.Int)>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Word.Word16>_N <GHC.Word.Word16>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                        GHC.Word.Word16)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Int.Int16>_N) #)) -}
b952259939046fdc8cdfa3752848b24a
  $w$sshiftDefault ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CUInt,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUInt #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUInt)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCUInt,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsCUInt10 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUInt
                       Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsCUInt6
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CUInt
                          @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CUInt, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsCInt_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CUInt), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CUInt)
                                @~ <(((), Foreign.C.Types.CUInt), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CUInt)
                                   @ Foreign.C.Types.CUInt
                                   @ ()
                                   @~ <((), Foreign.C.Types.CUInt)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CUInt>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUInt,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUInt>_N) #)) -}
9b985ad31049cf598306cd301052b9de
  $w$sshiftDefault1 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            Foreign.C.Types.CULLong,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULLong #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULLong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCULLong,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsCULLong10 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULLong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsCULLong6
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CULLong
                          @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CULLong, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsCLLong_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CULLong), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CULLong)
                                @~ <(((), Foreign.C.Types.CULLong), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CULLong)
                                   @ Foreign.C.Types.CULLong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CULLong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULLong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CULLong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULLong,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULLong>_N) #)) -}
278426dd61b1060157e5724aaba4fcb8
  $w$sshiftDefault2 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt Foreign.C.Types.CULong,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CULong #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CULong)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCULong,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsCULong8 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CULong
                       Data.Array.Accelerate.Array.Sugar.$fEltCULong
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsCULong6
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CULong
                          @ (Foreign.C.Types.CULong, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltCULong
                          Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CULong, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsCLong_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CULong), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CULong)
                                @~ <(((), Foreign.C.Types.CULong), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CULong)
                                   @ Foreign.C.Types.CULong
                                   @ ()
                                   @~ <((), Foreign.C.Types.CULong)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCULong
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CULong>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CULong,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CULong>_N) #)) -}
8c92e2173b10e1c8138e3a6a97dc17a0
  $w$sshiftDefault3 ::
    Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt
            Foreign.C.Types.CUShort,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort,
          Data.Array.Accelerate.Smart.Exp Foreign.C.Types.CUShort #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           Foreign.C.Types.CUShort)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltCUShort,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsCUShort10 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Foreign.C.Types.CUShort
                       Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsCUShort6
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ Foreign.C.Types.CUShort
                          @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                          Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Foreign.C.Types.CUShort, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsCShort_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), Foreign.C.Types.CUShort), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), Foreign.C.Types.CUShort)
                                @~ <(((), Foreign.C.Types.CUShort), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), Foreign.C.Types.CUShort)
                                   @ Foreign.C.Types.CUShort
                                   @ ()
                                   @~ <((), Foreign.C.Types.CUShort)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltCUShort
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <Foreign.C.Types.CUShort>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(Foreign.C.Types.CUShort,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <Foreign.C.Types.CUShort>_N) #)) -}
e607cf9778f79d612a26aee1a5e7cc8c
  $w$sshiftDefault4 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Word
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Types.Word,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Word,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Word #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Types.Word)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsWord10 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Word
                       Data.Array.Accelerate.Array.Sugar.$fEltWord
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsInt10
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsWord6
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Word
                          @ (GHC.Types.Word, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltWord
                          Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl4
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Word, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl196
                             Data.Array.Accelerate.Data.Bits.$fBitsInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Word), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Word)
                                @~ <(((), GHC.Types.Word), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Word)
                                   @ GHC.Types.Word
                                   @ ()
                                   @~ <((), GHC.Types.Word)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Word>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Word,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Word>_N) #)) -}
34894a5d8b39d8ba7ae96a22d41aacf5
  $w$sshiftDefault5 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word16
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word16,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word16,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word16 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word16)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord16,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsWord45 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word16
                       Data.Array.Accelerate.Array.Sugar.$fEltWord16
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCUShort8
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsWord43
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word16
                          @ (GHC.Word.Word16, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltWord16
                          Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word16, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsInt16_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word16), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Word.Word16)
                                @~ <(((), GHC.Word.Word16), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word16)
                                   @ GHC.Word.Word16
                                   @ ()
                                   @~ <((), GHC.Word.Word16)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord16
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Word.Word16>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word16,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word16>_N) #)) -}
2e5e8290121cd5a2272b2c130ac4ea43
  $w$sshiftDefault6 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word32
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word32,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word32,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word32 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word32)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord32,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsWord78 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word32
                       Data.Array.Accelerate.Array.Sugar.$fEltWord32
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCUInt8
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsWord76
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word32
                          @ (GHC.Word.Word32, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltWord32
                          Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word32, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsInt32_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word32), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Word.Word32)
                                @~ <(((), GHC.Word.Word32), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word32)
                                   @ GHC.Word.Word32
                                   @ ()
                                   @~ <((), GHC.Word.Word32)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord32
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Word.Word32>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word32,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word32>_N) #)) -}
d06314f96d2a66a93dcbf7883bd0e4a9
  $w$sshiftDefault7 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word64
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word64,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word64,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word64 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp
                           GHC.Word.Word64)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord64,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsWord110 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word64
                       Data.Array.Accelerate.Array.Sugar.$fEltWord64
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsCULLong8
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsWord108
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word64
                          @ (GHC.Word.Word64, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltWord64
                          Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word64, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsInt64_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word64), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Word.Word64)
                                @~ <(((), GHC.Word.Word64), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word64)
                                   @ GHC.Word.Word64
                                   @ ()
                                   @~ <((), GHC.Word.Word64)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord64
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Word.Word64>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word64,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word64>_N) #)) -}
a997ab98d43a07029ac49a25b0b253f0
  $w$sshiftDefault8 ::
    Data.Array.Accelerate.Smart.Exp GHC.Word.Word8
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> (# Data.Array.Accelerate.Array.Sugar.Elt GHC.Word.Word8,
          Data.Array.Accelerate.Smart.Exp GHC.Types.Bool,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word8,
          Data.Array.Accelerate.Smart.Exp GHC.Word.Word8 #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Array.Accelerate.Smart.Exp GHC.Word.Word8)
                   (w1 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int) ->
                 (# Data.Array.Accelerate.Array.Sugar.$fEltWord8,
                    (Data.Array.Accelerate.Smart.PrimApp
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Bool
                       @ (GHC.Types.Int, GHC.Types.Int)
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                       Data.Array.Accelerate.Array.Sugar.$fEltBool
                       Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                       (Data.Array.Accelerate.Smart.Tuple
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                          (Data.Array.Accelerate.Array.Sugar.SnocTup
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (((), GHC.Types.Int), GHC.Types.Int)
                             @ GHC.Types.Int
                             @ ((), GHC.Types.Int)
                             @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ ((), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ()
                                @~ <((), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                   @ Data.Array.Accelerate.Smart.Exp)
                                w1)
                             Data.Array.Accelerate.Data.Bits.$fBitsBool3
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Tuple
                             <Data.Array.Accelerate.Smart.Exp>_R
                             (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                       <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                     GHC.Types.Int)>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N),
                    (Data.Array.Accelerate.Data.Bits.$fBitsWord144 w w1)
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N),
                    let {
                      w2 :: Data.Array.Accelerate.Smart.PreExp
                              Data.Array.Accelerate.Smart.Acc
                              Data.Array.Accelerate.Smart.Exp
                              GHC.Types.Int
                      = Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ GHC.Types.Int
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          Data.Array.Accelerate.Data.Bits.$fBitsCUInt39
                          w1
                    } in
                    (Data.Array.Accelerate.Smart.Cond
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Word.Word8
                       Data.Array.Accelerate.Array.Sugar.$fEltWord8
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Bool
                          @ (GHC.Types.Int, GHC.Types.Int)
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                          Data.Array.Accelerate.Array.Sugar.$fEltBool
                          Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl2
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Types.Int, GHC.Types.Int)
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl196
                             Data.Array.Accelerate.Classes.Ord.$fOrdInt_lvl199
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Types.Int), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Types.Int)
                                @~ <(((), GHC.Types.Int), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Types.Int)
                                   @ GHC.Types.Int
                                   @ ()
                                   @~ <((), GHC.Types.Int)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                                Data.Array.Accelerate.Data.Bits.$fBitsWord142
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Types.Int>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Types.Int,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Bool>_N)
                       Data.Array.Accelerate.Data.Bits.$fBitsWord140
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N)
                       (Data.Array.Accelerate.Smart.PrimApp
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Word.Word8
                          @ (GHC.Word.Word8, GHC.Types.Int)
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                          Data.Array.Accelerate.Array.Sugar.$fEltWord8
                          Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl7
                          (Data.Array.Accelerate.Smart.Tuple
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (GHC.Word.Word8, GHC.Types.Int)
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl10
                             Data.Array.Accelerate.Data.Bits.$fBitsInt8_lvl8
                             (Data.Array.Accelerate.Array.Sugar.SnocTup
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (((), GHC.Word.Word8), GHC.Types.Int)
                                @ GHC.Types.Int
                                @ ((), GHC.Word.Word8)
                                @~ <(((), GHC.Word.Word8), GHC.Types.Int)>_N
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Array.Sugar.SnocTup
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((), GHC.Word.Word8)
                                   @ GHC.Word.Word8
                                   @ ()
                                   @~ <((), GHC.Word.Word8)>_N
                                   Data.Array.Accelerate.Array.Sugar.$fEltWord8
                                   (Data.Array.Accelerate.Array.Sugar.$WNilTup
                                      @ Data.Array.Accelerate.Smart.Exp)
                                   w)
                                w2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Tuple
                                <Data.Array.Accelerate.Smart.Exp>_R
                                (Sym (Data.Array.Accelerate.Product.D:R:ProdRepr(,)[0]
                                          <GHC.Types.Int>_N <GHC.Word.Word8>_N)))_R)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <(GHC.Word.Word8,
                                                                        GHC.Types.Int)>_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.N:Exp[0]) <GHC.Word.Word8>_N) #)) -}
ffc30e3a11ec8863801d4b177cafc2a2
  class Data.Array.Accelerate.Classes.Eq.Eq a => Bits a where
    (.&.) :: Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp a
    (.|.) :: Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp a
    xor :: Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
           -> Data.Array.Accelerate.Smart.Exp a
    complement :: Data.Array.Accelerate.Smart.Exp a
                  -> Data.Array.Accelerate.Smart.Exp a
    shift :: Data.Array.Accelerate.Smart.Exp a
             -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
             -> Data.Array.Accelerate.Smart.Exp a
    rotate :: Data.Array.Accelerate.Smart.Exp a
              -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
              -> Data.Array.Accelerate.Smart.Exp a
    zeroBits :: Data.Array.Accelerate.Smart.Exp a
    bit :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
           -> Data.Array.Accelerate.Smart.Exp a
    setBit :: Data.Array.Accelerate.Smart.Exp a
              -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
              -> Data.Array.Accelerate.Smart.Exp a
    clearBit :: Data.Array.Accelerate.Smart.Exp a
                -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                -> Data.Array.Accelerate.Smart.Exp a
    complementBit :: Data.Array.Accelerate.Smart.Exp a
                     -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                     -> Data.Array.Accelerate.Smart.Exp a
    testBit :: Data.Array.Accelerate.Smart.Exp a
               -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
               -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    isSigned :: Data.Array.Accelerate.Smart.Exp a
                -> Data.Array.Accelerate.Smart.Exp GHC.Types.Bool
    shiftL :: Data.Array.Accelerate.Smart.Exp a
              -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
              -> Data.Array.Accelerate.Smart.Exp a
    unsafeShiftL :: Data.Array.Accelerate.Smart.Exp a
                    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                    -> Data.Array.Accelerate.Smart.Exp a
    shiftR :: Data.Array.Accelerate.Smart.Exp a
              -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
              -> Data.Array.Accelerate.Smart.Exp a
    unsafeShiftR :: Data.Array.Accelerate.Smart.Exp a
                    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                    -> Data.Array.Accelerate.Smart.Exp a
    rotateL :: Data.Array.Accelerate.Smart.Exp a
               -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
               -> Data.Array.Accelerate.Smart.Exp a
    rotateR :: Data.Array.Accelerate.Smart.Exp a
               -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
               -> Data.Array.Accelerate.Smart.Exp a
    popCount :: Data.Array.Accelerate.Smart.Exp a
                -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    {-# MINIMAL (.&.),
                (.|.),
                xor,
                complement,
                (shift | shiftL, shiftR),
                (rotate | rotateL, rotateR), isSigned, testBit, bit, popCount #-}
5e8e15cd9b71d9716a10aced8fd7841a
  class Data.Array.Accelerate.Data.Bits.Bits b => FiniteBits b where
    finiteBitSize :: Data.Array.Accelerate.Smart.Exp b
                     -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    countLeadingZeros :: Data.Array.Accelerate.Smart.Exp b
                         -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    countTrailingZeros :: Data.Array.Accelerate.Smart.Exp b
                          -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    {-# MINIMAL finiteBitSize, countLeadingZeros,
                countTrailingZeros #-}
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Types.Bool]
  = Data.Array.Accelerate.Data.Bits.$fBitsBool
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CInt]
  = Data.Array.Accelerate.Data.Bits.$fBitsCInt
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CLLong]
  = Data.Array.Accelerate.Data.Bits.$fBitsCLLong
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CLong]
  = Data.Array.Accelerate.Data.Bits.$fBitsCLong
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CShort]
  = Data.Array.Accelerate.Data.Bits.$fBitsCShort
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CUInt]
  = Data.Array.Accelerate.Data.Bits.$fBitsCUInt
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CULLong]
  = Data.Array.Accelerate.Data.Bits.$fBitsCULLong
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CULong]
  = Data.Array.Accelerate.Data.Bits.$fBitsCULong
instance Data.Array.Accelerate.Data.Bits.Bits [Foreign.C.Types.CUShort]
  = Data.Array.Accelerate.Data.Bits.$fBitsCUShort
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Types.Int]
  = Data.Array.Accelerate.Data.Bits.$fBitsInt
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Int.Int16]
  = Data.Array.Accelerate.Data.Bits.$fBitsInt16
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Int.Int32]
  = Data.Array.Accelerate.Data.Bits.$fBitsInt32
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Int.Int64]
  = Data.Array.Accelerate.Data.Bits.$fBitsInt64
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Int.Int8]
  = Data.Array.Accelerate.Data.Bits.$fBitsInt8
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Types.Word]
  = Data.Array.Accelerate.Data.Bits.$fBitsWord
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Word.Word16]
  = Data.Array.Accelerate.Data.Bits.$fBitsWord16
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Word.Word32]
  = Data.Array.Accelerate.Data.Bits.$fBitsWord32
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Word.Word64]
  = Data.Array.Accelerate.Data.Bits.$fBitsWord64
instance Data.Array.Accelerate.Data.Bits.Bits [GHC.Word.Word8]
  = Data.Array.Accelerate.Data.Bits.$fBitsWord8
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Types.Bool]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsBool
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CInt]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCInt
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CLLong]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLLong
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CLong]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCLong
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CShort]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCShort
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CUInt]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUInt
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CULLong]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULLong
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CULong]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCULong
instance Data.Array.Accelerate.Data.Bits.FiniteBits [Foreign.C.Types.CUShort]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsCUShort
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Types.Int]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Int.Int16]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt16
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Int.Int32]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt32
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Int.Int64]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt64
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Int.Int8]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsInt8
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Types.Word]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Word.Word16]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord16
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Word.Word32]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord32
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Word.Word64]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord64
instance Data.Array.Accelerate.Data.Bits.FiniteBits [GHC.Word.Word8]
  = Data.Array.Accelerate.Data.Bits.$fFiniteBitsWord8
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

