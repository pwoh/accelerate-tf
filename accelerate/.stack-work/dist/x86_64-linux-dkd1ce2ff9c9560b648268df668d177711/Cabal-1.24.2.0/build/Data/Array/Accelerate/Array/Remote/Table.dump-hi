
==================== FINAL INTERFACE ====================
2017-08-29 05:28:06.588015 UTC

interface accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Remote.Table 8002
  interface hash: 27e4967571f2ce52102ca4f1b3473595
  ABI hash: 6ab3f30beee01b536fe83ae6f1d71779
  export-list hash: 1010c8edba7872ab6881c10ea39ef54c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b0e121ff2262ff82b299a5d26c7767d5
  sig of: Nothing
  used TH splices: True
  where
exports:
  Data.Array.Accelerate.Array.Remote.Table.free
  Data.Array.Accelerate.Array.Remote.Table.freeStable
  Data.Array.Accelerate.Array.Remote.Table.insertUnmanaged
  Data.Array.Accelerate.Array.Remote.Table.lookup
  Data.Array.Accelerate.Array.Remote.Table.makeStableArray
  Data.Array.Accelerate.Array.Remote.Table.makeWeakArrayData
  Data.Array.Accelerate.Array.Remote.Table.malloc
  Data.Array.Accelerate.Array.Remote.Table.new
  Data.Array.Accelerate.Array.Remote.Table.reclaim
  Data.Array.Accelerate.Array.Remote.Table.MemoryTable
  Data.Array.Accelerate.Array.Remote.Table.StableArray
module dependencies: Data.Array.Accelerate.AST
                     Data.Array.Accelerate.Analysis.Hash
                     Data.Array.Accelerate.Analysis.Hash.TH
                     Data.Array.Accelerate.Analysis.Match
                     Data.Array.Accelerate.Array.Data
                     Data.Array.Accelerate.Array.Remote.Class
                     Data.Array.Accelerate.Array.Remote.Nursery
                     Data.Array.Accelerate.Array.Representation
                     Data.Array.Accelerate.Array.Sugar
                     Data.Array.Accelerate.Array.Unique Data.Array.Accelerate.Debug
                     Data.Array.Accelerate.Debug.Flags
                     Data.Array.Accelerate.Debug.Monitoring
                     Data.Array.Accelerate.Debug.Stats Data.Array.Accelerate.Debug.Timed
                     Data.Array.Accelerate.Debug.Trace Data.Array.Accelerate.Error
                     Data.Array.Accelerate.Lifetime
                     Data.Array.Accelerate.Pretty.Graphviz
                     Data.Array.Accelerate.Pretty.Graphviz.Monad
                     Data.Array.Accelerate.Pretty.Graphviz.Type
                     Data.Array.Accelerate.Pretty.Print Data.Array.Accelerate.Product
                     Data.Array.Accelerate.Trafo.Base
                     Data.Array.Accelerate.Trafo.Substitution Data.Array.Accelerate.Type
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hashtables-1.2.1.1@hashtables-1.2.1.1-CvCXxmZFzjODUwEtnf4YU7
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unique-0@unique-0-9CJQKYGbqiDaFUmoekKeA
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         fclabels-2.0.3.2@fclabels-2.0.3.2-4EezQlp7n1w9uoh5Y3yxAt:Data.Label.Point
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Data
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Representation
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Array.Sugar
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Product
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Trafo.Base
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Trafo.Substitution
                         accelerate-1.0.0.0@accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw:Data.Array.Accelerate.Type
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  Data.Array.Accelerate.Array.Data 0f7788ba6235b9caff0f10d41744f81c
  exports: 2e401fd3c8bac4bea058169f3641bb3b
  AD_Bool 7ffaec16b24b1ff9d43a3359046a9a00
  AD_CChar 92dd07545ae1dcdf359ecbe34a806119
  AD_CDouble 716ec815a6012559f9395eab56963a5f
  AD_CFloat f2eab636bdc6cdaf119dcfd164e65975
  AD_CInt 036b3e72a6060e8f0ea752444f0cfc6a
  AD_CLLong e2381a0d64ff0c48b098195d51446042
  AD_CLong 7307d3f5dceef439285b4af4fe1e3639
  AD_CSChar 572fae3d3e2d2f2f88a108df5628c9ea
  AD_CShort 88d99a95ee31a0f333cc09c75268e2cc
  AD_CUChar c16a52040ea9259f2a43ca82bbb76761
  AD_CUInt 9b5b3735a7ba1de785b18236e3e24421
  AD_CULLong dcbf356e07c768fce74748b66f0d7001
  AD_CULong 604907820f53d54b3c978d017eef7af4
  AD_CUShort 45a6e1b256eb9f0970d4ebaa87873b13
  AD_Char ea14a42ad517382a17ae786c6bb80062
  AD_Double eade1c7a682bf1ae5979aae82b131749
  AD_Float cfd9f6f89c261d51c38d820c607e338e
  AD_Int f7a27541803f224f18617b47e19657ce
  AD_Int16 bfdb18a21792c2c87e3f30c860f9094f
  AD_Int32 2ab67ef30747cba891ef1176fd3087b5
  AD_Int64 69764889d805c447c2715c55bc088030
  AD_Int8 96db1aa6e36614005360c94313ceb800
  AD_Word e41aade05115521e7c269a9706a11a01
  AD_Word16 c0245e3e7f4da709edd6d582e134e05a
  AD_Word32 f9bb1beed35b7682db542142534827ce
  AD_Word64 eba48558a5841b20b23683e18ec3aa40
  AD_Word8 97b94fcf1999a96339827a429994eb66
  ArrayData 251ac8cc288dc0eb1e92b71f08b6e16e
  ArrayElt ff45a629a63c423d76148392bf0a84a4
  ArrayEltR ff45a629a63c423d76148392bf0a84a4
  ArrayEltRbool 59a7e3fcd10ac21348c994fba99befba
  ArrayEltRcchar 5b6a232646b69c449a8d3811386c5616
  ArrayEltRcdouble d114f59b1ca4c8326dc6c121e7e4ea28
  ArrayEltRcfloat 662c0ac72a33762f322b68378f98c2ce
  ArrayEltRchar 20249e70beed5e402bb60b8190ccb4d6
  ArrayEltRcint 63e2c96c9a239248e0237312d39125ef
  ArrayEltRcllong 5694830131405ad01bb4e3455f07c50c
  ArrayEltRclong a003220115f023943dd4522b4d424d4d
  ArrayEltRcschar af6ddba356e6b1e38d237fd1d8898fff
  ArrayEltRcshort c29968a7eb57c7c96dd82d1a5669e1fd
  ArrayEltRcuchar 9836c0dd4f7d2a8c95125105c719afbe
  ArrayEltRcuint f722561cab26cbe036cd4555c24a64d3
  ArrayEltRcullong bdaabfbb399d6a689ad6b4e0f0480ac2
  ArrayEltRculong 9555d145e4e0f9330dfbd63a5004839c
  ArrayEltRcushort 8928af3a323cac664903316621d99940
  ArrayEltRdouble 88c0c19adba8cf9b189e95d55720059c
  ArrayEltRfloat cc0d4700fcbe7137c8f49eb0fd7a288a
  ArrayEltRint cf973a872d678e7138e249922afb4198
  ArrayEltRint16 94f4d0a362d363b2491591b84941fa3c
  ArrayEltRint32 4f30d6c98dfebf2f3ff7230de68c88d6
  ArrayEltRint64 c75d076f93f5e3146a02eb5c72a575f0
  ArrayEltRint8 215e4a004f3e0ef088aa1b0699233fd8
  ArrayEltRword 5d08d76f0c16b0cb174190f7edc54056
  ArrayEltRword16 455c6f781c1aff31846b0d37e7d3b475
  ArrayEltRword32 85a7864a4a6042fd90581a8fb392b0f6
  ArrayEltRword64 74c00217b24e3c583be24eaf39d950c6
  ArrayEltRword8 afcfdd441f6fd4149bcb2113192b774b
  ArrayPtrs 7730299a757175918b51050a31ccccef
  arrayElt e29253eddc1bb846f1e15aba41b0967e
import  -/  Data.Array.Accelerate.Array.Remote.Class 5df3add7aed665043bdbc95bd79c53c0
  exports: 39f76bfc3c76412a4f6824f91d8c4b44
  PrimElt ccee7f76acd8658406856eb6d3c5c58e
  RemoteMemory 647dd81a1e6daa4de9564ac0e752c75c
  RemotePtr 311a41fce32ec8c5adf8389b3000dc19
  availableRemoteMem 3e8c117935bc77df34a37ae01134afa3
  castRemotePtr 8e40c8c4221c51c5a90606f8f5e935e6
  mallocRemote bce0094a73ed11cfa3c46d9053cd1809
  remoteAllocationSize c6ceb7507ce185fd75b9a49d97389c2b
  totalRemoteMem f45afddefca6d32a2fbd63f3a101b1a7
import  -/  Data.Array.Accelerate.Array.Remote.Nursery a49f901ebbfc4e2596e790cfd76f443b
  exports: 0cec5da3748423e84fe9b44d308cb1fd
  Nursery fcfe9b40459491839d5534fd8080cc0f
  Nursery c9736bbbb81177b21e76f9534e5d645e
  cleanup 7a24926adaa072cd9554f94f0a3afb5c
  insert 762a991b7254bf85e0f80563b1ab86a2
  lookup 8db35eb3456da0c9994f3e6cd908d8ed
  new 604ed8a3ed6d1356dd4884137c1ed556
  size 9771787de53e53567583dd91fb4e2ffd
import  -/  Data.Array.Accelerate.Array.Unique 90e2b2f850959b7fbd4fd9b5b72b1848
  exports: 1216d67c5ec81a0e89fcee38d45cba1e
  UniqueArray f0af8e3da78e0824d4c0a6abff37a9bb
  uniqueArrayData af6ec34708efa8256193f125e1302da9
  uniqueArrayId 285402a0088bdad2832010ecfa369927
import  -/  Data.Array.Accelerate.Debug 48fd217a26d4240434223974d5084c0c
  exports: 7e8587d30c425be122b3b310eb4ec0ea
import  -/  Data.Array.Accelerate.Debug.Flags 4ae65d880031597019ea1d1d62ef661e
  dump_gc 3f516b9cb45832ff1a83110fbafce5b1
  when 9fdd8c1574ce54f5f367255fbeed1288
import  -/  Data.Array.Accelerate.Debug.Monitoring c306cb0432a1d9ab3d42c81522d7d428
  decreaseCurrentBytesRemote 0966f881734130460d1a7ea5a07260ab
  didRemoteGC 5eac514c97e32355f03057698dc3e45e
  increaseCurrentBytesRemote e7a6a17f5634f7cfe707e15b17ab9642
import  -/  Data.Array.Accelerate.Debug.Trace 365190b9829a1554a2d495d3f4fb1682
  showFFloatSIBase 572e7eb53989d902ab58f67446571cb9
  traceIO bf3190e68fbfa59511d56a82757db26c
import  -/  Data.Array.Accelerate.Error 9ed2d4a71009d558f562e118e9d36a23
  exports: f46a01ad5e78f9618f7a91c4ba90bc31
  Internal 354d17f13fa8c5b135052bcadc13dc67
  call 95bf4b02947c8c3e282c15050c022fa9
  internalError aa331c50846093a3a39d2946a445c28d
  message 43164dbb4cecc9911948fd9ecaf0a042
import  -/  Data.Array.Accelerate.Lifetime dccc4581e69e69822b307d39d332cf71
  exports: 9c5e91865914f3275ef494bdd0dc57ea
  addFinalizer 302d7a434e6192ab1f3b8121adcad03b
  mkWeak 9b569a5cef186afe8ac403b1907e8987
import  -/  base-4.9.1.0:Control.Concurrent 2ee6a0a58489520b9a96d8fef10380fa
import  -/  base-4.9.1.0:Control.Concurrent.MVar 1e4f68fc63da1d1a554d5258431dd0c6
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Proxy d7f87a37cf7ec5ca87c59c8d2859031f
import  -/  base-4.9.1.0:Data.Type.Equality e58d97d060ef5a0f7906bf33d6e50df2
import  -/  base-4.9.1.0:Data.Typeable 9257e47d10882145c67c5b489965cfb7
import  -/  base-4.9.1.0:Data.Typeable.Internal 0e9bdefa4325a0112d8e73b5e1e1f85d
import  -/  base-4.9.1.0:Data.Word 77f42e01d0fb6b071f1ea2176d87fa6c
import  -/  base-4.9.1.0:Foreign.Storable 085c8d7f42ceec1dbb4e818f06339b9d
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Exts 26da1d42716da321d2d8df514b70012a
import  -/  base-4.9.1.0:GHC.MVar 2b6c6f2887cffa9e72fc08229ba0f346
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Ptr 427a6ad9312f04edb98e0f5b7c4e2596
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:GHC.Weak d858f2ea485b32b834c9359490c9096f
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Mem 4fc740d48c748ae0a8af2287969defdf
import  -/  base-4.9.1.0:System.Mem.Weak a4b32e71ac550b6c495fe15abe3b80d2
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable 27b03ff780e9d73195c5aaa1719f6919
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class a1b222b41dee000240e3f24bda9d56d9
import  -/  hashtables-1.2.1.1@hashtables-1.2.1.1-CvCXxmZFzjODUwEtnf4YU7:Data.HashTable.IO f47b4486acd7885cd54517bc141fe8b4
import  -/  unique-0@unique-0-9CJQKYGbqiDaFUmoekKeA:Control.Concurrent.Unique 4973fdc4b52162f5b7303e979ebdbe8a
addDependentFile "/home/pwoh/.stack/programs/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux-dkd1ce2ff9c9560b648268df668d177711/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
20e391ee06ad286bf66b76c95abe69fd
  $fEqStableArray ::
    GHC.Classes.Eq Data.Array.Accelerate.Array.Remote.Table.StableArray
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                  Data.Array.Accelerate.Array.Remote.Table.$fEqStableArray_$c==
                  Data.Array.Accelerate.Array.Remote.Table.$fEqStableArray_$c/= -}
20e391ee06ad286bf66b76c95abe69fd
  $fEqStableArray_$c/= ::
    Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Control.Concurrent.Unique.$fEqUnique_$c/=
                  `cast`
                (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])
                 ->_R Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])
                 ->_R <GHC.Types.Bool>_R) -}
20e391ee06ad286bf66b76c95abe69fd
  $fEqStableArray_$c== ::
    Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LS),1*U(A,U)><S(LS),1*U(A,U)>,
     Unfolding: InlineRule (0, True, True)
                Control.Concurrent.Unique.$fEqUnique_$c==
                  `cast`
                (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])
                 ->_R Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])
                 ->_R <GHC.Types.Bool>_R) -}
20e391ee06ad286bf66b76c95abe69fd
  $fHashableStableArray ::
    Data.Hashable.Class.Hashable
      Data.Array.Accelerate.Array.Remote.Table.StableArray
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                  Data.Array.Accelerate.Array.Remote.Table.$fHashableStableArray_$chashWithSalt
                  Data.Array.Accelerate.Array.Remote.Table.$fHashableStableArray_$chash -}
20e391ee06ad286bf66b76c95abe69fd
  $fHashableStableArray_$chash ::
    Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(U,A)>m,
     Unfolding: InlineRule (0, True, True)
                Control.Concurrent.Unique.$fHashableUnique_$chash
                  `cast`
                (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])
                 ->_R <GHC.Types.Int>_R) -}
20e391ee06ad286bf66b76c95abe69fd
  $fHashableStableArray_$chashWithSalt ::
    GHC.Types.Int
    -> Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(SL),1*U(U,A)>m,
     Unfolding: InlineRule (0, True, True)
                Control.Concurrent.Unique.$fHashableUnique_$chashWithSalt
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])
                 ->_R <GHC.Types.Int>_R) -}
20e391ee06ad286bf66b76c95abe69fd
  $fShowStableArray ::
    GHC.Show.Show Data.Array.Accelerate.Array.Remote.Table.StableArray
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                  Data.Array.Accelerate.Array.Remote.Table.$fShowStableArray_$cshowsPrec
                  Data.Array.Accelerate.Array.Remote.Table.$fShowStableArray_$cshow
                  Data.Array.Accelerate.Array.Remote.Table.$fShowStableArray_$cshowList -}
20e391ee06ad286bf66b76c95abe69fd
  $fShowStableArray1 ::
    Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (x :: Data.Array.Accelerate.Array.Remote.Table.StableArray)
                   (s :: GHC.Base.String)[OneShot] ->
                 case x `cast`
                      (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0]) of wild { Control.Concurrent.Unique.Unique dt ds1 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        dt
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                   s } }) -}
20e391ee06ad286bf66b76c95abe69fd
  $fShowStableArray_$cshow ::
    Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(U,A)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Array.Accelerate.Array.Remote.Table.StableArray) ->
                 case ds
                        `cast`
                      (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0]) of wild { Control.Concurrent.Unique.Unique dt ds1 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        dt
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
20e391ee06ad286bf66b76c95abe69fd
  $fShowStableArray_$cshowList ::
    [Data.Array.Accelerate.Array.Remote.Table.StableArray]
    -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (ls :: [Data.Array.Accelerate.Array.Remote.Table.StableArray])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                   Data.Array.Accelerate.Array.Remote.Table.$fShowStableArray1
                   ls
                   s) -}
20e391ee06ad286bf66b76c95abe69fd
  $fShowStableArray_$cshowsPrec ::
    GHC.Types.Int
    -> Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><S(SL),1*U(U,A)><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Data.Array.Accelerate.Array.Remote.Table.StableArray)
                   (s :: GHC.Base.String) ->
                 case x `cast`
                      (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0]) of wild { Control.Concurrent.Unique.Unique dt ds1 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        dt
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (GHC.Types.: @ GHC.Types.Char ww5 ww6))
                   s } }) -}
2015c9b4bc87fe13e144b1ef897b8d6b
  $tc'MemoryTable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16845812973118635002##
                   7128276588425265847##
                   Data.Array.Accelerate.Array.Remote.Table.$trModule
                   Data.Array.Accelerate.Array.Remote.Table.$tc'MemoryTable1) -}
418e5b6be26b2fda3b16203936bd18ac
  $tc'MemoryTable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'MemoryTable"#) -}
e3d55a843394e43bf8042a5738614d90
  $tc'RemoteArray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15067186460799618591##
                   8168182182037715384##
                   Data.Array.Accelerate.Array.Remote.Table.$trModule
                   Data.Array.Accelerate.Array.Remote.Table.$tc'RemoteArray1) -}
45c86b3cc1b2f53c8d709884f7953884
  $tc'RemoteArray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RemoteArray"#) -}
0956985e129674da0c511115ca599057
  $tc'StableArray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9749697603468347552##
                   1531694626368661590##
                   Data.Array.Accelerate.Array.Remote.Table.$trModule
                   Data.Array.Accelerate.Array.Remote.Table.$tc'StableArray1) -}
2ada600d497451a21c0b9446d9be9a58
  $tc'StableArray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'StableArray"#) -}
8863aa371b6ec21598d74c0bbca99caa
  $tcMemoryTable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2259450682354848655##
                   11325768219837532511##
                   Data.Array.Accelerate.Array.Remote.Table.$trModule
                   Data.Array.Accelerate.Array.Remote.Table.$tcMemoryTable1) -}
332cf8a79899403335f8f3f362cc6e68
  $tcMemoryTable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MemoryTable"#) -}
85a3f14496d42309b93c18b00f10605d
  $tcRemoteArray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17151984754683573033##
                   17408442303600398978##
                   Data.Array.Accelerate.Array.Remote.Table.$trModule
                   Data.Array.Accelerate.Array.Remote.Table.$tcRemoteArray1) -}
0a6d16d8a32e40dd434b20a8e9a13cb7
  $tcRemoteArray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RemoteArray"#) -}
3663b7ddea4246555e4d5cb7f493cc6a
  $tcStableArray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1214335274692353144##
                   17164978866944306209##
                   Data.Array.Accelerate.Array.Remote.Table.$trModule
                   Data.Array.Accelerate.Array.Remote.Table.$tcStableArray1) -}
c5c8cf8297da4b9e20a7b772261e4aa2
  $tcStableArray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "StableArray"#) -}
1a161b73ff84c81df219e166173c6073
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Array.Accelerate.Array.Remote.Table.$trModule2
                   Data.Array.Accelerate.Array.Remote.Table.$trModule1) -}
880b09644f5847e7722d878ac7023a7e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Data.Array.Accelerate.Array.Remote.Table"#) -}
c93e103784d8c09c581122d257234119
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#) -}
44e0d9453c5e077547fbda3db9c0b99c
  $wclean ::
    (Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m,
     Control.Monad.IO.Class.MonadIO m) =>
    GHC.Prim.MVar#
      GHC.Prim.RealWorld
      (Data.Array.Accelerate.Array.Remote.Table.HashTable
         Data.Array.Accelerate.Array.Remote.Table.StableArray
         (Data.Array.Accelerate.Array.Remote.Table.RemoteArray
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Table.MT
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld
         (Data.Array.Accelerate.Array.Remote.Nursery.N
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Nursery.NRS
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> m ()
  {- Arity: 6,
     Strictness: <S(LSLLLLLLLLL),U(A,1*U,A,A,A,A,A,C(C1(U)),U,U,A)><L,U(U,C(U))><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
c44aafe6cd1f2780a9c3195c749e9452
  $wfree ::
    (Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m,
     Data.Array.Accelerate.Array.Remote.Class.PrimElt a b) =>
    proxy m
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld
         (Data.Array.Accelerate.Array.Remote.Table.HashTable
            Data.Array.Accelerate.Array.Remote.Table.StableArray
            (Data.Array.Accelerate.Array.Remote.Table.RemoteArray
               (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Table.MT
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld
         (Data.Array.Accelerate.Array.Remote.Nursery.N
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Nursery.NRS
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <L,U(A,A,A,A,A,A,A,C(C1(U)),A,A,A)><S(S(SLLLLLLLL)LSLL),U(1*U(1*U,A,A,A,A,A,A,A,A),A,1*U,A,A)><L,U><S,U><L,A><L,U><L,U><S,1*U><S,U>,
     Inline: [0] -}
07a8276face974c05f0f847781c5b351
  $wfreeStable ::
    Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m =>
    proxy m
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld
         (Data.Array.Accelerate.Array.Remote.Table.HashTable
            Data.Array.Accelerate.Array.Remote.Table.StableArray
            (Data.Array.Accelerate.Array.Remote.Table.RemoteArray
               (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Table.MT
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld
         (Data.Array.Accelerate.Array.Remote.Nursery.N
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Nursery.NRS
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <L,U(A,A,A,A,A,A,A,C(C1(U)),A,A,A)><L,U><S,U><L,A><L,U><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
107e37e4c79434552a57168a3a1cec20
  $winsertUnmanaged ::
    (Data.Array.Accelerate.Array.Remote.Class.PrimElt a b,
     Control.Monad.IO.Class.MonadIO m) =>
    GHC.Prim.MVar#
      GHC.Prim.RealWorld
      (Data.Array.Accelerate.Array.Remote.Table.HashTable
         Data.Array.Accelerate.Array.Remote.Table.StableArray
         (Data.Array.Accelerate.Array.Remote.Table.RemoteArray p))
    -> GHC.Prim.Weak# (Data.Array.Accelerate.Array.Remote.Table.MT p)
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld (Data.Array.Accelerate.Array.Remote.Nursery.N p)
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Nursery.NRS p)
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> p b
    -> m ()
  {- Arity: 8,
     Strictness: <S(LLSLL),U(1*U,A,1*U,A,1*U)><S(SL),U(U(U,U,U,U,U),U)><L,U><L,U><L,A><L,A><S,1*U><S,1*U>,
     Inline: [0] -}
9158261d38743d12afde729be6fd3285
  $wlookup ::
    Data.Array.Accelerate.Array.Remote.Class.PrimElt a b =>
    GHC.Prim.MVar#
      GHC.Prim.RealWorld
      (Data.Array.Accelerate.Array.Remote.Table.HashTable
         Data.Array.Accelerate.Array.Remote.Table.StableArray
         (Data.Array.Accelerate.Array.Remote.Table.RemoteArray p))
    -> GHC.Prim.Weak# (Data.Array.Accelerate.Array.Remote.Table.MT p)
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld (Data.Array.Accelerate.Array.Remote.Nursery.N p)
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Nursery.NRS p)
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.Maybe (p b) #)
  {- Arity: 7,
     Strictness: <S(SLSLL),U(1*U,A,1*U,A,1*C1(U(U,U,A,A,A)))><S,U><L,A><L,A><L,A><S,1*U><S,U>,
     Inline: [0] -}
73b1c12e5c58637554b8f4620372f15c
  $wpurge ::
    (Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m,
     Control.Monad.IO.Class.MonadIO m) =>
    GHC.Prim.MVar#
      GHC.Prim.RealWorld
      (Data.Array.Accelerate.Array.Remote.Table.HashTable
         Data.Array.Accelerate.Array.Remote.Table.StableArray
         (Data.Array.Accelerate.Array.Remote.Table.RemoteArray
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Table.MT
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld
         (Data.Array.Accelerate.Array.Remote.Nursery.N
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> GHC.Prim.Weak#
         (Data.Array.Accelerate.Array.Remote.Nursery.NRS
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
    -> (Data.Array.Accelerate.Array.Remote.Class.RemotePtr
          m GHC.Word.Word8
        -> GHC.Types.IO ())
    -> m ()
  {- Arity: 7, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLL),U(A,1*U,A,A,A,A,A,A,U,U,A)><L,U(U,C(U))><L,A><L,A><L,U><L,U><L,C(C1(U(U,U)))>,
     Inline: [0] -}
bc2b4a77327d90c3f504f5287399eadc
  type HashTable key val = Data.HashTable.IO.BasicHashTable key val
2db2b38b57647d29b000990ac2a0d12e
  type MT (p :: * -> *) =
    GHC.MVar.MVar
      (Data.Array.Accelerate.Array.Remote.Table.HashTable
         Data.Array.Accelerate.Array.Remote.Table.StableArray
         (Data.Array.Accelerate.Array.Remote.Table.RemoteArray p))
1746c8fc88667410412c8a843b75f65d
  type role MemoryTable nominal
  data MemoryTable (p :: * -> *)
    = MemoryTable {-# UNPACK #-}(Data.Array.Accelerate.Array.Remote.Table.MT
                                   p)
                  {-# UNPACK #-}(GHC.Weak.Weak
                                   (Data.Array.Accelerate.Array.Remote.Table.MT p))
                  {-# UNPACK #-}(Data.Array.Accelerate.Array.Remote.Nursery.Nursery
                                   p)
                  (p GHC.Word.Word8 -> GHC.Types.IO ())
7296ca433b1ad7750957d347e096b7a3
  data RemoteArray (p :: * -> *) where
    RemoteArray :: Data.Typeable.Internal.Typeable e =>
                   {-# UNPACK #-}(GHC.Weak.Weak ()) -> !(p e)
                   -> {-# UNPACK #-}GHC.Types.Int -> RemoteArray p
20e391ee06ad286bf66b76c95abe69fd
  newtype StableArray = StableArray Control.Concurrent.Unique.Unique
a0643490fb2e785e6492899e77c3f5e9
  free ::
    (Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m,
     Data.Array.Accelerate.Array.Remote.Class.PrimElt a b) =>
    proxy m
    -> Data.Array.Accelerate.Array.Remote.Table.MemoryTable
         (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <L,U(A,A,A,A,A,A,A,C(C1(U)),A,A,A)><S(S(SLLLLLLLL)LSLL),U(1*U(1*U,A,A,A,A,A,A,A,A),A,1*U,A,A)><L,U><S(SLLLL),1*U(U,A,U,U,A)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Remote.Table.free1
                  `cast`
                (forall (m :: <*
                               -> *>_N) (a :: <GHC.Types.*>_N) (b :: <*>_N) (proxy :: <(* -> *)
                                                                                       -> *>_N).
                 <Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m>_R
                 ->_R <Data.Array.Accelerate.Array.Remote.Class.PrimElt a b>_R
                 ->_R <proxy m>_R
                 ->_R <Data.Array.Accelerate.Array.Remote.Table.MemoryTable
                         (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)>_R
                 ->_R <Data.Array.Accelerate.Array.Data.ArrayData a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
e96bcceec7260637bc0e8e9afe1acf82
  free1 ::
    (Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m,
     Data.Array.Accelerate.Array.Remote.Class.PrimElt a b) =>
    proxy m
    -> Data.Array.Accelerate.Array.Remote.Table.MemoryTable
         (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(A,A,A,A,A,A,A,C(C1(U)),A,A,A)><S(S(SLLLLLLLL)LSLL),U(1*U(1*U,A,A,A,A,A,A,A,A),A,1*U,A,A)><L,U><S(SLLLL),1*U(U,A,U,U,A)><S,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ (m :: * -> *)
                   @ a
                   @ b
                   @ (proxy :: (* -> *) -> *)
                   (w :: Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m)
                   (w1 :: Data.Array.Accelerate.Array.Remote.Class.PrimElt a b)
                   (w2 :: proxy m)
                   (w3 :: Data.Array.Accelerate.Array.Remote.Table.MemoryTable
                            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
                   (w4 :: Data.Array.Accelerate.Array.Data.ArrayData a)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w3 of ww { Data.Array.Accelerate.Array.Remote.Table.MemoryTable ww1 ww2 ww3 ww4 ww5 ->
                 Data.Array.Accelerate.Array.Remote.Table.$wfree
                   @ m
                   @ a
                   @ b
                   @ proxy
                   w
                   w1
                   w2
                   ww1
                   ww2
                   ww3
                   ww4
                   w4
                   w5 }) -}
4ce47b3114ad9015c9ebb8a5352de083
  freeStable ::
    Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m =>
    proxy m
    -> Data.Array.Accelerate.Array.Remote.Table.MemoryTable
         (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)
    -> Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(A,A,A,A,A,A,A,C(C1(U)),A,A,A)><L,U><S(SLLLL),1*U(U,A,U,U,A)><S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Remote.Table.freeStable1
                  `cast`
                (forall (m :: <* -> *>_N) (proxy :: <(* -> *) -> *>_N).
                 <Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m>_R
                 ->_R <proxy m>_R
                 ->_R <Data.Array.Accelerate.Array.Remote.Table.MemoryTable
                         (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)>_R
                 ->_R <Data.Array.Accelerate.Array.Remote.Table.StableArray>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4cbe61d52425f30c63941946ec29a365
  freeStable1 ::
    Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m =>
    proxy m
    -> Data.Array.Accelerate.Array.Remote.Table.MemoryTable
         (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)
    -> Data.Array.Accelerate.Array.Remote.Table.StableArray
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(A,A,A,A,A,A,A,C(C1(U)),A,A,A)><L,U><S(SLLLL),1*U(U,A,U,U,A)><S,1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ (m :: * -> *)
                   @ (proxy :: (* -> *) -> *)
                   (w :: Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m)
                   (w1 :: proxy m)
                   (w2 :: Data.Array.Accelerate.Array.Remote.Table.MemoryTable
                            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m))
                   (w3 :: Data.Array.Accelerate.Array.Remote.Table.StableArray)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Data.Array.Accelerate.Array.Remote.Table.MemoryTable ww1 ww2 ww3 ww4 ww5 ->
                 case w3
                        `cast`
                      (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0]) of ww6 { Control.Concurrent.Unique.Unique ww7 ww8 ->
                 Data.Array.Accelerate.Array.Remote.Table.$wfreeStable
                   @ m
                   @ proxy
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww7
                   ww8
                   w4 } }) -}
5f8f59276ab663688fbd7c44cf0d5d47
  insertUnmanaged ::
    (Data.Array.Accelerate.Array.Remote.Class.PrimElt a b,
     Control.Monad.IO.Class.MonadIO m) =>
    Data.Array.Accelerate.Array.Remote.Table.MemoryTable p
    -> Data.Array.Accelerate.Array.Data.ArrayData a -> p b -> m ()
  {- Arity: 5,
     Strictness: <S(LLSLL),U(1*U,A,1*U,A,1*U)><S(SL),U(U(U,U,U,U,U),U)><S,1*U(U,U,A,A,A)><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ b
                   @ (m :: * -> *)
                   @ (p :: * -> *)
                   (w :: Data.Array.Accelerate.Array.Remote.Class.PrimElt a b)
                   (w1 :: Control.Monad.IO.Class.MonadIO m)
                   (w2 :: Data.Array.Accelerate.Array.Remote.Table.MemoryTable p)
                   (w3 :: Data.Array.Accelerate.Array.Data.ArrayData a)
                   (w4 :: p b) ->
                 case w2 of ww { Data.Array.Accelerate.Array.Remote.Table.MemoryTable ww1 ww2 ww3 ww4 ww5 ->
                 Data.Array.Accelerate.Array.Remote.Table.$winsertUnmanaged
                   @ a
                   @ b
                   @ m
                   @ p
                   w
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   w3
                   w4 }) -}
048fc094019bfd0636e71bc9a43ed0a2
  lookup ::
    Data.Array.Accelerate.Array.Remote.Class.PrimElt a b =>
    Data.Array.Accelerate.Array.Remote.Table.MemoryTable p
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> GHC.Types.IO (GHC.Base.Maybe (p b))
  {- Arity: 4,
     Strictness: <S(SLSLL),U(1*U,A,1*U,A,1*C1(U(U,U,A,A,A)))><S(SLLLL),1*U(U,A,A,A,A)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Remote.Table.lookup1
                  `cast`
                (forall (a :: <GHC.Types.*>_N) (b :: <*>_N) (p :: <* -> *>_N).
                 <Data.Array.Accelerate.Array.Remote.Class.PrimElt a b>_R
                 ->_R <Data.Array.Accelerate.Array.Remote.Table.MemoryTable p>_R
                 ->_R <Data.Array.Accelerate.Array.Data.ArrayData a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe (p b)>_R)) -}
def8cd8116799823902e574c8347a6a1
  lookup1 ::
    Data.Array.Accelerate.Array.Remote.Class.PrimElt a b =>
    Data.Array.Accelerate.Array.Remote.Table.MemoryTable p
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.Maybe (p b) #)
  {- Arity: 4,
     Strictness: <S(SLSLL),U(1*U,A,1*U,A,1*C1(U(U,U,A,A,A)))><S(SLLLL),1*U(U,A,A,A,A)><S,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   @ (p :: * -> *)
                   (w :: Data.Array.Accelerate.Array.Remote.Class.PrimElt a b)
                   (w1 :: Data.Array.Accelerate.Array.Remote.Table.MemoryTable p)
                   (w2 :: Data.Array.Accelerate.Array.Data.ArrayData a)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Data.Array.Accelerate.Array.Remote.Table.MemoryTable ww1 ww2 ww3 ww4 ww5 ->
                 Data.Array.Accelerate.Array.Remote.Table.$wlookup
                   @ a
                   @ b
                   @ p
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2
                   w3 }) -}
b5d5a12d794d8ede71f18972f00b57a9
  makeStableArray ::
    (Control.Monad.IO.Class.MonadIO m,
     Data.Typeable.Internal.Typeable a,
     Data.Typeable.Internal.Typeable e,
     Data.Array.Accelerate.Array.Data.ArrayPtrs a
     Data.Type.Equality.~ GHC.Ptr.Ptr e,
     Data.Array.Accelerate.Array.Data.ArrayElt a) =>
    Data.Array.Accelerate.Array.Data.ArrayData a
    -> m Data.Array.Accelerate.Array.Remote.Table.StableArray
  {- Arity: 6,
     Strictness: <S(S(LLLC(S)L)L),1*U(1*U(A,A,A,1*C1(U),A),A)><L,A><L,A><S(S),1*U(1*U)><S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (6, False, False)
                (\ @ (m :: * -> *)
                   @ a
                   @ e
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   ($dTypeable :: Data.Typeable.Internal.Typeable a)
                   ($dTypeable1 :: Data.Typeable.Internal.Typeable e)
                   ($d~ :: Data.Array.Accelerate.Array.Data.ArrayPtrs a
                           Data.Type.Equality.~ GHC.Ptr.Ptr e)
                   ($dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt a)
                   (eta :: Data.Array.Accelerate.Array.Data.ArrayData a) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Data.Array.Accelerate.Array.Data.ArrayPtrs a)
                        @ (GHC.Ptr.Ptr e)
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Data.Array.Accelerate.Array.Data.ArrayPtrs a>_N <GHC.Ptr.Ptr
                                                                                       e>_N) of cobox0 { DEFAULT ->
                 case eta of ad { DEFAULT ->
                 case Data.Array.Accelerate.Array.Data.arrayElt
                        @ a
                        $dArrayElt of wild {
                   DEFAULT
                   -> case GHC.Err.error
                             @ 'GHC.Types.PtrRepLifted
                             @ Control.Concurrent.Unique.Unique
                             (GHC.Stack.Types.PushCallStack
                                (GHC.Base.build
                                   @ GHC.Types.Char
                                   (\ @ b -> GHC.CString.unpackFoldrCString# @ b "error"#))
                                (GHC.Stack.Types.SrcLoc
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b
                                         "accelerate-1.0.0.0-5KTewgBt554ICR3vZPllxw"#))
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b
                                         "Data.Array.Accelerate.Array.Remote.Table"#))
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b ->
                                       GHC.CString.unpackFoldrCString#
                                         @ b
                                         "./Data/Array/Accelerate/Array/Remote/Table.hs"#))
                                   (GHC.Types.I# 382#)
                                   (GHC.Types.I# 43#)
                                   (GHC.Types.I# 382#)
                                   (GHC.Types.I# 106#))
                                GHC.Stack.Types.EmptyCallStack)
                               `cast`
                             (Sym (GHC.Classes.N:IP[0]
                                       <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b
                                   "I do have a cause, though. It is obscenity. I'm for it."#))
                      ret_ty (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                      of {}
                   Data.Array.Accelerate.Array.Data.ArrayEltRint cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaInt0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Int ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Types.Int
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRint8 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaInt80[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Int8 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int8
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRint16 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaInt160[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Int16 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int16
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRint32 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaInt320[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Int32 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int32
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRint64 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaInt640[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Int64 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int64
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRword cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaWord0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Word ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Types.Word
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRword8 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaWord80[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Word8 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word8
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRword16 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaWord160[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Word16 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word16
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRword32 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaWord320[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Word32 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word32
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRword64 cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaWord640[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Word64 ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word64
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcshort cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCShort0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CShort ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int16
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcushort cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCUShort0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CUShort ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word16
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcint cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCInt0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CInt ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int32
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcuint cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCUInt0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CUInt ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word32
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRclong cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCLong0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CLong ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ Data.Array.Accelerate.Array.Data.HTYPE_LONG
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRculong cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCULong0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CULong ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ Data.Array.Accelerate.Array.Data.HTYPE_UNSIGNED_LONG
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcllong cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCLLong0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CLLong ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int64
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcullong cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCULLong0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CULLong ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word64
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRfloat cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaFloat0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Float ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Types.Float
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRdouble cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaDouble0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Double ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Types.Double
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcfloat cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCFloat0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CFloat ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Types.Float
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcdouble cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCDouble0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CDouble ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Types.Double
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRbool cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaBool0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Bool ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word8
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRchar cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaChar0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_Char ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Types.Char
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcchar cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCChar0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CChar ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ Data.Array.Accelerate.Array.Data.HTYPE_CCHAR
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcschar cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCSChar0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CSChar ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Int.Int8
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) }
                   Data.Array.Accelerate.Array.Data.ArrayEltRcuchar cobox1
                   -> case ad
                             `cast`
                           (Trans
                                (Data.Array.Accelerate.Array.Data.GArrayData
                                   <Data.Array.Accelerate.Array.Unique.UniqueArray>_N cobox1)_R
                                (Data.Array.Accelerate.Array.Data.D:R:GArrayDatabaCUChar0[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)) of wild1 { Data.Array.Accelerate.Array.Data.AD_CUChar ua ->
                      GHC.Base.$!
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (m Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (GHC.Base.return
                           @ m
                           (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                           @ Data.Array.Accelerate.Array.Remote.Table.StableArray)
                        (Data.Array.Accelerate.Array.Unique.uniqueArrayId
                           @ GHC.Word.Word8
                           ua)
                          `cast`
                        (Sym (Data.Array.Accelerate.Array.Remote.Table.N:StableArray[0])) } } } }) -}
f9a7109408bb8cc48efe0d5e31b61718
  makeWeakArrayData ::
    (Data.Array.Accelerate.Array.Data.ArrayElt e,
     Data.Array.Accelerate.Array.Data.ArrayPtrs e
     Data.Type.Equality.~ GHC.Ptr.Ptr a) =>
    Data.Array.Accelerate.Array.Data.ArrayData e
    -> c
    -> GHC.Base.Maybe (GHC.Types.IO ())
    -> GHC.Types.IO (GHC.Weak.Weak c)
  {- Arity: 6,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)><S(S),1*U(1*U)><S,1*U><S,1*U><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Remote.Table.makeWeakArrayData1
                  `cast`
                (forall (a :: <*>_N) (e :: <GHC.Types.*>_N) (c :: <*>_N).
                 <Data.Array.Accelerate.Array.Data.ArrayElt e>_R
                 ->_R <Data.Array.Accelerate.Array.Data.ArrayPtrs e
                       Data.Type.Equality.~ GHC.Ptr.Ptr a>_R
                 ->_R <Data.Array.Accelerate.Array.Data.ArrayData e>_R
                 ->_R <c>_R
                 ->_R <GHC.Base.Maybe (GHC.Types.IO ())>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Weak.Weak c>_R)) -}
4aed5a93ea5da51fd1d7b260a52e08a0
  makeWeakArrayData1 ::
    (Data.Array.Accelerate.Array.Data.ArrayElt e,
     Data.Array.Accelerate.Array.Data.ArrayPtrs e
     Data.Type.Equality.~ GHC.Ptr.Ptr a) =>
    Data.Array.Accelerate.Array.Data.ArrayData e
    -> c
    -> GHC.Base.Maybe (GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Weak.Weak c #)
  {- Arity: 6,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)><S(S),1*U(1*U)><S,1*U><S,1*U><S,1*U><S,U> -}
e65251185ad97138e98275a77dd7c710
  malloc ::
    (Data.Array.Accelerate.Array.Remote.Class.PrimElt a b,
     Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m,
     Control.Monad.IO.Class.MonadIO m) =>
    Data.Array.Accelerate.Array.Remote.Table.MemoryTable
      (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)
    -> Data.Array.Accelerate.Array.Data.ArrayData a
    -> GHC.Types.Int
    -> m (GHC.Base.Maybe
            (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m b))
  {- Arity: 3,
     Strictness: <S(LLS(S)LL),U(1*U,1*U(1*C1(U(U)),A,A,A,A,A,A,A),U(U),A,1*U)><L,U(1*U,U,A,A,C(U),A,A,C(U),U,U,1*U)><L,U(U(U,U,U,U,U),U)> -}
27276fe5ff78984c5ddca618548ecb74
  new ::
    (forall a. ptr a -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Remote.Table.MemoryTable ptr)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Remote.Table.new1
                  `cast`
                (forall (ptr :: <* -> *>_N).
                 <forall a. ptr a -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Array.Accelerate.Array.Remote.Table.MemoryTable ptr>_R)) -}
9ce68901bde2e09593badcee4c2ce573
  new1 ::
    (forall a. ptr a -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Array.Accelerate.Array.Remote.Table.MemoryTable ptr #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ @ (ptr :: * -> *)
                   (release :: forall a. ptr a -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.HashTable.Internal.Utils.$wnextBestPrime
                        Data.Array.Accelerate.Array.Remote.Table.new3 of ww { DEFAULT ->
                 case Data.HashTable.ST.Basic.$wnewSizedReal
                        @ GHC.Prim.RealWorld
                        @ Data.Array.Accelerate.Array.Remote.Table.StableArray
                        @ (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr)
                        ww
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.newMutVar#
                        @ (Data.HashTable.ST.Basic.HashTable_
                             GHC.Prim.RealWorld
                             Data.Array.Accelerate.Array.Remote.Table.StableArray
                             (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr))
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newMVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.HashTable.IO.IOHashTable
                             Data.HashTable.ST.Basic.HashTable
                             Data.Array.Accelerate.Array.Remote.Table.StableArray
                             (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr))
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.putMVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.HashTable.IO.IOHashTable
                             Data.HashTable.ST.Basic.HashTable
                             Data.Array.Accelerate.Array.Remote.Table.StableArray
                             (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr))
                        ipv5
                        (GHC.STRef.STRef
                           @ GHC.Prim.RealWorld
                           @ (Data.HashTable.ST.Basic.HashTable_
                                GHC.Prim.RealWorld
                                Data.Array.Accelerate.Array.Remote.Table.StableArray
                                (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr))
                           ipv3)
                          `cast`
                        (Sym (Data.HashTable.ST.Basic.N:HashTable[0]
                                  (Control.Monad.Primitive.D:R:PrimStateIO[0])
                                  <Data.Array.Accelerate.Array.Remote.Table.StableArray>_R
                                  <Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr>_R))
                        ipv4 of s2# { DEFAULT ->
                 case (Data.Array.Accelerate.Array.Remote.Nursery.new
                         @ ptr
                         (release @ GHC.Word.Word8))
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Array.Accelerate.Array.Remote.Nursery.Nursery ptr>_R)
                        s2# of ds3 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.mkWeak#
                        @ 'GHC.Types.PtrRepUnlifted
                        @ (GHC.Prim.MVar#
                             GHC.Prim.RealWorld
                             (Data.HashTable.IO.IOHashTable
                                Data.HashTable.ST.Basic.HashTable
                                Data.Array.Accelerate.Array.Remote.Table.StableArray
                                (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr)))
                        @ (GHC.MVar.MVar
                             (Data.HashTable.IO.IOHashTable
                                Data.HashTable.ST.Basic.HashTable
                                Data.Array.Accelerate.Array.Remote.Table.StableArray
                                (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr)))
                        @ ()
                        ipv5
                        (GHC.MVar.MVar
                           @ (Data.HashTable.IO.IOHashTable
                                Data.HashTable.ST.Basic.HashTable
                                Data.Array.Accelerate.Array.Remote.Table.StableArray
                                (Data.Array.Accelerate.Array.Remote.Table.RemoteArray ptr))
                           ipv5)
                        Data.Array.Accelerate.Array.Remote.Table.new2
                        ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                 case ipv7 of dt { Data.Array.Accelerate.Array.Remote.Nursery.Nursery dt1 dt2 ->
                 (# ipv8,
                    Data.Array.Accelerate.Array.Remote.Table.MemoryTable
                      @ ptr
                      ipv5
                      ipv9
                      dt1
                      dt2
                      (release @ GHC.Word.Word8) #) } } } } } } } }) -}
9b8bd85a4a6c94601ac914481d77307d
  new2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, GHC.Tuple.() #)) -}
6d09745b93558c0ff8cd119a256a189a
  new3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
5b76a1691d67d885d0b93ffc5af0b575
  reclaim ::
    (Data.Array.Accelerate.Array.Remote.Class.RemoteMemory m,
     Control.Monad.IO.Class.MonadIO m) =>
    Data.Array.Accelerate.Array.Remote.Table.MemoryTable
      (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)
    -> m ()
  {- Arity: 3,
     Strictness: <S(LS(LLC(C(S))LL)LLLLLLLLL),U(A,U(U,U,U,U,U),A,A,A,A,A,C(C1(U)),U,U,A)><L,U(U,C(U))><L,U(U,U,U,U,C(C1(U(U,U))))>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dRemoteMemory :: Data.Array.Accelerate.Array.Remote.Class.RemoteMemory
                                        m)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   (eta :: Data.Array.Accelerate.Array.Remote.Table.MemoryTable
                             (Data.Array.Accelerate.Array.Remote.Class.RemotePtr m)) ->
                 GHC.Base.>>
                   @ m
                   (Data.Array.Accelerate.Array.Remote.Class.$p2RemoteMemory
                      @ m
                      $dRemoteMemory)
                   @ ()
                   @ ()
                   (case eta of ww { Data.Array.Accelerate.Array.Remote.Table.MemoryTable ww1 ww2 ww3 ww4 ww5 ->
                    Data.Array.Accelerate.Array.Remote.Table.$wclean
                      @ m
                      $dRemoteMemory
                      $dMonadIO
                      ww1
                      ww2
                      ww3
                      ww4 })
                   (case eta of ww { Data.Array.Accelerate.Array.Remote.Table.MemoryTable ww1 ww2 ww3 ww4 ww5 ->
                    Data.Array.Accelerate.Array.Remote.Table.$wpurge
                      @ m
                      $dRemoteMemory
                      $dMonadIO
                      ww1
                      ww2
                      ww3
                      ww4
                      ww5 })) -}
instance GHC.Classes.Eq [Data.Array.Accelerate.Array.Remote.Table.StableArray]
  = Data.Array.Accelerate.Array.Remote.Table.$fEqStableArray
instance Data.Hashable.Class.Hashable [Data.Array.Accelerate.Array.Remote.Table.StableArray]
  = Data.Array.Accelerate.Array.Remote.Table.$fHashableStableArray
instance GHC.Show.Show [Data.Array.Accelerate.Array.Remote.Table.StableArray]
  = Data.Array.Accelerate.Array.Remote.Table.$fShowStableArray
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

